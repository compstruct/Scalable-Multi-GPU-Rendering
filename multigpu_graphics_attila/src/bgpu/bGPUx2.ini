#
#
# bGPU Simulator
#
# Configuration File
#
# 30/11/2004
#

[SIMULATOR]

InputFile = "gltrace-sphere"
SimCycles = 10000
SimFrames = 1
SignalDumpFile = "signaltrace.txt"
StatsFile = "stats.csv"
StatsFilePerFrame = "stats.frame.csv"
StatsFilePerBatch = "stats.batch.csv"
StartFrame = 0
StartSignalDump = 0
SignalDumpCycles = 10000
StatisticsRate = 1000
DumpSignalTrace = FALSE
Statistics = FALSE
PerCycleStatistics = TRUE
PerFrameStatistics = FALSE
PerBatchStatistics = FALSE
GenerateFragmentMap = FALSE
#
#  Latency map modes
#
#  0 : latency of the fragment since it was generated until it was written into the
#      color buffer.
#
FragmentMapMode = 0
DoubleBuffer = FALSE
ForceMSAA = FALSE
MSAASamples = 4
ForceFP16ColorBuffer = FALSE
ObjectSize0 = 512
BucketSize0 = 32768
ObjectSize1 = 4096
BucketSize1 = 2048
ObjectSize2 = 64
BucketSize2 = 32768
UseACD = FALSE

[GPU]

NumVertexShaders = 4
NumFragmentShaders = 2
NumStampPipes = 2

[COMMANDPROCESSOR]

PipelinedBatchRendering = TRUE



[MEMORYCONTROLLER]

MemorySize = 67108864
MemoryClockMultiplier = 1
MemoryFrequency = 1
MemoryBusWidth = 64
MemoryBuses = 4
SharedBanks = FALSE
BankGranurality = 1024
BurstLength = 8
ReadLatency = 10
WriteLatency = 6
WriteToReadLatency = 6
MemoryPageSize = 4096
OpenPages = 1
PageOpenLatency = 20
MaxConsecutiveReads = 16
MaxConsecutiveWrites = 16
CommandProcessorBusWidth = 8
StreamerFetchBusWidth = 64
StreamerLoaderBusWidth = 64
ZStencilBusWidth = 64
ColorWriteBusWidth = 64
DACBusWidth = 64
TextureUnitBusWidth = 64
MappedMemorySize = 16777216
ReadBufferLines = 32
WriteBufferLines = 32
RequestQueueSize = 64
ServiceQueueSize = 32


[STREAMER]

IndicesCycle = 1
IndexBufferSize = 1024
OutputFIFOSize = 64
OutputMemorySize = 48
VerticesCycle = 4
AttributesSentCycle = 4
StreamerLoaderUnits = 1
#
# Individual Streamer Loader Unit parameters
#
SLIndicesCycle = 1
SLInputRequestQueueSize = 8
SLAttributesCycle = 4
SLInputCacheLines = 32
SLInputCacheLineSize = 64
SLInputCachePortWidth = 16
SLInputCacheRequestQueueSize = 4
SLInputCacheInputQueueSize = 4


[VERTEXSHADER]

ExecutableThreads = 10
InputBuffers = 4
ThreadResources = 128
ThreadRate = 1
FetchRate = 1
ThreadGroup = 1
LockedExecutionMode = FALSE
#
#  Enabling the scalar ALU requires FetchRate to be 2.
#
ScalarALU = FALSE
ThreadWindow = TRUE
FetchDelay = 0
SwapOnBlock = FALSE
InputsPerCycle = 1
OutputsPerCycle = 1
OutputLatency = 11


[PRIMITIVEASSEMBLY]

VerticesCycle = 1
TrianglesCycle = 1
InputBusLatency = 10
AssemblyQueueSize = 8


[CLIPPER]

TrianglesCycle = 1
ClipperUnits = 1
StartLatency = 1
ExecLatency = 6
ClipBufferSize = 4


[RASTERIZER]

TrianglesCycle = 1
SetupFIFOSize = 12
SetupUnits = 1
SetupLatency = 10
SetupStartLatency = 4
TriangleInputLatency = 2
TriangleOutputLatency = 2
TriangleSetupOnShader = FALSE
TriangleShaderQueueSize = 8
StampsPerCycle = 2
MSAASamplesCycle = 2
OverScanWidth = 4
OverScanHeight = 4
ScanWidth = 16
ScanHeight = 16
GenWidth = 8
GenHeight = 8
RasterizationBatchSize = 4
BatchQueueSize = 16
RecursiveMode = TRUE
DisableHZ = FALSE
StampsPerHZBlock = 16
HierarchicalZBufferSize = 262144
HZCacheLines = 8
HZCacheLineSize = 16
EarlyZQueueSize =  64
HZAccessLatency =  5
HZUpdateLatency =  4
HZBlocksClearedPerCycle = 256
NumInterpolators = 4
ShaderInputQueueSize = 16
ShaderOutputQueueSize = 16
ShaderInputBatchSize = 256
TiledShaderDistribution = TRUE
#
#  This two parameters are only for the unified shader version.
#
VertexInputQueueSize = 16
ShadedVertexQueueSize = 48
TriangleInputQueueSize = 8
TriangleOutputQueueSize = 8

GeneratedStampQueueSize = 128
EarlyZTestedStampQueueSize = 32
InterpolatedStampQueueSize = 16
ShadedStampQueueSize = 128
EmulatorStoredTriangles = 32
#
# Micropolygon Rasterizer parameters
#
# if FALSE then uses the classic rasterizer unit
UseMicroPolygonRasterizer = FALSE
TriangleBoundOutputLatency = 2
TriangleBoundOpLatency = 2
LargeTriangleFIFOSize = 16
MicroTriangleFIFOSize = 8
BypassStampFIFOSize = 256
MicroTriangleBypass = FALSE
#
# Options are:
#        0: Bypass 1-pixel covering triangles only,
#        1: Bypass 1-pixel and 1-stamp covering triangles,
#        2: Bypass any triangle covering up to 4-stamps.
#
BypassMode = 0
DumpTriangleBurstSizeHistogram = FALSE

[FRAGMENTSHADER]

ExecutableThreads = 240
InputBuffers = 16
ThreadResources = 240
ThreadRate = 4
FetchRate = 1
ThreadGroup = 4
LockedExecutionMode = TRUE

#
# Vector Shader parameters.
#
VectorShader = FALSE
VectorThreads = 128
VectorResources = 512
VectorALUWidth = 4
VectorFetchRate = 2
VectorLength = 16

#
#  Enabling the scalar ALU requires FetchRate to be 2.
#
ScalarALU = FALSE
ThreadWindow = TRUE
FetchDelay = 0
SwapOnBlock = FALSE
InputsPerCycle = 4
OutputsPerCycle = 4
OutputLatency = 11
TextureUnits = 1
TextureRequestRate = 1
TextureRequestGroup = 64
AddressALULatency = 6
FilterALULatency = 4

AnisotropyAlgorithm = 2
TextureBlockDimension = 3
TextureSuperBlockDimension = 3
TextureRequestQueueSize = 4
TextureAccessQueue = 64
TextureResultQueue = 4
TextureWaitReadWindow = 32
TwoLevelTextureCache = FALSE
TextureCacheLineSize = 256
TextureCacheWays = 4
TextureCacheLines = 16
TextureCachePortWidth = 4
TextureCacheRequestQueueSize = 4
TextureCacheInputQueue = 4
TextureCacheLineSizeL1 = 256
TextureCacheWaysL1 = 4
TextureCacheLinesL1 = 16
TextureCacheInputQueueL1 = 4
TextureCacheMissesPerCycle = 1
TextureCacheDecompressLatency = 4

[ZSTENCILTEST]

StampsPerCycle = 1
BytesPerPixel = 4
DisableCompression = FALSE
ZCacheWays = 4
ZCacheLines = 16
ZCacheStampsPerLine = 16
ZCachePortWidth = 32
ZCacheExtraReadPort = TRUE
ZCacheExtraWritePort = TRUE
ZCacheRequestQueueSize = 8
ZCacheInputQueueSize = 8
ZCacheOutputQueueSize = 8
BlockStateMemorySize = 262144
BlocksClearedPerCycle = 1024
CompressionUnitLatency = 8
DecompressionUnitLatency = 8
#ZQueueSize = 64
InputQueueSize = 8
FetchQueueSize = 64
ReadQueueSize = 16
OpQueueSize = 4
WriteQueueSize = 8
ZALUTestRate = 1
ZALULatency = 2

[COLORWRITE]

StampsPerCycle = 1
BytesPerPixel = 4
DisableCompression = FALSE
ColorCacheWays = 4
ColorCacheLines = 16
ColorCacheStampsPerLine = 16
ColorCachePortWidth = 32
ColorCacheExtraReadPort = TRUE
ColorCacheExtraWritePort = TRUE
ColorCacheRequestQueueSize = 8
ColorCacheInputQueueSize = 8
ColorCacheOutputQueueSize = 8
BlockStateMemorySize = 262144
BlocksClearedPerCycle = 1024
CompressionUnitLatency = 8
DecompressionUnitLatency = 8
#ColorQueueSize = 64
InputQueueSize = 8
FetchQueueSize = 64
ReadQueueSize = 16
OpQueueSize = 4
WriteQueueSize = 8
BlendALURate = 1
BlendALULatency = 2

[DAC]

BytesPerPixel = 4
BlockSize = 256
BlockUpdateLatency = 1
BlocksUpdatedPerCycle = 1024
BlockRequestQueueSize = 32
#
# While we use the DAC just to dump the frame after each swap
# we can dismiss the real decompression latency to speed up the
# dumping.
#
#DecompressionUnitLatency = 8
DecompressionUnitLatency = 1
RefreshRate = 5000000
SynchedRefresh = TRUE
RefreshFrame = TRUE

[SIGNALS]

#
#  CommandProcessor signals.
#

StreamerControl = 1:1
StreamerState = 1:1
CommShaderCommand = 1:1
PrimitiveAssemblyCommand = 1:1
PrimitiveAssembblyCommandState = 1:1
ClipperCommand = 1:1
ClipperCommandState = 1:1
RasterizerCommand = 1:1
RasterizerState = 1:1


#
#  MemoryController Signals
#

CommProcMemoryRead = 2:1
CommProcMemoryWrite = 2:1
StreamerLoaderMemoryData = 2:1
StreamerLoaderMemoryRequest = 1:1
StreamerFetchMemoryData = 2:1
StreamerFetchMemoryRequest = 1:1
MemoryModule = 1:1


#
#  Streamer Signals
#

StreamerFetchCommand = 1:1
StreamerFetchState = 1:1
StreamerOutputCacheCommand = 1:1
StreamerLoaderCommand = 1:1
StreamerCommitCommand = 1:1
StreamerCommitState = 1:1
StreamerOutputCache = 1:1
StreamerOCUpdate = 1:1
StreamerLoaderNewIndex = 1:1
StreamerCommitNewIndex = 1:1
StreamerCommitDeAlloc = 2:1
StreamerCommitDeAllocOC = 1:1


#
#  Shader Signals
#

ShaderCommand = 1:1
ShaderState = 1:1
ConsumerState = 1:1
ShaderOutput = 1:1
ShaderInstruction = 1:1
ShaderNewPC = 2:1
ShaderDecodeState = 1:1
ShaderExecution = 2:9


#
#  PrimitiveAssembly Signals
#

PrimitiveAssemblyInput = 1:10
PrimitiveAssemblyRequest = 1:1


#
#  Clipper Signals
#

ClipperInput = 1:1
ClipperState = 1:1
ClipperExecution = 1:6


#
#  Rasterizer Signals
#

TriangleSetupCommand = 1:1
TriangleSetupRasterizerState = 1:1
TriangleSetupNewTriangle = 1:2
TriangleSetupState = 1:1
TriangleSetup = 1:8
TriangleSetupOutput = 1:2
TriangleSetupRequest = 1:1
TriangleTraversalCommand = 1:1
TriangleTraversalState = 1:1
InterpolatorCommand = 1:1
InterpolatorRasterizerState = 1:1
InterpolatorNewFragment = 4:1
InterpolatorState = 1:1
Interpolation = 4:8
FFIFORasterizerCommand = 1:1
FFIFORasterizerState = 1:1
FragmentFIFO = 4:1
FragmentFIFOState = 1:1


