/////////////////////////////////////////////////
// This file has been automatically generated  //
// Do not modify this file                     //
/////////////////////////////////////////////////

#include "glWrapper.h"
#include "Specific.h"
#include "SpecificStats.h"
#include <cstdlib> // for support exit() call

#define _W GLInterceptor::tw
#define _JT GLInterceptor::jt
#define _COUNT(call) GLInterceptor::statManager.incCall(call)
#define _ISHACK GLInterceptor::isHackMode()
#define RESOLVE_CALL(call) ((unsigned long *)(&_JT))[APICall_##call] = (unsigned long)_JT.wglGetProcAddress(#call)
#define CHECKCALL(call) if (_JT.##call == NULL) { RESOLVE_CALL(call); if (_JT.##call == NULL) { panic("Wrapper.cpp", "Call cannot be resolved", #call); }}

void GLAPIENTRY glAccum(GLenum op, GLfloat value)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAccum);
    _COUNT(APICall_glAccum);
    CHECKCALL(glAccum);
    DO_REAL_CALL(glAccum(op,value));
    _W.writeAPICall(APICall_glAccum);
    _W.writeMark("(");
    _W.writeEnum(op);
    _W.writeMark(",");
    _W.write(value);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAccum);
}

void GLAPIENTRY glActiveStencilFaceEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glActiveStencilFaceEXT);
    _COUNT(APICall_glActiveStencilFaceEXT);
    CHECKCALL(glActiveStencilFaceEXT);
    DO_REAL_CALL(glActiveStencilFaceEXT(_p0));
    _W.writeAPICall(APICall_glActiveStencilFaceEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glActiveStencilFaceEXT);
}

void GLAPIENTRY glActiveTexture(GLenum texture)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glActiveTexture);
    _COUNT(APICall_glActiveTexture);
    CHECKCALL(glActiveTexture);
    DO_REAL_CALL(glActiveTexture(texture));
    _W.writeAPICall(APICall_glActiveTexture);
    _W.writeMark("(");
    _W.writeEnum(texture);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glActiveTexture);
}

void GLAPIENTRY glActiveTextureARB(GLenum texture)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glActiveTextureARB);
    _COUNT(APICall_glActiveTextureARB);
    CHECKCALL(glActiveTextureARB);
    DO_REAL_CALL(glActiveTextureARB(texture));
    _W.writeAPICall(APICall_glActiveTextureARB);
    _W.writeMark("(");
    _W.writeEnum(texture);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glActiveTextureARB);
}

void GLAPIENTRY glActiveVaryingNV(GLuint _p0, const GLchar *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glActiveVaryingNV);
    _COUNT(APICall_glActiveVaryingNV);
    CHECKCALL(glActiveVaryingNV);
    DO_REAL_CALL(glActiveVaryingNV(_p0,_p1));
    _W.writeAPICall(APICall_glActiveVaryingNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glActiveVaryingNV);
}

void GLAPIENTRY glAlphaFragmentOp1ATI(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAlphaFragmentOp1ATI);
    _COUNT(APICall_glAlphaFragmentOp1ATI);
    CHECKCALL(glAlphaFragmentOp1ATI);
    DO_REAL_CALL(glAlphaFragmentOp1ATI(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glAlphaFragmentOp1ATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAlphaFragmentOp1ATI);
}

void GLAPIENTRY glAlphaFragmentOp2ATI(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5, GLuint _p6, GLuint _p7, GLuint _p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAlphaFragmentOp2ATI);
    _COUNT(APICall_glAlphaFragmentOp2ATI);
    CHECKCALL(glAlphaFragmentOp2ATI);
    DO_REAL_CALL(glAlphaFragmentOp2ATI(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glAlphaFragmentOp2ATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAlphaFragmentOp2ATI);
}

void GLAPIENTRY glAlphaFragmentOp3ATI(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5, GLuint _p6, GLuint _p7, GLuint _p8, GLuint _p9, GLuint _p10, GLuint _p11)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAlphaFragmentOp3ATI);
    _COUNT(APICall_glAlphaFragmentOp3ATI);
    CHECKCALL(glAlphaFragmentOp3ATI);
    DO_REAL_CALL(glAlphaFragmentOp3ATI(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11));
    _W.writeAPICall(APICall_glAlphaFragmentOp3ATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(",");
    _W.write(_p10);
    _W.writeMark(",");
    _W.write(_p11);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAlphaFragmentOp3ATI);
}

void GLAPIENTRY glAlphaFunc(GLenum func, GLclampf ref)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAlphaFunc);
    _COUNT(APICall_glAlphaFunc);
    CHECKCALL(glAlphaFunc);
    DO_REAL_CALL(glAlphaFunc(func,ref));
    _W.writeAPICall(APICall_glAlphaFunc);
    _W.writeMark("(");
    _W.writeEnum(func);
    _W.writeMark(",");
    _W.write(ref);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAlphaFunc);
}

void GLAPIENTRY glApplyTextureEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glApplyTextureEXT);
    _COUNT(APICall_glApplyTextureEXT);
    CHECKCALL(glApplyTextureEXT);
    DO_REAL_CALL(glApplyTextureEXT(_p0));
    _W.writeAPICall(APICall_glApplyTextureEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glApplyTextureEXT);
}

GLboolean GLAPIENTRY glAreProgramsResidentNV(GLsizei _p0, const GLuint *_p1, GLboolean *_p2)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAreProgramsResidentNV);
    _COUNT(APICall_glAreProgramsResidentNV);
    CHECKCALL(glAreProgramsResidentNV);
    _result = DO_REAL_CALL(glAreProgramsResidentNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glAreProgramsResidentNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAreProgramsResidentNV);
    return _result;
}

GLboolean GLAPIENTRY glAreTexturesResident(GLsizei n, const GLuint *textures, GLboolean *residences)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAreTexturesResident);
    _COUNT(APICall_glAreTexturesResident);
    CHECKCALL(glAreTexturesResident);
    _result = DO_REAL_CALL(glAreTexturesResident(n,textures,residences));
    _W.writeAPICall(APICall_glAreTexturesResident);
    _W.writeMark("(");
    _W.write(n);
    _W.writeMark(",");
    _W.writeUnknown(&textures);
    _W.writeMark(",");
    _W.writeUnknown(&residences);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAreTexturesResident);
    return _result;
}

GLboolean GLAPIENTRY glAreTexturesResidentEXT(GLsizei _p0, const GLuint *_p1, GLboolean *_p2)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAreTexturesResidentEXT);
    _COUNT(APICall_glAreTexturesResidentEXT);
    CHECKCALL(glAreTexturesResidentEXT);
    _result = DO_REAL_CALL(glAreTexturesResidentEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glAreTexturesResidentEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAreTexturesResidentEXT);
    return _result;
}

void GLAPIENTRY glArrayElement(GLint i)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glArrayElement);
    _COUNT(APICall_glArrayElement);
    CHECKCALL(glArrayElement);
    DO_REAL_CALL(glArrayElement(i));
    _W.writeAPICall(APICall_glArrayElement);
    _W.writeMark("(");
    _W.write(i);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glArrayElement);
}

void GLAPIENTRY glArrayElementEXT(GLint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glArrayElementEXT);
    _COUNT(APICall_glArrayElementEXT);
    CHECKCALL(glArrayElementEXT);
    DO_REAL_CALL(glArrayElementEXT(_p0));
    _W.writeAPICall(APICall_glArrayElementEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glArrayElementEXT);
}

void GLAPIENTRY glArrayObjectATI(GLenum _p0, GLint _p1, GLenum _p2, GLsizei _p3, GLuint _p4, GLuint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glArrayObjectATI);
    _COUNT(APICall_glArrayObjectATI);
    CHECKCALL(glArrayObjectATI);
    DO_REAL_CALL(glArrayObjectATI(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glArrayObjectATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glArrayObjectATI);
}

void GLAPIENTRY glAsyncMarkerSGIX(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAsyncMarkerSGIX);
    _COUNT(APICall_glAsyncMarkerSGIX);
    CHECKCALL(glAsyncMarkerSGIX);
    DO_REAL_CALL(glAsyncMarkerSGIX(_p0));
    _W.writeAPICall(APICall_glAsyncMarkerSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAsyncMarkerSGIX);
}

void GLAPIENTRY glAttachObjectARB(GLhandleARB _p0, GLhandleARB _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAttachObjectARB);
    _COUNT(APICall_glAttachObjectARB);
    CHECKCALL(glAttachObjectARB);
    DO_REAL_CALL(glAttachObjectARB(_p0,_p1));
    _W.writeAPICall(APICall_glAttachObjectARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAttachObjectARB);
}

void GLAPIENTRY glAttachShader(GLuint _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glAttachShader);
    _COUNT(APICall_glAttachShader);
    CHECKCALL(glAttachShader);
    DO_REAL_CALL(glAttachShader(_p0,_p1));
    _W.writeAPICall(APICall_glAttachShader);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glAttachShader);
}

void GLAPIENTRY glBegin(GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBegin);
    // Specific stats code
    glBegin_STAT(mode);
    _COUNT(APICall_glBegin);
    CHECKCALL(glBegin);
    DO_REAL_CALL(glBegin(mode));
    _W.writeAPICall(APICall_glBegin);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBegin);
}

void GLAPIENTRY glBeginConditionalRender(GLuint _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginConditionalRender);
    _COUNT(APICall_glBeginConditionalRender);
    CHECKCALL(glBeginConditionalRender);
    DO_REAL_CALL(glBeginConditionalRender(_p0,_p1));
    _W.writeAPICall(APICall_glBeginConditionalRender);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginConditionalRender);
}

void GLAPIENTRY glBeginConditionalRenderNV(GLuint _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginConditionalRenderNV);
    _COUNT(APICall_glBeginConditionalRenderNV);
    CHECKCALL(glBeginConditionalRenderNV);
    DO_REAL_CALL(glBeginConditionalRenderNV(_p0,_p1));
    _W.writeAPICall(APICall_glBeginConditionalRenderNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginConditionalRenderNV);
}

void GLAPIENTRY glBeginFragmentShaderATI()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginFragmentShaderATI);
    _COUNT(APICall_glBeginFragmentShaderATI);
    CHECKCALL(glBeginFragmentShaderATI);
    DO_REAL_CALL(glBeginFragmentShaderATI());
    _W.writeAPICall(APICall_glBeginFragmentShaderATI);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginFragmentShaderATI);
}

void GLAPIENTRY glBeginOcclusionQueryNV(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginOcclusionQueryNV);
    _COUNT(APICall_glBeginOcclusionQueryNV);
    CHECKCALL(glBeginOcclusionQueryNV);
    DO_REAL_CALL(glBeginOcclusionQueryNV(_p0));
    _W.writeAPICall(APICall_glBeginOcclusionQueryNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginOcclusionQueryNV);
}

void GLAPIENTRY glBeginPerfMonitorAMD(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginPerfMonitorAMD);
    _COUNT(APICall_glBeginPerfMonitorAMD);
    CHECKCALL(glBeginPerfMonitorAMD);
    DO_REAL_CALL(glBeginPerfMonitorAMD(_p0));
    _W.writeAPICall(APICall_glBeginPerfMonitorAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginPerfMonitorAMD);
}

void GLAPIENTRY glBeginQuery(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginQuery);
    _COUNT(APICall_glBeginQuery);
    CHECKCALL(glBeginQuery);
    DO_REAL_CALL(glBeginQuery(_p0,_p1));
    _W.writeAPICall(APICall_glBeginQuery);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginQuery);
}

void GLAPIENTRY glBeginQueryARB(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginQueryARB);
    _COUNT(APICall_glBeginQueryARB);
    CHECKCALL(glBeginQueryARB);
    DO_REAL_CALL(glBeginQueryARB(_p0,_p1));
    _W.writeAPICall(APICall_glBeginQueryARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginQueryARB);
}

void GLAPIENTRY glBeginTransformFeedback(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginTransformFeedback);
    _COUNT(APICall_glBeginTransformFeedback);
    CHECKCALL(glBeginTransformFeedback);
    DO_REAL_CALL(glBeginTransformFeedback(_p0));
    _W.writeAPICall(APICall_glBeginTransformFeedback);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginTransformFeedback);
}

void GLAPIENTRY glBeginTransformFeedbackEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginTransformFeedbackEXT);
    _COUNT(APICall_glBeginTransformFeedbackEXT);
    CHECKCALL(glBeginTransformFeedbackEXT);
    DO_REAL_CALL(glBeginTransformFeedbackEXT(_p0));
    _W.writeAPICall(APICall_glBeginTransformFeedbackEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginTransformFeedbackEXT);
}

void GLAPIENTRY glBeginTransformFeedbackNV(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginTransformFeedbackNV);
    _COUNT(APICall_glBeginTransformFeedbackNV);
    CHECKCALL(glBeginTransformFeedbackNV);
    DO_REAL_CALL(glBeginTransformFeedbackNV(_p0));
    _W.writeAPICall(APICall_glBeginTransformFeedbackNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginTransformFeedbackNV);
}

void GLAPIENTRY glBeginVertexShaderEXT()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBeginVertexShaderEXT);
    _COUNT(APICall_glBeginVertexShaderEXT);
    CHECKCALL(glBeginVertexShaderEXT);
    DO_REAL_CALL(glBeginVertexShaderEXT());
    _W.writeAPICall(APICall_glBeginVertexShaderEXT);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBeginVertexShaderEXT);
}

void GLAPIENTRY glBindAttribLocation(GLuint _p0, GLuint _p1, const GLchar *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindAttribLocation);
    _COUNT(APICall_glBindAttribLocation);
    CHECKCALL(glBindAttribLocation);
    DO_REAL_CALL(glBindAttribLocation(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBindAttribLocation);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindAttribLocation);
}

void GLAPIENTRY glBindAttribLocationARB(GLhandleARB _p0, GLuint _p1, const GLcharARB *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindAttribLocationARB);
    _COUNT(APICall_glBindAttribLocationARB);
    CHECKCALL(glBindAttribLocationARB);
    DO_REAL_CALL(glBindAttribLocationARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBindAttribLocationARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindAttribLocationARB);
}

void GLAPIENTRY glBindBuffer(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBuffer);
    _COUNT(APICall_glBindBuffer);
    CHECKCALL(glBindBuffer);
    DO_REAL_CALL(glBindBuffer(_p0,_p1));
    _W.writeAPICall(APICall_glBindBuffer);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBuffer);
}

void GLAPIENTRY glBindBufferARB(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBufferARB);
    _COUNT(APICall_glBindBufferARB);
    // [GEN-CODE info: Specific user call]
    glBindBufferARB_SPECIFIC(_p0,_p1);
    CHECKCALL(glBindBufferARB);
    DO_REAL_CALL(glBindBufferARB(_p0,_p1));
    _W.writeAPICall(APICall_glBindBufferARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBufferARB);
}

void GLAPIENTRY glBindBufferBase(GLenum _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBufferBase);
    _COUNT(APICall_glBindBufferBase);
    CHECKCALL(glBindBufferBase);
    DO_REAL_CALL(glBindBufferBase(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBindBufferBase);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBufferBase);
}

void GLAPIENTRY glBindBufferBaseEXT(GLenum _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBufferBaseEXT);
    _COUNT(APICall_glBindBufferBaseEXT);
    CHECKCALL(glBindBufferBaseEXT);
    DO_REAL_CALL(glBindBufferBaseEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBindBufferBaseEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBufferBaseEXT);
}

void GLAPIENTRY glBindBufferBaseNV(GLenum _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBufferBaseNV);
    _COUNT(APICall_glBindBufferBaseNV);
    CHECKCALL(glBindBufferBaseNV);
    DO_REAL_CALL(glBindBufferBaseNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBindBufferBaseNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBufferBaseNV);
}

void GLAPIENTRY glBindBufferOffsetEXT(GLenum _p0, GLuint _p1, GLuint _p2, GLintptr _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBufferOffsetEXT);
    _COUNT(APICall_glBindBufferOffsetEXT);
    CHECKCALL(glBindBufferOffsetEXT);
    DO_REAL_CALL(glBindBufferOffsetEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBindBufferOffsetEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBufferOffsetEXT);
}

void GLAPIENTRY glBindBufferOffsetNV(GLenum _p0, GLuint _p1, GLuint _p2, GLintptr _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBufferOffsetNV);
    _COUNT(APICall_glBindBufferOffsetNV);
    CHECKCALL(glBindBufferOffsetNV);
    DO_REAL_CALL(glBindBufferOffsetNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBindBufferOffsetNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBufferOffsetNV);
}

void GLAPIENTRY glBindBufferRange(GLenum _p0, GLuint _p1, GLuint _p2, GLintptr _p3, GLsizeiptr _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBufferRange);
    _COUNT(APICall_glBindBufferRange);
    CHECKCALL(glBindBufferRange);
    DO_REAL_CALL(glBindBufferRange(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glBindBufferRange);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBufferRange);
}

void GLAPIENTRY glBindBufferRangeEXT(GLenum _p0, GLuint _p1, GLuint _p2, GLintptr _p3, GLsizeiptr _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBufferRangeEXT);
    _COUNT(APICall_glBindBufferRangeEXT);
    CHECKCALL(glBindBufferRangeEXT);
    DO_REAL_CALL(glBindBufferRangeEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glBindBufferRangeEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBufferRangeEXT);
}

void GLAPIENTRY glBindBufferRangeNV(GLenum _p0, GLuint _p1, GLuint _p2, GLintptr _p3, GLsizeiptr _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindBufferRangeNV);
    _COUNT(APICall_glBindBufferRangeNV);
    CHECKCALL(glBindBufferRangeNV);
    DO_REAL_CALL(glBindBufferRangeNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glBindBufferRangeNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindBufferRangeNV);
}

void GLAPIENTRY glBindFragDataLocation(GLuint _p0, GLuint _p1, const GLchar *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindFragDataLocation);
    _COUNT(APICall_glBindFragDataLocation);
    CHECKCALL(glBindFragDataLocation);
    DO_REAL_CALL(glBindFragDataLocation(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBindFragDataLocation);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindFragDataLocation);
}

void GLAPIENTRY glBindFragDataLocationEXT(GLuint _p0, GLuint _p1, const GLchar *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindFragDataLocationEXT);
    _COUNT(APICall_glBindFragDataLocationEXT);
    CHECKCALL(glBindFragDataLocationEXT);
    DO_REAL_CALL(glBindFragDataLocationEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBindFragDataLocationEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindFragDataLocationEXT);
}

void GLAPIENTRY glBindFragmentShaderATI(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindFragmentShaderATI);
    _COUNT(APICall_glBindFragmentShaderATI);
    CHECKCALL(glBindFragmentShaderATI);
    DO_REAL_CALL(glBindFragmentShaderATI(_p0));
    _W.writeAPICall(APICall_glBindFragmentShaderATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindFragmentShaderATI);
}

void GLAPIENTRY glBindFramebuffer(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindFramebuffer);
    _COUNT(APICall_glBindFramebuffer);
    CHECKCALL(glBindFramebuffer);
    DO_REAL_CALL(glBindFramebuffer(_p0,_p1));
    _W.writeAPICall(APICall_glBindFramebuffer);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindFramebuffer);
}

void GLAPIENTRY glBindFramebufferEXT(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindFramebufferEXT);
    _COUNT(APICall_glBindFramebufferEXT);
    CHECKCALL(glBindFramebufferEXT);
    DO_REAL_CALL(glBindFramebufferEXT(_p0,_p1));
    _W.writeAPICall(APICall_glBindFramebufferEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindFramebufferEXT);
}

GLuint GLAPIENTRY glBindLightParameterEXT(GLenum _p0, GLenum _p1)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindLightParameterEXT);
    _COUNT(APICall_glBindLightParameterEXT);
    CHECKCALL(glBindLightParameterEXT);
    _result = DO_REAL_CALL(glBindLightParameterEXT(_p0,_p1));
    _W.writeAPICall(APICall_glBindLightParameterEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindLightParameterEXT);
    return _result;
}

GLuint GLAPIENTRY glBindMaterialParameterEXT(GLenum _p0, GLenum _p1)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindMaterialParameterEXT);
    _COUNT(APICall_glBindMaterialParameterEXT);
    CHECKCALL(glBindMaterialParameterEXT);
    _result = DO_REAL_CALL(glBindMaterialParameterEXT(_p0,_p1));
    _W.writeAPICall(APICall_glBindMaterialParameterEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindMaterialParameterEXT);
    return _result;
}

void GLAPIENTRY glBindMultiTextureEXT(GLenum _p0, GLenum _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindMultiTextureEXT);
    _COUNT(APICall_glBindMultiTextureEXT);
    CHECKCALL(glBindMultiTextureEXT);
    DO_REAL_CALL(glBindMultiTextureEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBindMultiTextureEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindMultiTextureEXT);
}

GLuint GLAPIENTRY glBindParameterEXT(GLenum _p0)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindParameterEXT);
    _COUNT(APICall_glBindParameterEXT);
    CHECKCALL(glBindParameterEXT);
    _result = DO_REAL_CALL(glBindParameterEXT(_p0));
    _W.writeAPICall(APICall_glBindParameterEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindParameterEXT);
    return _result;
}

void GLAPIENTRY glBindProgramARB(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindProgramARB);
    // Specific stats code
    glBindProgramARB_STAT(_p0,_p1);
    _COUNT(APICall_glBindProgramARB);
    CHECKCALL(glBindProgramARB);
    DO_REAL_CALL(glBindProgramARB(_p0,_p1));
    _W.writeAPICall(APICall_glBindProgramARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindProgramARB);
}

void GLAPIENTRY glBindProgramNV(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindProgramNV);
    _COUNT(APICall_glBindProgramNV);
    CHECKCALL(glBindProgramNV);
    DO_REAL_CALL(glBindProgramNV(_p0,_p1));
    _W.writeAPICall(APICall_glBindProgramNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindProgramNV);
}

void GLAPIENTRY glBindRenderbuffer(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindRenderbuffer);
    _COUNT(APICall_glBindRenderbuffer);
    CHECKCALL(glBindRenderbuffer);
    DO_REAL_CALL(glBindRenderbuffer(_p0,_p1));
    _W.writeAPICall(APICall_glBindRenderbuffer);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindRenderbuffer);
}

void GLAPIENTRY glBindRenderbufferEXT(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindRenderbufferEXT);
    _COUNT(APICall_glBindRenderbufferEXT);
    CHECKCALL(glBindRenderbufferEXT);
    DO_REAL_CALL(glBindRenderbufferEXT(_p0,_p1));
    _W.writeAPICall(APICall_glBindRenderbufferEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindRenderbufferEXT);
}

GLuint GLAPIENTRY glBindTexGenParameterEXT(GLenum _p0, GLenum _p1, GLenum _p2)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindTexGenParameterEXT);
    _COUNT(APICall_glBindTexGenParameterEXT);
    CHECKCALL(glBindTexGenParameterEXT);
    _result = DO_REAL_CALL(glBindTexGenParameterEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBindTexGenParameterEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindTexGenParameterEXT);
    return _result;
}

void GLAPIENTRY glBindTexture(GLenum target, GLuint texture)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindTexture);
    _COUNT(APICall_glBindTexture);
    CHECKCALL(glBindTexture);
    DO_REAL_CALL(glBindTexture(target,texture));
    _W.writeAPICall(APICall_glBindTexture);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(texture);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindTexture);
}

void GLAPIENTRY glBindTextureEXT(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindTextureEXT);
    _COUNT(APICall_glBindTextureEXT);
    CHECKCALL(glBindTextureEXT);
    DO_REAL_CALL(glBindTextureEXT(_p0,_p1));
    _W.writeAPICall(APICall_glBindTextureEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindTextureEXT);
}

GLuint GLAPIENTRY glBindTextureUnitParameterEXT(GLenum _p0, GLenum _p1)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindTextureUnitParameterEXT);
    _COUNT(APICall_glBindTextureUnitParameterEXT);
    CHECKCALL(glBindTextureUnitParameterEXT);
    _result = DO_REAL_CALL(glBindTextureUnitParameterEXT(_p0,_p1));
    _W.writeAPICall(APICall_glBindTextureUnitParameterEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindTextureUnitParameterEXT);
    return _result;
}

void GLAPIENTRY glBindTransformFeedbackNV(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindTransformFeedbackNV);
    _COUNT(APICall_glBindTransformFeedbackNV);
    CHECKCALL(glBindTransformFeedbackNV);
    DO_REAL_CALL(glBindTransformFeedbackNV(_p0,_p1));
    _W.writeAPICall(APICall_glBindTransformFeedbackNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindTransformFeedbackNV);
}

void GLAPIENTRY glBindVertexArray(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindVertexArray);
    _COUNT(APICall_glBindVertexArray);
    CHECKCALL(glBindVertexArray);
    DO_REAL_CALL(glBindVertexArray(_p0));
    _W.writeAPICall(APICall_glBindVertexArray);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindVertexArray);
}

void GLAPIENTRY glBindVertexArrayAPPLE(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindVertexArrayAPPLE);
    _COUNT(APICall_glBindVertexArrayAPPLE);
    CHECKCALL(glBindVertexArrayAPPLE);
    DO_REAL_CALL(glBindVertexArrayAPPLE(_p0));
    _W.writeAPICall(APICall_glBindVertexArrayAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindVertexArrayAPPLE);
}

void GLAPIENTRY glBindVertexShaderEXT(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBindVertexShaderEXT);
    _COUNT(APICall_glBindVertexShaderEXT);
    CHECKCALL(glBindVertexShaderEXT);
    DO_REAL_CALL(glBindVertexShaderEXT(_p0));
    _W.writeAPICall(APICall_glBindVertexShaderEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBindVertexShaderEXT);
}

void GLAPIENTRY glBinormal3bEXT(GLbyte _p0, GLbyte _p1, GLbyte _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3bEXT);
    _COUNT(APICall_glBinormal3bEXT);
    CHECKCALL(glBinormal3bEXT);
    DO_REAL_CALL(glBinormal3bEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBinormal3bEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3bEXT);
}

void GLAPIENTRY glBinormal3bvEXT(const GLbyte *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3bvEXT);
    _COUNT(APICall_glBinormal3bvEXT);
    CHECKCALL(glBinormal3bvEXT);
    DO_REAL_CALL(glBinormal3bvEXT(_p0));
    _W.writeAPICall(APICall_glBinormal3bvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3bvEXT);
}

void GLAPIENTRY glBinormal3dEXT(GLdouble _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3dEXT);
    _COUNT(APICall_glBinormal3dEXT);
    CHECKCALL(glBinormal3dEXT);
    DO_REAL_CALL(glBinormal3dEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBinormal3dEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3dEXT);
}

void GLAPIENTRY glBinormal3dvEXT(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3dvEXT);
    _COUNT(APICall_glBinormal3dvEXT);
    CHECKCALL(glBinormal3dvEXT);
    DO_REAL_CALL(glBinormal3dvEXT(_p0));
    _W.writeAPICall(APICall_glBinormal3dvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3dvEXT);
}

void GLAPIENTRY glBinormal3fEXT(GLfloat _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3fEXT);
    _COUNT(APICall_glBinormal3fEXT);
    CHECKCALL(glBinormal3fEXT);
    DO_REAL_CALL(glBinormal3fEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBinormal3fEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3fEXT);
}

void GLAPIENTRY glBinormal3fvEXT(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3fvEXT);
    _COUNT(APICall_glBinormal3fvEXT);
    CHECKCALL(glBinormal3fvEXT);
    DO_REAL_CALL(glBinormal3fvEXT(_p0));
    _W.writeAPICall(APICall_glBinormal3fvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3fvEXT);
}

void GLAPIENTRY glBinormal3iEXT(GLint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3iEXT);
    _COUNT(APICall_glBinormal3iEXT);
    CHECKCALL(glBinormal3iEXT);
    DO_REAL_CALL(glBinormal3iEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBinormal3iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3iEXT);
}

void GLAPIENTRY glBinormal3ivEXT(const GLint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3ivEXT);
    _COUNT(APICall_glBinormal3ivEXT);
    CHECKCALL(glBinormal3ivEXT);
    DO_REAL_CALL(glBinormal3ivEXT(_p0));
    _W.writeAPICall(APICall_glBinormal3ivEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3ivEXT);
}

void GLAPIENTRY glBinormal3sEXT(GLshort _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3sEXT);
    _COUNT(APICall_glBinormal3sEXT);
    CHECKCALL(glBinormal3sEXT);
    DO_REAL_CALL(glBinormal3sEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBinormal3sEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3sEXT);
}

void GLAPIENTRY glBinormal3svEXT(const GLshort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormal3svEXT);
    _COUNT(APICall_glBinormal3svEXT);
    CHECKCALL(glBinormal3svEXT);
    DO_REAL_CALL(glBinormal3svEXT(_p0));
    _W.writeAPICall(APICall_glBinormal3svEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormal3svEXT);
}

void GLAPIENTRY glBinormalPointerEXT(GLenum _p0, GLsizei _p1, const GLvoid *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBinormalPointerEXT);
    _COUNT(APICall_glBinormalPointerEXT);
    CHECKCALL(glBinormalPointerEXT);
    DO_REAL_CALL(glBinormalPointerEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBinormalPointerEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBinormalPointerEXT);
}

void GLAPIENTRY glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBitmap);
    _COUNT(APICall_glBitmap);
    CHECKCALL(glBitmap);
    DO_REAL_CALL(glBitmap(width,height,xorig,yorig,xmove,ymove,bitmap));
    _W.writeAPICall(APICall_glBitmap);
    _W.writeMark("(");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.write(xorig);
    _W.writeMark(",");
    _W.write(yorig);
    _W.writeMark(",");
    _W.write(xmove);
    _W.writeMark(",");
    _W.write(ymove);
    _W.writeMark(",");
    _W.writeUnknown(&bitmap);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBitmap);
}

void GLAPIENTRY glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendColor);
    _COUNT(APICall_glBlendColor);
    CHECKCALL(glBlendColor);
    DO_REAL_CALL(glBlendColor(red,green,blue,alpha));
    _W.writeAPICall(APICall_glBlendColor);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendColor);
}

void GLAPIENTRY glBlendColorEXT(GLclampf _p0, GLclampf _p1, GLclampf _p2, GLclampf _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendColorEXT);
    _COUNT(APICall_glBlendColorEXT);
    CHECKCALL(glBlendColorEXT);
    DO_REAL_CALL(glBlendColorEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBlendColorEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendColorEXT);
}

void GLAPIENTRY glBlendEquation(GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendEquation);
    _COUNT(APICall_glBlendEquation);
    CHECKCALL(glBlendEquation);
    DO_REAL_CALL(glBlendEquation(mode));
    _W.writeAPICall(APICall_glBlendEquation);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendEquation);
}

void GLAPIENTRY glBlendEquationEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendEquationEXT);
    _COUNT(APICall_glBlendEquationEXT);
    CHECKCALL(glBlendEquationEXT);
    DO_REAL_CALL(glBlendEquationEXT(_p0));
    _W.writeAPICall(APICall_glBlendEquationEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendEquationEXT);
}

void GLAPIENTRY glBlendEquationSeparate(GLenum _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendEquationSeparate);
    _COUNT(APICall_glBlendEquationSeparate);
    CHECKCALL(glBlendEquationSeparate);
    DO_REAL_CALL(glBlendEquationSeparate(_p0,_p1));
    _W.writeAPICall(APICall_glBlendEquationSeparate);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendEquationSeparate);
}

void GLAPIENTRY glBlendEquationSeparateATI(GLenum modeRGB, GLenum modeA)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendEquationSeparateATI);
    _COUNT(APICall_glBlendEquationSeparateATI);
    CHECKCALL(glBlendEquationSeparateATI);
    DO_REAL_CALL(glBlendEquationSeparateATI(modeRGB,modeA));
    _W.writeAPICall(APICall_glBlendEquationSeparateATI);
    _W.writeMark("(");
    _W.writeEnum(modeRGB);
    _W.writeMark(",");
    _W.writeEnum(modeA);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendEquationSeparateATI);
}

void GLAPIENTRY glBlendEquationSeparateEXT(GLenum _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendEquationSeparateEXT);
    _COUNT(APICall_glBlendEquationSeparateEXT);
    CHECKCALL(glBlendEquationSeparateEXT);
    DO_REAL_CALL(glBlendEquationSeparateEXT(_p0,_p1));
    _W.writeAPICall(APICall_glBlendEquationSeparateEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendEquationSeparateEXT);
}

void GLAPIENTRY glBlendFunc(GLenum sfactor, GLenum dfactor)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendFunc);
    _COUNT(APICall_glBlendFunc);
    CHECKCALL(glBlendFunc);
    DO_REAL_CALL(glBlendFunc(sfactor,dfactor));
    _W.writeAPICall(APICall_glBlendFunc);
    _W.writeMark("(");
    _W.writeEnum(sfactor);
    _W.writeMark(",");
    _W.writeEnum(dfactor);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendFunc);
}

void GLAPIENTRY glBlendFuncSeparate(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendFuncSeparate);
    _COUNT(APICall_glBlendFuncSeparate);
    CHECKCALL(glBlendFuncSeparate);
    DO_REAL_CALL(glBlendFuncSeparate(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBlendFuncSeparate);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendFuncSeparate);
}

void GLAPIENTRY glBlendFuncSeparateEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendFuncSeparateEXT);
    _COUNT(APICall_glBlendFuncSeparateEXT);
    CHECKCALL(glBlendFuncSeparateEXT);
    DO_REAL_CALL(glBlendFuncSeparateEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBlendFuncSeparateEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendFuncSeparateEXT);
}

void GLAPIENTRY glBlendFuncSeparateINGR(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlendFuncSeparateINGR);
    _COUNT(APICall_glBlendFuncSeparateINGR);
    CHECKCALL(glBlendFuncSeparateINGR);
    DO_REAL_CALL(glBlendFuncSeparateINGR(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBlendFuncSeparateINGR);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlendFuncSeparateINGR);
}

void GLAPIENTRY glBlitFramebuffer(GLint _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLint _p6, GLint _p7, GLbitfield _p8, GLenum _p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlitFramebuffer);
    _COUNT(APICall_glBlitFramebuffer);
    CHECKCALL(glBlitFramebuffer);
    DO_REAL_CALL(glBlitFramebuffer(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glBlitFramebuffer);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeOring(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlitFramebuffer);
}

void GLAPIENTRY glBlitFramebufferEXT(GLint _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLint _p6, GLint _p7, GLbitfield _p8, GLenum _p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBlitFramebufferEXT);
    _COUNT(APICall_glBlitFramebufferEXT);
    CHECKCALL(glBlitFramebufferEXT);
    DO_REAL_CALL(glBlitFramebufferEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glBlitFramebufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeOring(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBlitFramebufferEXT);
}

void GLAPIENTRY glBufferData(GLenum _p0, GLsizeiptr _p1, const GLvoid *_p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBufferData);
    _COUNT(APICall_glBufferData);
    CHECKCALL(glBufferData);
    DO_REAL_CALL(glBufferData(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBufferData);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBufferData);
}

void GLAPIENTRY glBufferDataARB(GLenum _p0, GLsizeiptrARB _p1, const GLvoid *_p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBufferDataARB);
    _COUNT(APICall_glBufferDataARB);
    // [GEN-CODE info: Specific user call]
    glBufferDataARB_SPECIFIC(_p0,_p1,_p2,_p3);
    CHECKCALL(glBufferDataARB);
    DO_REAL_CALL(glBufferDataARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBufferDataARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glBufferDataARB_SPECIFIC(_p0,_p1,_p2,_p3);
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBufferDataARB);
}

void GLAPIENTRY glBufferParameteriAPPLE(GLenum _p0, GLenum _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBufferParameteriAPPLE);
    _COUNT(APICall_glBufferParameteriAPPLE);
    CHECKCALL(glBufferParameteriAPPLE);
    DO_REAL_CALL(glBufferParameteriAPPLE(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glBufferParameteriAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBufferParameteriAPPLE);
}

void GLAPIENTRY glBufferSubData(GLenum _p0, GLintptr _p1, GLsizeiptr _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBufferSubData);
    _COUNT(APICall_glBufferSubData);
    CHECKCALL(glBufferSubData);
    DO_REAL_CALL(glBufferSubData(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBufferSubData);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBufferSubData);
}

void GLAPIENTRY glBufferSubDataARB(GLenum _p0, GLintptrARB _p1, GLsizeiptrARB _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glBufferSubDataARB);
    _COUNT(APICall_glBufferSubDataARB);
    CHECKCALL(glBufferSubDataARB);
    DO_REAL_CALL(glBufferSubDataARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glBufferSubDataARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glBufferSubDataARB_SPECIFIC(_p0,_p1,_p2,_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glBufferSubDataARB);
}

void GLAPIENTRY glCallList(GLuint list)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCallList);
    _COUNT(APICall_glCallList);
    CHECKCALL(glCallList);
    DO_REAL_CALL(glCallList(list));
    _W.writeAPICall(APICall_glCallList);
    _W.writeMark("(");
    _W.write(list);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCallList);
}

void GLAPIENTRY glCallLists(GLsizei n, GLenum type, const GLvoid *lists)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCallLists);
    _COUNT(APICall_glCallLists);
    CHECKCALL(glCallLists);
    DO_REAL_CALL(glCallLists(n,type,lists));
    _W.writeAPICall(APICall_glCallLists);
    _W.writeMark("(");
    _W.write(n);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&lists);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCallLists);
}

GLenum GLAPIENTRY glCheckFramebufferStatus(GLenum _p0)
{
    GLenum _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCheckFramebufferStatus);
    _COUNT(APICall_glCheckFramebufferStatus);
    CHECKCALL(glCheckFramebufferStatus);
    _result = DO_REAL_CALL(glCheckFramebufferStatus(_p0));
    _W.writeAPICall(APICall_glCheckFramebufferStatus);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultEnum(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCheckFramebufferStatus);
    return _result;
}

GLenum GLAPIENTRY glCheckFramebufferStatusEXT(GLenum _p0)
{
    GLenum _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCheckFramebufferStatusEXT);
    _COUNT(APICall_glCheckFramebufferStatusEXT);
    CHECKCALL(glCheckFramebufferStatusEXT);
    _result = DO_REAL_CALL(glCheckFramebufferStatusEXT(_p0));
    _W.writeAPICall(APICall_glCheckFramebufferStatusEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultEnum(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCheckFramebufferStatusEXT);
    return _result;
}

GLenum GLAPIENTRY glCheckNamedFramebufferStatusEXT(GLuint _p0, GLenum _p1)
{
    GLenum _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCheckNamedFramebufferStatusEXT);
    _COUNT(APICall_glCheckNamedFramebufferStatusEXT);
    CHECKCALL(glCheckNamedFramebufferStatusEXT);
    _result = DO_REAL_CALL(glCheckNamedFramebufferStatusEXT(_p0,_p1));
    _W.writeAPICall(APICall_glCheckNamedFramebufferStatusEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultEnum(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCheckNamedFramebufferStatusEXT);
    return _result;
}

void GLAPIENTRY glClampColor(GLenum _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClampColor);
    _COUNT(APICall_glClampColor);
    CHECKCALL(glClampColor);
    DO_REAL_CALL(glClampColor(_p0,_p1));
    _W.writeAPICall(APICall_glClampColor);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClampColor);
}

void GLAPIENTRY glClampColorARB(GLenum _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClampColorARB);
    _COUNT(APICall_glClampColorARB);
    CHECKCALL(glClampColorARB);
    DO_REAL_CALL(glClampColorARB(_p0,_p1));
    _W.writeAPICall(APICall_glClampColorARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClampColorARB);
}

void GLAPIENTRY glClear(GLbitfield mask)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClear);
    _COUNT(APICall_glClear);
    CHECKCALL(glClear);
    DO_REAL_CALL(glClear(mask));
    _W.writeAPICall(APICall_glClear);
    _W.writeMark("(");
    _W.writeOring(mask);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClear);
}

void GLAPIENTRY glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearAccum);
    _COUNT(APICall_glClearAccum);
    CHECKCALL(glClearAccum);
    DO_REAL_CALL(glClearAccum(red,green,blue,alpha));
    _W.writeAPICall(APICall_glClearAccum);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearAccum);
}

void GLAPIENTRY glClearBufferfi(GLenum _p0, GLint _p1, GLfloat _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearBufferfi);
    _COUNT(APICall_glClearBufferfi);
    CHECKCALL(glClearBufferfi);
    DO_REAL_CALL(glClearBufferfi(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glClearBufferfi);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearBufferfi);
}

void GLAPIENTRY glClearBufferfv(GLenum _p0, GLint _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearBufferfv);
    _COUNT(APICall_glClearBufferfv);
    CHECKCALL(glClearBufferfv);
    DO_REAL_CALL(glClearBufferfv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glClearBufferfv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearBufferfv);
}

void GLAPIENTRY glClearBufferiv(GLenum _p0, GLint _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearBufferiv);
    _COUNT(APICall_glClearBufferiv);
    CHECKCALL(glClearBufferiv);
    DO_REAL_CALL(glClearBufferiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glClearBufferiv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearBufferiv);
}

void GLAPIENTRY glClearBufferuiv(GLenum _p0, GLint _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearBufferuiv);
    _COUNT(APICall_glClearBufferuiv);
    CHECKCALL(glClearBufferuiv);
    DO_REAL_CALL(glClearBufferuiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glClearBufferuiv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearBufferuiv);
}

void GLAPIENTRY glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearColor);
    _COUNT(APICall_glClearColor);
    CHECKCALL(glClearColor);
    DO_REAL_CALL(glClearColor(red,green,blue,alpha));
    _W.writeAPICall(APICall_glClearColor);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearColor);
}

void GLAPIENTRY glClearColorIiEXT(GLint _p0, GLint _p1, GLint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearColorIiEXT);
    _COUNT(APICall_glClearColorIiEXT);
    CHECKCALL(glClearColorIiEXT);
    DO_REAL_CALL(glClearColorIiEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glClearColorIiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearColorIiEXT);
}

void GLAPIENTRY glClearColorIuiEXT(GLuint _p0, GLuint _p1, GLuint _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearColorIuiEXT);
    _COUNT(APICall_glClearColorIuiEXT);
    CHECKCALL(glClearColorIuiEXT);
    DO_REAL_CALL(glClearColorIuiEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glClearColorIuiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearColorIuiEXT);
}

void GLAPIENTRY glClearDepth(GLclampd depth)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearDepth);
    _COUNT(APICall_glClearDepth);
    CHECKCALL(glClearDepth);
    DO_REAL_CALL(glClearDepth(depth));
    _W.writeAPICall(APICall_glClearDepth);
    _W.writeMark("(");
    _W.write(depth);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearDepth);
}

void GLAPIENTRY glClearDepthdNV(GLdouble _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearDepthdNV);
    _COUNT(APICall_glClearDepthdNV);
    CHECKCALL(glClearDepthdNV);
    DO_REAL_CALL(glClearDepthdNV(_p0));
    _W.writeAPICall(APICall_glClearDepthdNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearDepthdNV);
}

void GLAPIENTRY glClearIndex(GLfloat c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearIndex);
    _COUNT(APICall_glClearIndex);
    CHECKCALL(glClearIndex);
    DO_REAL_CALL(glClearIndex(c));
    _W.writeAPICall(APICall_glClearIndex);
    _W.writeMark("(");
    _W.write(c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearIndex);
}

void GLAPIENTRY glClearStencil(GLint s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClearStencil);
    _COUNT(APICall_glClearStencil);
    CHECKCALL(glClearStencil);
    DO_REAL_CALL(glClearStencil(s));
    _W.writeAPICall(APICall_glClearStencil);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClearStencil);
}

void GLAPIENTRY glClientActiveTexture(GLenum texture)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClientActiveTexture);
    _COUNT(APICall_glClientActiveTexture);
    CHECKCALL(glClientActiveTexture);
    DO_REAL_CALL(glClientActiveTexture(texture));
    _W.writeAPICall(APICall_glClientActiveTexture);
    _W.writeMark("(");
    _W.writeEnum(texture);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClientActiveTexture);
}

void GLAPIENTRY glClientActiveTextureARB(GLenum texture)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClientActiveTextureARB);
    _COUNT(APICall_glClientActiveTextureARB);
    // [GEN-CODE info: Specific user call]
    glClientActiveTextureARB_SPECIFIC(texture);
    CHECKCALL(glClientActiveTextureARB);
    DO_REAL_CALL(glClientActiveTextureARB(texture));
    _W.writeAPICall(APICall_glClientActiveTextureARB);
    _W.writeMark("(");
    _W.writeEnum(texture);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClientActiveTextureARB);
}

void GLAPIENTRY glClientActiveVertexStreamATI(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClientActiveVertexStreamATI);
    _COUNT(APICall_glClientActiveVertexStreamATI);
    CHECKCALL(glClientActiveVertexStreamATI);
    DO_REAL_CALL(glClientActiveVertexStreamATI(_p0));
    _W.writeAPICall(APICall_glClientActiveVertexStreamATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClientActiveVertexStreamATI);
}

void GLAPIENTRY glClientAttribDefaultEXT(GLbitfield _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClientAttribDefaultEXT);
    _COUNT(APICall_glClientAttribDefaultEXT);
    CHECKCALL(glClientAttribDefaultEXT);
    DO_REAL_CALL(glClientAttribDefaultEXT(_p0));
    _W.writeAPICall(APICall_glClientAttribDefaultEXT);
    _W.writeMark("(");
    _W.writeOring(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClientAttribDefaultEXT);
}

void GLAPIENTRY glClipPlane(GLenum plane, const GLdouble *equation)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glClipPlane);
    _COUNT(APICall_glClipPlane);
    CHECKCALL(glClipPlane);
    DO_REAL_CALL(glClipPlane(plane,equation));
    _W.writeAPICall(APICall_glClipPlane);
    _W.writeMark("(");
    _W.writeEnum(plane);
    _W.writeMark(",");
    _W.writeUnknown(&equation);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glClipPlane);
}

void GLAPIENTRY glColor3b(GLbyte red, GLbyte green, GLbyte blue)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3b);
    _COUNT(APICall_glColor3b);
    CHECKCALL(glColor3b);
    DO_REAL_CALL(glColor3b(red,green,blue));
    _W.writeAPICall(APICall_glColor3b);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3b);
}

void GLAPIENTRY glColor3bv(const GLbyte *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3bv);
    _COUNT(APICall_glColor3bv);
    CHECKCALL(glColor3bv);
    DO_REAL_CALL(glColor3bv(v));
    _W.writeAPICall(APICall_glColor3bv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3bv);
}

void GLAPIENTRY glColor3d(GLdouble red, GLdouble green, GLdouble blue)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3d);
    _COUNT(APICall_glColor3d);
    CHECKCALL(glColor3d);
    DO_REAL_CALL(glColor3d(red,green,blue));
    _W.writeAPICall(APICall_glColor3d);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3d);
}

void GLAPIENTRY glColor3dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3dv);
    _COUNT(APICall_glColor3dv);
    CHECKCALL(glColor3dv);
    DO_REAL_CALL(glColor3dv(v));
    _W.writeAPICall(APICall_glColor3dv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3dv);
}

void GLAPIENTRY glColor3f(GLfloat red, GLfloat green, GLfloat blue)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3f);
    _COUNT(APICall_glColor3f);
    CHECKCALL(glColor3f);
    DO_REAL_CALL(glColor3f(red,green,blue));
    _W.writeAPICall(APICall_glColor3f);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3f);
}

void GLAPIENTRY glColor3fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3fv);
    _COUNT(APICall_glColor3fv);
    CHECKCALL(glColor3fv);
    DO_REAL_CALL(glColor3fv(v));
    _W.writeAPICall(APICall_glColor3fv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3fv);
}

void GLAPIENTRY glColor3hNV(GLhalfNV _p0, GLhalfNV _p1, GLhalfNV _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3hNV);
    _COUNT(APICall_glColor3hNV);
    CHECKCALL(glColor3hNV);
    DO_REAL_CALL(glColor3hNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glColor3hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3hNV);
}

void GLAPIENTRY glColor3hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3hvNV);
    _COUNT(APICall_glColor3hvNV);
    CHECKCALL(glColor3hvNV);
    DO_REAL_CALL(glColor3hvNV(_p0));
    _W.writeAPICall(APICall_glColor3hvNV);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3hvNV);
}

void GLAPIENTRY glColor3i(GLint red, GLint green, GLint blue)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3i);
    _COUNT(APICall_glColor3i);
    CHECKCALL(glColor3i);
    DO_REAL_CALL(glColor3i(red,green,blue));
    _W.writeAPICall(APICall_glColor3i);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3i);
}

void GLAPIENTRY glColor3iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3iv);
    _COUNT(APICall_glColor3iv);
    CHECKCALL(glColor3iv);
    DO_REAL_CALL(glColor3iv(v));
    _W.writeAPICall(APICall_glColor3iv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3iv);
}

void GLAPIENTRY glColor3s(GLshort red, GLshort green, GLshort blue)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3s);
    _COUNT(APICall_glColor3s);
    CHECKCALL(glColor3s);
    DO_REAL_CALL(glColor3s(red,green,blue));
    _W.writeAPICall(APICall_glColor3s);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3s);
}

void GLAPIENTRY glColor3sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3sv);
    _COUNT(APICall_glColor3sv);
    CHECKCALL(glColor3sv);
    DO_REAL_CALL(glColor3sv(v));
    _W.writeAPICall(APICall_glColor3sv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3sv);
}

void GLAPIENTRY glColor3ub(GLubyte red, GLubyte green, GLubyte blue)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3ub);
    _COUNT(APICall_glColor3ub);
    CHECKCALL(glColor3ub);
    DO_REAL_CALL(glColor3ub(red,green,blue));
    _W.writeAPICall(APICall_glColor3ub);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3ub);
}

void GLAPIENTRY glColor3ubv(const GLubyte *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3ubv);
    _COUNT(APICall_glColor3ubv);
    CHECKCALL(glColor3ubv);
    DO_REAL_CALL(glColor3ubv(v));
    _W.writeAPICall(APICall_glColor3ubv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3ubv);
}

void GLAPIENTRY glColor3ui(GLuint red, GLuint green, GLuint blue)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3ui);
    _COUNT(APICall_glColor3ui);
    CHECKCALL(glColor3ui);
    DO_REAL_CALL(glColor3ui(red,green,blue));
    _W.writeAPICall(APICall_glColor3ui);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3ui);
}

void GLAPIENTRY glColor3uiv(const GLuint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3uiv);
    _COUNT(APICall_glColor3uiv);
    CHECKCALL(glColor3uiv);
    DO_REAL_CALL(glColor3uiv(v));
    _W.writeAPICall(APICall_glColor3uiv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3uiv);
}

void GLAPIENTRY glColor3us(GLushort red, GLushort green, GLushort blue)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3us);
    _COUNT(APICall_glColor3us);
    CHECKCALL(glColor3us);
    DO_REAL_CALL(glColor3us(red,green,blue));
    _W.writeAPICall(APICall_glColor3us);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3us);
}

void GLAPIENTRY glColor3usv(const GLushort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor3usv);
    _COUNT(APICall_glColor3usv);
    CHECKCALL(glColor3usv);
    DO_REAL_CALL(glColor3usv(v));
    _W.writeAPICall(APICall_glColor3usv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor3usv);
}

void GLAPIENTRY glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4b);
    _COUNT(APICall_glColor4b);
    CHECKCALL(glColor4b);
    DO_REAL_CALL(glColor4b(red,green,blue,alpha));
    _W.writeAPICall(APICall_glColor4b);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4b);
}

void GLAPIENTRY glColor4bv(const GLbyte *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4bv);
    _COUNT(APICall_glColor4bv);
    CHECKCALL(glColor4bv);
    DO_REAL_CALL(glColor4bv(v));
    _W.writeAPICall(APICall_glColor4bv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4bv);
}

void GLAPIENTRY glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4d);
    _COUNT(APICall_glColor4d);
    CHECKCALL(glColor4d);
    DO_REAL_CALL(glColor4d(red,green,blue,alpha));
    _W.writeAPICall(APICall_glColor4d);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4d);
}

void GLAPIENTRY glColor4dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4dv);
    _COUNT(APICall_glColor4dv);
    CHECKCALL(glColor4dv);
    DO_REAL_CALL(glColor4dv(v));
    _W.writeAPICall(APICall_glColor4dv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4dv);
}

void GLAPIENTRY glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4f);
    _COUNT(APICall_glColor4f);
    CHECKCALL(glColor4f);
    DO_REAL_CALL(glColor4f(red,green,blue,alpha));
    _W.writeAPICall(APICall_glColor4f);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4f);
}

void GLAPIENTRY glColor4fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4fv);
    _COUNT(APICall_glColor4fv);
    CHECKCALL(glColor4fv);
    DO_REAL_CALL(glColor4fv(v));
    _W.writeAPICall(APICall_glColor4fv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4fv);
}

void GLAPIENTRY glColor4hNV(GLhalfNV _p0, GLhalfNV _p1, GLhalfNV _p2, GLhalfNV _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4hNV);
    _COUNT(APICall_glColor4hNV);
    CHECKCALL(glColor4hNV);
    DO_REAL_CALL(glColor4hNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glColor4hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4hNV);
}

void GLAPIENTRY glColor4hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4hvNV);
    _COUNT(APICall_glColor4hvNV);
    CHECKCALL(glColor4hvNV);
    DO_REAL_CALL(glColor4hvNV(_p0));
    _W.writeAPICall(APICall_glColor4hvNV);
    _W.writeMark("(");
    _W.write(_p0, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4hvNV);
}

void GLAPIENTRY glColor4i(GLint red, GLint green, GLint blue, GLint alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4i);
    _COUNT(APICall_glColor4i);
    CHECKCALL(glColor4i);
    DO_REAL_CALL(glColor4i(red,green,blue,alpha));
    _W.writeAPICall(APICall_glColor4i);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4i);
}

void GLAPIENTRY glColor4iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4iv);
    _COUNT(APICall_glColor4iv);
    CHECKCALL(glColor4iv);
    DO_REAL_CALL(glColor4iv(v));
    _W.writeAPICall(APICall_glColor4iv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4iv);
}

void GLAPIENTRY glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4s);
    _COUNT(APICall_glColor4s);
    CHECKCALL(glColor4s);
    DO_REAL_CALL(glColor4s(red,green,blue,alpha));
    _W.writeAPICall(APICall_glColor4s);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4s);
}

void GLAPIENTRY glColor4sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4sv);
    _COUNT(APICall_glColor4sv);
    CHECKCALL(glColor4sv);
    DO_REAL_CALL(glColor4sv(v));
    _W.writeAPICall(APICall_glColor4sv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4sv);
}

void GLAPIENTRY glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4ub);
    _COUNT(APICall_glColor4ub);
    CHECKCALL(glColor4ub);
    DO_REAL_CALL(glColor4ub(red,green,blue,alpha));
    _W.writeAPICall(APICall_glColor4ub);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4ub);
}

void GLAPIENTRY glColor4ubv(const GLubyte *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4ubv);
    _COUNT(APICall_glColor4ubv);
    CHECKCALL(glColor4ubv);
    DO_REAL_CALL(glColor4ubv(v));
    _W.writeAPICall(APICall_glColor4ubv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4ubv);
}

void GLAPIENTRY glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4ui);
    _COUNT(APICall_glColor4ui);
    CHECKCALL(glColor4ui);
    DO_REAL_CALL(glColor4ui(red,green,blue,alpha));
    _W.writeAPICall(APICall_glColor4ui);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4ui);
}

void GLAPIENTRY glColor4uiv(const GLuint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4uiv);
    _COUNT(APICall_glColor4uiv);
    CHECKCALL(glColor4uiv);
    DO_REAL_CALL(glColor4uiv(v));
    _W.writeAPICall(APICall_glColor4uiv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4uiv);
}

void GLAPIENTRY glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4us);
    _COUNT(APICall_glColor4us);
    CHECKCALL(glColor4us);
    DO_REAL_CALL(glColor4us(red,green,blue,alpha));
    _W.writeAPICall(APICall_glColor4us);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4us);
}

void GLAPIENTRY glColor4usv(const GLushort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColor4usv);
    _COUNT(APICall_glColor4usv);
    CHECKCALL(glColor4usv);
    DO_REAL_CALL(glColor4usv(v));
    _W.writeAPICall(APICall_glColor4usv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColor4usv);
}

void GLAPIENTRY glColorFragmentOp1ATI(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5, GLuint _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorFragmentOp1ATI);
    _COUNT(APICall_glColorFragmentOp1ATI);
    CHECKCALL(glColorFragmentOp1ATI);
    DO_REAL_CALL(glColorFragmentOp1ATI(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glColorFragmentOp1ATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorFragmentOp1ATI);
}

void GLAPIENTRY glColorFragmentOp2ATI(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5, GLuint _p6, GLuint _p7, GLuint _p8, GLuint _p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorFragmentOp2ATI);
    _COUNT(APICall_glColorFragmentOp2ATI);
    CHECKCALL(glColorFragmentOp2ATI);
    DO_REAL_CALL(glColorFragmentOp2ATI(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glColorFragmentOp2ATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorFragmentOp2ATI);
}

void GLAPIENTRY glColorFragmentOp3ATI(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5, GLuint _p6, GLuint _p7, GLuint _p8, GLuint _p9, GLuint _p10, GLuint _p11, GLuint _p12)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorFragmentOp3ATI);
    _COUNT(APICall_glColorFragmentOp3ATI);
    CHECKCALL(glColorFragmentOp3ATI);
    DO_REAL_CALL(glColorFragmentOp3ATI(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11,_p12));
    _W.writeAPICall(APICall_glColorFragmentOp3ATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(",");
    _W.write(_p10);
    _W.writeMark(",");
    _W.write(_p11);
    _W.writeMark(",");
    _W.write(_p12);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorFragmentOp3ATI);
}

void GLAPIENTRY glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorMask);
    _COUNT(APICall_glColorMask);
    CHECKCALL(glColorMask);
    DO_REAL_CALL(glColorMask(red,green,blue,alpha));
    _W.writeAPICall(APICall_glColorMask);
    _W.writeMark("(");
    _W.write(red);
    _W.writeMark(",");
    _W.write(green);
    _W.writeMark(",");
    _W.write(blue);
    _W.writeMark(",");
    _W.write(alpha);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorMask);
}

void GLAPIENTRY glColorMaskIndexedEXT(GLuint _p0, GLboolean _p1, GLboolean _p2, GLboolean _p3, GLboolean _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorMaskIndexedEXT);
    _COUNT(APICall_glColorMaskIndexedEXT);
    CHECKCALL(glColorMaskIndexedEXT);
    DO_REAL_CALL(glColorMaskIndexedEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glColorMaskIndexedEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorMaskIndexedEXT);
}

void GLAPIENTRY glColorMaski(GLuint _p0, GLboolean _p1, GLboolean _p2, GLboolean _p3, GLboolean _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorMaski);
    _COUNT(APICall_glColorMaski);
    CHECKCALL(glColorMaski);
    DO_REAL_CALL(glColorMaski(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glColorMaski);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorMaski);
}

void GLAPIENTRY glColorMaterial(GLenum face, GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorMaterial);
    _COUNT(APICall_glColorMaterial);
    CHECKCALL(glColorMaterial);
    DO_REAL_CALL(glColorMaterial(face,mode));
    _W.writeAPICall(APICall_glColorMaterial);
    _W.writeMark("(");
    _W.writeEnum(face);
    _W.writeMark(",");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorMaterial);
}

void GLAPIENTRY glColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *ptr)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorPointer);
    _COUNT(APICall_glColorPointer);
    CHECKCALL(glColorPointer);
    DO_REAL_CALL(glColorPointer(size,type,stride,ptr));
    _W.writeAPICall(APICall_glColorPointer);
    _W.writeMark("(");
    _W.write(size);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.write(stride);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glColorPointer_SPECIFIC(size,type,stride,ptr);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorPointer);
}

void GLAPIENTRY glColorPointerEXT(GLint _p0, GLenum _p1, GLsizei _p2, GLsizei _p3, const GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorPointerEXT);
    _COUNT(APICall_glColorPointerEXT);
    CHECKCALL(glColorPointerEXT);
    DO_REAL_CALL(glColorPointerEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glColorPointerEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorPointerEXT);
}

void GLAPIENTRY glColorPointervINTEL(GLint _p0, GLenum _p1, const GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorPointervINTEL);
    _COUNT(APICall_glColorPointervINTEL);
    CHECKCALL(glColorPointervINTEL);
    DO_REAL_CALL(glColorPointervINTEL(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glColorPointervINTEL);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorPointervINTEL);
}

void GLAPIENTRY glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorSubTable);
    _COUNT(APICall_glColorSubTable);
    CHECKCALL(glColorSubTable);
    DO_REAL_CALL(glColorSubTable(target,start,count,format,type,data));
    _W.writeAPICall(APICall_glColorSubTable);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(start);
    _W.writeMark(",");
    _W.write(count);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&data);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorSubTable);
}

void GLAPIENTRY glColorSubTableEXT(GLenum _p0, GLsizei _p1, GLsizei _p2, GLenum _p3, GLenum _p4, const GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorSubTableEXT);
    _COUNT(APICall_glColorSubTableEXT);
    CHECKCALL(glColorSubTableEXT);
    DO_REAL_CALL(glColorSubTableEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glColorSubTableEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorSubTableEXT);
}

void GLAPIENTRY glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorTable);
    _COUNT(APICall_glColorTable);
    CHECKCALL(glColorTable);
    DO_REAL_CALL(glColorTable(target,internalformat,width,format,type,table));
    _W.writeAPICall(APICall_glColorTable);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&table);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorTable);
}

void GLAPIENTRY glColorTableEXT(GLenum _p0, GLenum _p1, GLsizei _p2, GLenum _p3, GLenum _p4, const GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorTableEXT);
    _COUNT(APICall_glColorTableEXT);
    CHECKCALL(glColorTableEXT);
    DO_REAL_CALL(glColorTableEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glColorTableEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glColorTableEXT_SPECIFIC(_p0,_p1,_p2,_p3,_p4,_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorTableEXT);
}

void GLAPIENTRY glColorTableParameterfv(GLenum target, GLenum pname, const GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorTableParameterfv);
    _COUNT(APICall_glColorTableParameterfv);
    CHECKCALL(glColorTableParameterfv);
    DO_REAL_CALL(glColorTableParameterfv(target,pname,params));
    _W.writeAPICall(APICall_glColorTableParameterfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorTableParameterfv);
}

void GLAPIENTRY glColorTableParameterfvSGI(GLenum _p0, GLenum _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorTableParameterfvSGI);
    _COUNT(APICall_glColorTableParameterfvSGI);
    CHECKCALL(glColorTableParameterfvSGI);
    DO_REAL_CALL(glColorTableParameterfvSGI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glColorTableParameterfvSGI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorTableParameterfvSGI);
}

void GLAPIENTRY glColorTableParameteriv(GLenum target, GLenum pname, const GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorTableParameteriv);
    _COUNT(APICall_glColorTableParameteriv);
    CHECKCALL(glColorTableParameteriv);
    DO_REAL_CALL(glColorTableParameteriv(target,pname,params));
    _W.writeAPICall(APICall_glColorTableParameteriv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorTableParameteriv);
}

void GLAPIENTRY glColorTableParameterivSGI(GLenum _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorTableParameterivSGI);
    _COUNT(APICall_glColorTableParameterivSGI);
    CHECKCALL(glColorTableParameterivSGI);
    DO_REAL_CALL(glColorTableParameterivSGI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glColorTableParameterivSGI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorTableParameterivSGI);
}

void GLAPIENTRY glColorTableSGI(GLenum _p0, GLenum _p1, GLsizei _p2, GLenum _p3, GLenum _p4, const GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glColorTableSGI);
    _COUNT(APICall_glColorTableSGI);
    CHECKCALL(glColorTableSGI);
    DO_REAL_CALL(glColorTableSGI(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glColorTableSGI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glColorTableSGI);
}

void GLAPIENTRY glCombinerInputNV(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3, GLenum _p4, GLenum _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCombinerInputNV);
    _COUNT(APICall_glCombinerInputNV);
    CHECKCALL(glCombinerInputNV);
    DO_REAL_CALL(glCombinerInputNV(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glCombinerInputNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCombinerInputNV);
}

void GLAPIENTRY glCombinerOutputNV(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3, GLenum _p4, GLenum _p5, GLenum _p6, GLboolean _p7, GLboolean _p8, GLboolean _p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCombinerOutputNV);
    _COUNT(APICall_glCombinerOutputNV);
    CHECKCALL(glCombinerOutputNV);
    DO_REAL_CALL(glCombinerOutputNV(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glCombinerOutputNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.writeEnum(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCombinerOutputNV);
}

void GLAPIENTRY glCombinerParameterfNV(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCombinerParameterfNV);
    _COUNT(APICall_glCombinerParameterfNV);
    CHECKCALL(glCombinerParameterfNV);
    DO_REAL_CALL(glCombinerParameterfNV(_p0,_p1));
    _W.writeAPICall(APICall_glCombinerParameterfNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCombinerParameterfNV);
}

void GLAPIENTRY glCombinerParameterfvNV(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCombinerParameterfvNV);
    _COUNT(APICall_glCombinerParameterfvNV);
    CHECKCALL(glCombinerParameterfvNV);
    DO_REAL_CALL(glCombinerParameterfvNV(_p0,_p1));
    _W.writeAPICall(APICall_glCombinerParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCombinerParameterfvNV);
}

void GLAPIENTRY glCombinerParameteriNV(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCombinerParameteriNV);
    _COUNT(APICall_glCombinerParameteriNV);
    CHECKCALL(glCombinerParameteriNV);
    DO_REAL_CALL(glCombinerParameteriNV(_p0,_p1));
    _W.writeAPICall(APICall_glCombinerParameteriNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCombinerParameteriNV);
}

void GLAPIENTRY glCombinerParameterivNV(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCombinerParameterivNV);
    _COUNT(APICall_glCombinerParameterivNV);
    CHECKCALL(glCombinerParameterivNV);
    DO_REAL_CALL(glCombinerParameterivNV(_p0,_p1));
    _W.writeAPICall(APICall_glCombinerParameterivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCombinerParameterivNV);
}

void GLAPIENTRY glCombinerStageParameterfvNV(GLenum _p0, GLenum _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCombinerStageParameterfvNV);
    _COUNT(APICall_glCombinerStageParameterfvNV);
    CHECKCALL(glCombinerStageParameterfvNV);
    DO_REAL_CALL(glCombinerStageParameterfvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glCombinerStageParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCombinerStageParameterfvNV);
}

void GLAPIENTRY glCompileShader(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompileShader);
    _COUNT(APICall_glCompileShader);
    CHECKCALL(glCompileShader);
    DO_REAL_CALL(glCompileShader(_p0));
    _W.writeAPICall(APICall_glCompileShader);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompileShader);
}

void GLAPIENTRY glCompileShaderARB(GLhandleARB _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompileShaderARB);
    _COUNT(APICall_glCompileShaderARB);
    CHECKCALL(glCompileShaderARB);
    DO_REAL_CALL(glCompileShaderARB(_p0));
    _W.writeAPICall(APICall_glCompileShaderARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompileShaderARB);
}

void GLAPIENTRY glCompressedMultiTexImage1DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLint _p5, GLsizei _p6, const GLvoid *_p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedMultiTexImage1DEXT);
    _COUNT(APICall_glCompressedMultiTexImage1DEXT);
    CHECKCALL(glCompressedMultiTexImage1DEXT);
    DO_REAL_CALL(glCompressedMultiTexImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glCompressedMultiTexImage1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeUnknown(&_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedMultiTexImage1DEXT);
}

void GLAPIENTRY glCompressedMultiTexImage2DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLsizei _p5, GLint _p6, GLsizei _p7, const GLvoid *_p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedMultiTexImage2DEXT);
    _COUNT(APICall_glCompressedMultiTexImage2DEXT);
    CHECKCALL(glCompressedMultiTexImage2DEXT);
    DO_REAL_CALL(glCompressedMultiTexImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glCompressedMultiTexImage2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeUnknown(&_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedMultiTexImage2DEXT);
}

void GLAPIENTRY glCompressedMultiTexImage3DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLsizei _p5, GLsizei _p6, GLint _p7, GLsizei _p8, const GLvoid *_p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedMultiTexImage3DEXT);
    _COUNT(APICall_glCompressedMultiTexImage3DEXT);
    CHECKCALL(glCompressedMultiTexImage3DEXT);
    DO_REAL_CALL(glCompressedMultiTexImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glCompressedMultiTexImage3DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.writeUnknown(&_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedMultiTexImage3DEXT);
}

void GLAPIENTRY glCompressedMultiTexSubImage1DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLsizei _p4, GLenum _p5, GLsizei _p6, const GLvoid *_p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedMultiTexSubImage1DEXT);
    _COUNT(APICall_glCompressedMultiTexSubImage1DEXT);
    CHECKCALL(glCompressedMultiTexSubImage1DEXT);
    DO_REAL_CALL(glCompressedMultiTexSubImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glCompressedMultiTexSubImage1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeUnknown(&_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedMultiTexSubImage1DEXT);
}

void GLAPIENTRY glCompressedMultiTexSubImage2DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLsizei _p5, GLsizei _p6, GLenum _p7, GLsizei _p8, const GLvoid *_p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedMultiTexSubImage2DEXT);
    _COUNT(APICall_glCompressedMultiTexSubImage2DEXT);
    CHECKCALL(glCompressedMultiTexSubImage2DEXT);
    DO_REAL_CALL(glCompressedMultiTexSubImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glCompressedMultiTexSubImage2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.writeUnknown(&_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedMultiTexSubImage2DEXT);
}

void GLAPIENTRY glCompressedMultiTexSubImage3DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLsizei _p6, GLsizei _p7, GLsizei _p8, GLenum _p9, GLsizei _p10, const GLvoid *_p11)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedMultiTexSubImage3DEXT);
    _COUNT(APICall_glCompressedMultiTexSubImage3DEXT);
    CHECKCALL(glCompressedMultiTexSubImage3DEXT);
    DO_REAL_CALL(glCompressedMultiTexSubImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11));
    _W.writeAPICall(APICall_glCompressedMultiTexSubImage3DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(",");
    _W.write(_p10);
    _W.writeMark(",");
    _W.writeUnknown(&_p11);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedMultiTexSubImage3DEXT);
}

void GLAPIENTRY glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexImage1D);
    _COUNT(APICall_glCompressedTexImage1D);
    CHECKCALL(glCompressedTexImage1D);
    DO_REAL_CALL(glCompressedTexImage1D(target,level,internalformat,width,border,imageSize,data));
    _W.writeAPICall(APICall_glCompressedTexImage1D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(border);
    _W.writeMark(",");
    _W.write(imageSize);
    _W.writeMark(",");
    _W.writeUnknown(&data);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexImage1D);
}

void GLAPIENTRY glCompressedTexImage1DARB(GLenum _p0, GLint _p1, GLenum _p2, GLsizei _p3, GLint _p4, GLsizei _p5, const GLvoid *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexImage1DARB);
    _COUNT(APICall_glCompressedTexImage1DARB);
    CHECKCALL(glCompressedTexImage1DARB);
    DO_REAL_CALL(glCompressedTexImage1DARB(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glCompressedTexImage1DARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexImage1DARB);
}

void GLAPIENTRY glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexImage2D);
    _COUNT(APICall_glCompressedTexImage2D);
    CHECKCALL(glCompressedTexImage2D);
    DO_REAL_CALL(glCompressedTexImage2D(target,level,internalformat,width,height,border,imageSize,data));
    _W.writeAPICall(APICall_glCompressedTexImage2D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.write(border);
    _W.writeMark(",");
    _W.write(imageSize);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glCompressedTexImage2D_SPECIFIC(target,level,internalformat,width,height,border,imageSize,data);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexImage2D);
}

void GLAPIENTRY glCompressedTexImage2DARB(GLenum _p0, GLint _p1, GLenum _p2, GLsizei _p3, GLsizei _p4, GLint _p5, GLsizei _p6, const GLvoid *_p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexImage2DARB);
    _COUNT(APICall_glCompressedTexImage2DARB);
    CHECKCALL(glCompressedTexImage2DARB);
    DO_REAL_CALL(glCompressedTexImage2DARB(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glCompressedTexImage2DARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glCompressedTexImage2DARB_SPECIFIC(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexImage2DARB);
}

void GLAPIENTRY glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexImage3D);
    _COUNT(APICall_glCompressedTexImage3D);
    CHECKCALL(glCompressedTexImage3D);
    DO_REAL_CALL(glCompressedTexImage3D(target,level,internalformat,width,height,depth,border,imageSize,data));
    _W.writeAPICall(APICall_glCompressedTexImage3D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.write(depth);
    _W.writeMark(",");
    _W.write(border);
    _W.writeMark(",");
    _W.write(imageSize);
    _W.writeMark(",");
    _W.writeUnknown(&data);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexImage3D);
}

void GLAPIENTRY glCompressedTexImage3DARB(GLenum _p0, GLint _p1, GLenum _p2, GLsizei _p3, GLsizei _p4, GLsizei _p5, GLint _p6, GLsizei _p7, const GLvoid *_p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexImage3DARB);
    _COUNT(APICall_glCompressedTexImage3DARB);
    CHECKCALL(glCompressedTexImage3DARB);
    DO_REAL_CALL(glCompressedTexImage3DARB(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glCompressedTexImage3DARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeUnknown(&_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexImage3DARB);
}

void GLAPIENTRY glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexSubImage1D);
    _COUNT(APICall_glCompressedTexSubImage1D);
    CHECKCALL(glCompressedTexSubImage1D);
    DO_REAL_CALL(glCompressedTexSubImage1D(target,level,xoffset,width,format,imageSize,data));
    _W.writeAPICall(APICall_glCompressedTexSubImage1D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(xoffset);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.write(imageSize);
    _W.writeMark(",");
    _W.writeUnknown(&data);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexSubImage1D);
}

void GLAPIENTRY glCompressedTexSubImage1DARB(GLenum _p0, GLint _p1, GLint _p2, GLsizei _p3, GLenum _p4, GLsizei _p5, const GLvoid *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexSubImage1DARB);
    _COUNT(APICall_glCompressedTexSubImage1DARB);
    CHECKCALL(glCompressedTexSubImage1DARB);
    DO_REAL_CALL(glCompressedTexSubImage1DARB(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glCompressedTexSubImage1DARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexSubImage1DARB);
}

void GLAPIENTRY glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexSubImage2D);
    _COUNT(APICall_glCompressedTexSubImage2D);
    CHECKCALL(glCompressedTexSubImage2D);
    DO_REAL_CALL(glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data));
    _W.writeAPICall(APICall_glCompressedTexSubImage2D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(xoffset);
    _W.writeMark(",");
    _W.write(yoffset);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.write(imageSize);
    _W.writeMark(",");
    _W.writeUnknown(&data);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexSubImage2D);
}

void GLAPIENTRY glCompressedTexSubImage2DARB(GLenum _p0, GLint _p1, GLint _p2, GLint _p3, GLsizei _p4, GLsizei _p5, GLenum _p6, GLsizei _p7, const GLvoid *_p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexSubImage2DARB);
    _COUNT(APICall_glCompressedTexSubImage2DARB);
    CHECKCALL(glCompressedTexSubImage2DARB);
    DO_REAL_CALL(glCompressedTexSubImage2DARB(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glCompressedTexSubImage2DARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.writeEnum(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glCompressedTexSubImage2DARB_SPECIFIC(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexSubImage2DARB);
}

void GLAPIENTRY glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexSubImage3D);
    _COUNT(APICall_glCompressedTexSubImage3D);
    CHECKCALL(glCompressedTexSubImage3D);
    DO_REAL_CALL(glCompressedTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,imageSize,data));
    _W.writeAPICall(APICall_glCompressedTexSubImage3D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(xoffset);
    _W.writeMark(",");
    _W.write(yoffset);
    _W.writeMark(",");
    _W.write(zoffset);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.write(depth);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.write(imageSize);
    _W.writeMark(",");
    _W.writeUnknown(&data);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexSubImage3D);
}

void GLAPIENTRY glCompressedTexSubImage3DARB(GLenum _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4, GLsizei _p5, GLsizei _p6, GLsizei _p7, GLenum _p8, GLsizei _p9, const GLvoid *_p10)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTexSubImage3DARB);
    _COUNT(APICall_glCompressedTexSubImage3DARB);
    CHECKCALL(glCompressedTexSubImage3DARB);
    DO_REAL_CALL(glCompressedTexSubImage3DARB(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10));
    _W.writeAPICall(APICall_glCompressedTexSubImage3DARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(",");
    _W.writeUnknown(&_p10);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTexSubImage3DARB);
}

void GLAPIENTRY glCompressedTextureImage1DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLint _p5, GLsizei _p6, const GLvoid *_p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTextureImage1DEXT);
    _COUNT(APICall_glCompressedTextureImage1DEXT);
    CHECKCALL(glCompressedTextureImage1DEXT);
    DO_REAL_CALL(glCompressedTextureImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glCompressedTextureImage1DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeUnknown(&_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTextureImage1DEXT);
}

void GLAPIENTRY glCompressedTextureImage2DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLsizei _p5, GLint _p6, GLsizei _p7, const GLvoid *_p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTextureImage2DEXT);
    _COUNT(APICall_glCompressedTextureImage2DEXT);
    CHECKCALL(glCompressedTextureImage2DEXT);
    DO_REAL_CALL(glCompressedTextureImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glCompressedTextureImage2DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeUnknown(&_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTextureImage2DEXT);
}

void GLAPIENTRY glCompressedTextureImage3DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLsizei _p5, GLsizei _p6, GLint _p7, GLsizei _p8, const GLvoid *_p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTextureImage3DEXT);
    _COUNT(APICall_glCompressedTextureImage3DEXT);
    CHECKCALL(glCompressedTextureImage3DEXT);
    DO_REAL_CALL(glCompressedTextureImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glCompressedTextureImage3DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.writeUnknown(&_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTextureImage3DEXT);
}

void GLAPIENTRY glCompressedTextureSubImage1DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLint _p3, GLsizei _p4, GLenum _p5, GLsizei _p6, const GLvoid *_p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTextureSubImage1DEXT);
    _COUNT(APICall_glCompressedTextureSubImage1DEXT);
    CHECKCALL(glCompressedTextureSubImage1DEXT);
    DO_REAL_CALL(glCompressedTextureSubImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glCompressedTextureSubImage1DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeUnknown(&_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTextureSubImage1DEXT);
}

void GLAPIENTRY glCompressedTextureSubImage2DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLsizei _p5, GLsizei _p6, GLenum _p7, GLsizei _p8, const GLvoid *_p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTextureSubImage2DEXT);
    _COUNT(APICall_glCompressedTextureSubImage2DEXT);
    CHECKCALL(glCompressedTextureSubImage2DEXT);
    DO_REAL_CALL(glCompressedTextureSubImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glCompressedTextureSubImage2DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.writeUnknown(&_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTextureSubImage2DEXT);
}

void GLAPIENTRY glCompressedTextureSubImage3DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLsizei _p6, GLsizei _p7, GLsizei _p8, GLenum _p9, GLsizei _p10, const GLvoid *_p11)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCompressedTextureSubImage3DEXT);
    _COUNT(APICall_glCompressedTextureSubImage3DEXT);
    CHECKCALL(glCompressedTextureSubImage3DEXT);
    DO_REAL_CALL(glCompressedTextureSubImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11));
    _W.writeAPICall(APICall_glCompressedTextureSubImage3DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(",");
    _W.write(_p10);
    _W.writeMark(",");
    _W.writeUnknown(&_p11);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCompressedTextureSubImage3DEXT);
}

void GLAPIENTRY glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionFilter1D);
    _COUNT(APICall_glConvolutionFilter1D);
    CHECKCALL(glConvolutionFilter1D);
    DO_REAL_CALL(glConvolutionFilter1D(target,internalformat,width,format,type,image));
    _W.writeAPICall(APICall_glConvolutionFilter1D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&image);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionFilter1D);
}

void GLAPIENTRY glConvolutionFilter1DEXT(GLenum _p0, GLenum _p1, GLsizei _p2, GLenum _p3, GLenum _p4, const GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionFilter1DEXT);
    _COUNT(APICall_glConvolutionFilter1DEXT);
    CHECKCALL(glConvolutionFilter1DEXT);
    DO_REAL_CALL(glConvolutionFilter1DEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glConvolutionFilter1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionFilter1DEXT);
}

void GLAPIENTRY glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionFilter2D);
    _COUNT(APICall_glConvolutionFilter2D);
    CHECKCALL(glConvolutionFilter2D);
    DO_REAL_CALL(glConvolutionFilter2D(target,internalformat,width,height,format,type,image));
    _W.writeAPICall(APICall_glConvolutionFilter2D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&image);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionFilter2D);
}

void GLAPIENTRY glConvolutionFilter2DEXT(GLenum _p0, GLenum _p1, GLsizei _p2, GLsizei _p3, GLenum _p4, GLenum _p5, const GLvoid *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionFilter2DEXT);
    _COUNT(APICall_glConvolutionFilter2DEXT);
    CHECKCALL(glConvolutionFilter2DEXT);
    DO_REAL_CALL(glConvolutionFilter2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glConvolutionFilter2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionFilter2DEXT);
}

void GLAPIENTRY glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionParameterf);
    _COUNT(APICall_glConvolutionParameterf);
    CHECKCALL(glConvolutionParameterf);
    DO_REAL_CALL(glConvolutionParameterf(target,pname,params));
    _W.writeAPICall(APICall_glConvolutionParameterf);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionParameterf);
}

void GLAPIENTRY glConvolutionParameterfEXT(GLenum _p0, GLenum _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionParameterfEXT);
    _COUNT(APICall_glConvolutionParameterfEXT);
    CHECKCALL(glConvolutionParameterfEXT);
    DO_REAL_CALL(glConvolutionParameterfEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glConvolutionParameterfEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionParameterfEXT);
}

void GLAPIENTRY glConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionParameterfv);
    _COUNT(APICall_glConvolutionParameterfv);
    CHECKCALL(glConvolutionParameterfv);
    DO_REAL_CALL(glConvolutionParameterfv(target,pname,params));
    _W.writeAPICall(APICall_glConvolutionParameterfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionParameterfv);
}

void GLAPIENTRY glConvolutionParameterfvEXT(GLenum _p0, GLenum _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionParameterfvEXT);
    _COUNT(APICall_glConvolutionParameterfvEXT);
    CHECKCALL(glConvolutionParameterfvEXT);
    DO_REAL_CALL(glConvolutionParameterfvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glConvolutionParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionParameterfvEXT);
}

void GLAPIENTRY glConvolutionParameteri(GLenum target, GLenum pname, GLint params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionParameteri);
    _COUNT(APICall_glConvolutionParameteri);
    CHECKCALL(glConvolutionParameteri);
    DO_REAL_CALL(glConvolutionParameteri(target,pname,params));
    _W.writeAPICall(APICall_glConvolutionParameteri);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionParameteri);
}

void GLAPIENTRY glConvolutionParameteriEXT(GLenum _p0, GLenum _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionParameteriEXT);
    _COUNT(APICall_glConvolutionParameteriEXT);
    CHECKCALL(glConvolutionParameteriEXT);
    DO_REAL_CALL(glConvolutionParameteriEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glConvolutionParameteriEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionParameteriEXT);
}

void GLAPIENTRY glConvolutionParameteriv(GLenum target, GLenum pname, const GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionParameteriv);
    _COUNT(APICall_glConvolutionParameteriv);
    CHECKCALL(glConvolutionParameteriv);
    DO_REAL_CALL(glConvolutionParameteriv(target,pname,params));
    _W.writeAPICall(APICall_glConvolutionParameteriv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionParameteriv);
}

void GLAPIENTRY glConvolutionParameterivEXT(GLenum _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glConvolutionParameterivEXT);
    _COUNT(APICall_glConvolutionParameterivEXT);
    CHECKCALL(glConvolutionParameterivEXT);
    DO_REAL_CALL(glConvolutionParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glConvolutionParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glConvolutionParameterivEXT);
}

void GLAPIENTRY glCopyBufferSubData(GLenum _p0, GLenum _p1, GLintptr _p2, GLintptr _p3, GLsizeiptr _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyBufferSubData);
    _COUNT(APICall_glCopyBufferSubData);
    CHECKCALL(glCopyBufferSubData);
    DO_REAL_CALL(glCopyBufferSubData(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glCopyBufferSubData);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyBufferSubData);
}

void GLAPIENTRY glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyColorSubTable);
    _COUNT(APICall_glCopyColorSubTable);
    CHECKCALL(glCopyColorSubTable);
    DO_REAL_CALL(glCopyColorSubTable(target,start,x,y,width));
    _W.writeAPICall(APICall_glCopyColorSubTable);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(start);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyColorSubTable);
}

void GLAPIENTRY glCopyColorSubTableEXT(GLenum _p0, GLsizei _p1, GLint _p2, GLint _p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyColorSubTableEXT);
    _COUNT(APICall_glCopyColorSubTableEXT);
    CHECKCALL(glCopyColorSubTableEXT);
    DO_REAL_CALL(glCopyColorSubTableEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glCopyColorSubTableEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyColorSubTableEXT);
}

void GLAPIENTRY glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyColorTable);
    _COUNT(APICall_glCopyColorTable);
    CHECKCALL(glCopyColorTable);
    DO_REAL_CALL(glCopyColorTable(target,internalformat,x,y,width));
    _W.writeAPICall(APICall_glCopyColorTable);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyColorTable);
}

void GLAPIENTRY glCopyColorTableSGI(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyColorTableSGI);
    _COUNT(APICall_glCopyColorTableSGI);
    CHECKCALL(glCopyColorTableSGI);
    DO_REAL_CALL(glCopyColorTableSGI(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glCopyColorTableSGI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyColorTableSGI);
}

void GLAPIENTRY glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyConvolutionFilter1D);
    _COUNT(APICall_glCopyConvolutionFilter1D);
    CHECKCALL(glCopyConvolutionFilter1D);
    DO_REAL_CALL(glCopyConvolutionFilter1D(target,internalformat,x,y,width));
    _W.writeAPICall(APICall_glCopyConvolutionFilter1D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyConvolutionFilter1D);
}

void GLAPIENTRY glCopyConvolutionFilter1DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyConvolutionFilter1DEXT);
    _COUNT(APICall_glCopyConvolutionFilter1DEXT);
    CHECKCALL(glCopyConvolutionFilter1DEXT);
    DO_REAL_CALL(glCopyConvolutionFilter1DEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glCopyConvolutionFilter1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyConvolutionFilter1DEXT);
}

void GLAPIENTRY glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyConvolutionFilter2D);
    _COUNT(APICall_glCopyConvolutionFilter2D);
    CHECKCALL(glCopyConvolutionFilter2D);
    DO_REAL_CALL(glCopyConvolutionFilter2D(target,internalformat,x,y,width,height));
    _W.writeAPICall(APICall_glCopyConvolutionFilter2D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyConvolutionFilter2D);
}

void GLAPIENTRY glCopyConvolutionFilter2DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLsizei _p4, GLsizei _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyConvolutionFilter2DEXT);
    _COUNT(APICall_glCopyConvolutionFilter2DEXT);
    CHECKCALL(glCopyConvolutionFilter2DEXT);
    DO_REAL_CALL(glCopyConvolutionFilter2DEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glCopyConvolutionFilter2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyConvolutionFilter2DEXT);
}

void GLAPIENTRY glCopyMultiTexImage1DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLint _p4, GLint _p5, GLsizei _p6, GLint _p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyMultiTexImage1DEXT);
    _COUNT(APICall_glCopyMultiTexImage1DEXT);
    CHECKCALL(glCopyMultiTexImage1DEXT);
    DO_REAL_CALL(glCopyMultiTexImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glCopyMultiTexImage1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyMultiTexImage1DEXT);
}

void GLAPIENTRY glCopyMultiTexImage2DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLint _p4, GLint _p5, GLsizei _p6, GLsizei _p7, GLint _p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyMultiTexImage2DEXT);
    _COUNT(APICall_glCopyMultiTexImage2DEXT);
    CHECKCALL(glCopyMultiTexImage2DEXT);
    DO_REAL_CALL(glCopyMultiTexImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glCopyMultiTexImage2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyMultiTexImage2DEXT);
}

void GLAPIENTRY glCopyMultiTexSubImage1DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLsizei _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyMultiTexSubImage1DEXT);
    _COUNT(APICall_glCopyMultiTexSubImage1DEXT);
    CHECKCALL(glCopyMultiTexSubImage1DEXT);
    DO_REAL_CALL(glCopyMultiTexSubImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glCopyMultiTexSubImage1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyMultiTexSubImage1DEXT);
}

void GLAPIENTRY glCopyMultiTexSubImage2DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLint _p6, GLsizei _p7, GLsizei _p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyMultiTexSubImage2DEXT);
    _COUNT(APICall_glCopyMultiTexSubImage2DEXT);
    CHECKCALL(glCopyMultiTexSubImage2DEXT);
    DO_REAL_CALL(glCopyMultiTexSubImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glCopyMultiTexSubImage2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyMultiTexSubImage2DEXT);
}

void GLAPIENTRY glCopyMultiTexSubImage3DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLint _p6, GLint _p7, GLsizei _p8, GLsizei _p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyMultiTexSubImage3DEXT);
    _COUNT(APICall_glCopyMultiTexSubImage3DEXT);
    CHECKCALL(glCopyMultiTexSubImage3DEXT);
    DO_REAL_CALL(glCopyMultiTexSubImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glCopyMultiTexSubImage3DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyMultiTexSubImage3DEXT);
}

void GLAPIENTRY glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyPixels);
    _COUNT(APICall_glCopyPixels);
    CHECKCALL(glCopyPixels);
    DO_REAL_CALL(glCopyPixels(x,y,width,height,type));
    _W.writeAPICall(APICall_glCopyPixels);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyPixels);
}

void GLAPIENTRY glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexImage1D);
    _COUNT(APICall_glCopyTexImage1D);
    CHECKCALL(glCopyTexImage1D);
    DO_REAL_CALL(glCopyTexImage1D(target,level,internalformat,x,y,width,border));
    _W.writeAPICall(APICall_glCopyTexImage1D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(border);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexImage1D);
}

void GLAPIENTRY glCopyTexImage1DEXT(GLenum _p0, GLint _p1, GLenum _p2, GLint _p3, GLint _p4, GLsizei _p5, GLint _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexImage1DEXT);
    _COUNT(APICall_glCopyTexImage1DEXT);
    CHECKCALL(glCopyTexImage1DEXT);
    DO_REAL_CALL(glCopyTexImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glCopyTexImage1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexImage1DEXT);
}

void GLAPIENTRY glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexImage2D);
    _COUNT(APICall_glCopyTexImage2D);
    CHECKCALL(glCopyTexImage2D);
    DO_REAL_CALL(glCopyTexImage2D(target,level,internalformat,x,y,width,height,border));
    _W.writeAPICall(APICall_glCopyTexImage2D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.write(border);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexImage2D);
}

void GLAPIENTRY glCopyTexImage2DEXT(GLenum _p0, GLint _p1, GLenum _p2, GLint _p3, GLint _p4, GLsizei _p5, GLsizei _p6, GLint _p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexImage2DEXT);
    _COUNT(APICall_glCopyTexImage2DEXT);
    CHECKCALL(glCopyTexImage2DEXT);
    DO_REAL_CALL(glCopyTexImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glCopyTexImage2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexImage2DEXT);
}

void GLAPIENTRY glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexSubImage1D);
    _COUNT(APICall_glCopyTexSubImage1D);
    CHECKCALL(glCopyTexSubImage1D);
    DO_REAL_CALL(glCopyTexSubImage1D(target,level,xoffset,x,y,width));
    _W.writeAPICall(APICall_glCopyTexSubImage1D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(xoffset);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexSubImage1D);
}

void GLAPIENTRY glCopyTexSubImage1DEXT(GLenum _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4, GLsizei _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexSubImage1DEXT);
    _COUNT(APICall_glCopyTexSubImage1DEXT);
    CHECKCALL(glCopyTexSubImage1DEXT);
    DO_REAL_CALL(glCopyTexSubImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glCopyTexSubImage1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexSubImage1DEXT);
}

void GLAPIENTRY glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexSubImage2D);
    _COUNT(APICall_glCopyTexSubImage2D);
    CHECKCALL(glCopyTexSubImage2D);
    DO_REAL_CALL(glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height));
    _W.writeAPICall(APICall_glCopyTexSubImage2D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(xoffset);
    _W.writeMark(",");
    _W.write(yoffset);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexSubImage2D);
}

void GLAPIENTRY glCopyTexSubImage2DEXT(GLenum _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLsizei _p6, GLsizei _p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexSubImage2DEXT);
    _COUNT(APICall_glCopyTexSubImage2DEXT);
    CHECKCALL(glCopyTexSubImage2DEXT);
    DO_REAL_CALL(glCopyTexSubImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glCopyTexSubImage2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexSubImage2DEXT);
}

void GLAPIENTRY glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexSubImage3D);
    _COUNT(APICall_glCopyTexSubImage3D);
    CHECKCALL(glCopyTexSubImage3D);
    DO_REAL_CALL(glCopyTexSubImage3D(target,level,xoffset,yoffset,zoffset,x,y,width,height));
    _W.writeAPICall(APICall_glCopyTexSubImage3D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(xoffset);
    _W.writeMark(",");
    _W.write(yoffset);
    _W.writeMark(",");
    _W.write(zoffset);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexSubImage3D);
}

void GLAPIENTRY glCopyTexSubImage3DEXT(GLenum _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLint _p6, GLsizei _p7, GLsizei _p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTexSubImage3DEXT);
    _COUNT(APICall_glCopyTexSubImage3DEXT);
    CHECKCALL(glCopyTexSubImage3DEXT);
    DO_REAL_CALL(glCopyTexSubImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glCopyTexSubImage3DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTexSubImage3DEXT);
}

void GLAPIENTRY glCopyTextureImage1DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLint _p4, GLint _p5, GLsizei _p6, GLint _p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTextureImage1DEXT);
    _COUNT(APICall_glCopyTextureImage1DEXT);
    CHECKCALL(glCopyTextureImage1DEXT);
    DO_REAL_CALL(glCopyTextureImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glCopyTextureImage1DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTextureImage1DEXT);
}

void GLAPIENTRY glCopyTextureImage2DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLint _p4, GLint _p5, GLsizei _p6, GLsizei _p7, GLint _p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTextureImage2DEXT);
    _COUNT(APICall_glCopyTextureImage2DEXT);
    CHECKCALL(glCopyTextureImage2DEXT);
    DO_REAL_CALL(glCopyTextureImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glCopyTextureImage2DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTextureImage2DEXT);
}

void GLAPIENTRY glCopyTextureSubImage1DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLsizei _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTextureSubImage1DEXT);
    _COUNT(APICall_glCopyTextureSubImage1DEXT);
    CHECKCALL(glCopyTextureSubImage1DEXT);
    DO_REAL_CALL(glCopyTextureSubImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glCopyTextureSubImage1DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTextureSubImage1DEXT);
}

void GLAPIENTRY glCopyTextureSubImage2DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLint _p6, GLsizei _p7, GLsizei _p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTextureSubImage2DEXT);
    _COUNT(APICall_glCopyTextureSubImage2DEXT);
    CHECKCALL(glCopyTextureSubImage2DEXT);
    DO_REAL_CALL(glCopyTextureSubImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glCopyTextureSubImage2DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTextureSubImage2DEXT);
}

void GLAPIENTRY glCopyTextureSubImage3DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLint _p6, GLint _p7, GLsizei _p8, GLsizei _p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCopyTextureSubImage3DEXT);
    _COUNT(APICall_glCopyTextureSubImage3DEXT);
    CHECKCALL(glCopyTextureSubImage3DEXT);
    DO_REAL_CALL(glCopyTextureSubImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glCopyTextureSubImage3DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCopyTextureSubImage3DEXT);
}

GLuint GLAPIENTRY glCreateProgram()
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCreateProgram);
    _COUNT(APICall_glCreateProgram);
    CHECKCALL(glCreateProgram);
    _result = DO_REAL_CALL(glCreateProgram());
    _W.writeAPICall(APICall_glCreateProgram);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCreateProgram);
    return _result;
}

GLhandleARB GLAPIENTRY glCreateProgramObjectARB()
{
    GLhandleARB _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCreateProgramObjectARB);
    _COUNT(APICall_glCreateProgramObjectARB);
    CHECKCALL(glCreateProgramObjectARB);
    _result = DO_REAL_CALL(glCreateProgramObjectARB());
    _W.writeAPICall(APICall_glCreateProgramObjectARB);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCreateProgramObjectARB);
    return _result;
}

GLuint GLAPIENTRY glCreateShader(GLenum _p0)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCreateShader);
    _COUNT(APICall_glCreateShader);
    CHECKCALL(glCreateShader);
    _result = DO_REAL_CALL(glCreateShader(_p0));
    _W.writeAPICall(APICall_glCreateShader);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCreateShader);
    return _result;
}

GLhandleARB GLAPIENTRY glCreateShaderObjectARB(GLenum _p0)
{
    GLhandleARB _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCreateShaderObjectARB);
    _COUNT(APICall_glCreateShaderObjectARB);
    CHECKCALL(glCreateShaderObjectARB);
    _result = DO_REAL_CALL(glCreateShaderObjectARB(_p0));
    _W.writeAPICall(APICall_glCreateShaderObjectARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCreateShaderObjectARB);
    return _result;
}

void GLAPIENTRY glCullFace(GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCullFace);
    _COUNT(APICall_glCullFace);
    CHECKCALL(glCullFace);
    DO_REAL_CALL(glCullFace(mode));
    _W.writeAPICall(APICall_glCullFace);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCullFace);
}

void GLAPIENTRY glCullParameterdvEXT(GLenum _p0, GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCullParameterdvEXT);
    _COUNT(APICall_glCullParameterdvEXT);
    CHECKCALL(glCullParameterdvEXT);
    DO_REAL_CALL(glCullParameterdvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glCullParameterdvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCullParameterdvEXT);
}

void GLAPIENTRY glCullParameterfvEXT(GLenum _p0, GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCullParameterfvEXT);
    _COUNT(APICall_glCullParameterfvEXT);
    CHECKCALL(glCullParameterfvEXT);
    DO_REAL_CALL(glCullParameterfvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glCullParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCullParameterfvEXT);
}

void GLAPIENTRY glCurrentPaletteMatrixARB(GLint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glCurrentPaletteMatrixARB);
    _COUNT(APICall_glCurrentPaletteMatrixARB);
    CHECKCALL(glCurrentPaletteMatrixARB);
    DO_REAL_CALL(glCurrentPaletteMatrixARB(_p0));
    _W.writeAPICall(APICall_glCurrentPaletteMatrixARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glCurrentPaletteMatrixARB);
}

void GLAPIENTRY glDeformSGIX(GLbitfield _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeformSGIX);
    _COUNT(APICall_glDeformSGIX);
    CHECKCALL(glDeformSGIX);
    DO_REAL_CALL(glDeformSGIX(_p0));
    _W.writeAPICall(APICall_glDeformSGIX);
    _W.writeMark("(");
    _W.writeOring(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeformSGIX);
}

void GLAPIENTRY glDeformationMap3dSGIX(GLenum _p0, GLdouble _p1, GLdouble _p2, GLint _p3, GLint _p4, GLdouble _p5, GLdouble _p6, GLint _p7, GLint _p8, GLdouble _p9, GLdouble _p10, GLint _p11, GLint _p12, const GLdouble *_p13)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeformationMap3dSGIX);
    _COUNT(APICall_glDeformationMap3dSGIX);
    CHECKCALL(glDeformationMap3dSGIX);
    DO_REAL_CALL(glDeformationMap3dSGIX(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11,_p12,_p13));
    _W.writeAPICall(APICall_glDeformationMap3dSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(",");
    _W.write(_p10);
    _W.writeMark(",");
    _W.write(_p11);
    _W.writeMark(",");
    _W.write(_p12);
    _W.writeMark(",");
    _W.writeUnknown(&_p13);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeformationMap3dSGIX);
}

void GLAPIENTRY glDeformationMap3fSGIX(GLenum _p0, GLfloat _p1, GLfloat _p2, GLint _p3, GLint _p4, GLfloat _p5, GLfloat _p6, GLint _p7, GLint _p8, GLfloat _p9, GLfloat _p10, GLint _p11, GLint _p12, const GLfloat *_p13)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeformationMap3fSGIX);
    _COUNT(APICall_glDeformationMap3fSGIX);
    CHECKCALL(glDeformationMap3fSGIX);
    DO_REAL_CALL(glDeformationMap3fSGIX(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11,_p12,_p13));
    _W.writeAPICall(APICall_glDeformationMap3fSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(",");
    _W.write(_p10);
    _W.writeMark(",");
    _W.write(_p11);
    _W.writeMark(",");
    _W.write(_p12);
    _W.writeMark(",");
    _W.writeUnknown(&_p13);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeformationMap3fSGIX);
}

void GLAPIENTRY glDeleteAsyncMarkersSGIX(GLuint _p0, GLsizei _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteAsyncMarkersSGIX);
    _COUNT(APICall_glDeleteAsyncMarkersSGIX);
    CHECKCALL(glDeleteAsyncMarkersSGIX);
    DO_REAL_CALL(glDeleteAsyncMarkersSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteAsyncMarkersSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteAsyncMarkersSGIX);
}

void GLAPIENTRY glDeleteBuffers(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteBuffers);
    _COUNT(APICall_glDeleteBuffers);
    CHECKCALL(glDeleteBuffers);
    DO_REAL_CALL(glDeleteBuffers(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteBuffers);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteBuffers);
}

void GLAPIENTRY glDeleteBuffersARB(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteBuffersARB);
    _COUNT(APICall_glDeleteBuffersARB);
    CHECKCALL(glDeleteBuffersARB);
    DO_REAL_CALL(glDeleteBuffersARB(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteBuffersARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glDeleteBuffersARB_SPECIFIC(_p0,_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteBuffersARB);
}

void GLAPIENTRY glDeleteFencesAPPLE(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteFencesAPPLE);
    _COUNT(APICall_glDeleteFencesAPPLE);
    CHECKCALL(glDeleteFencesAPPLE);
    DO_REAL_CALL(glDeleteFencesAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteFencesAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteFencesAPPLE);
}

void GLAPIENTRY glDeleteFencesNV(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteFencesNV);
    _COUNT(APICall_glDeleteFencesNV);
    CHECKCALL(glDeleteFencesNV);
    DO_REAL_CALL(glDeleteFencesNV(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteFencesNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteFencesNV);
}

void GLAPIENTRY glDeleteFragmentShaderATI(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteFragmentShaderATI);
    _COUNT(APICall_glDeleteFragmentShaderATI);
    CHECKCALL(glDeleteFragmentShaderATI);
    DO_REAL_CALL(glDeleteFragmentShaderATI(_p0));
    _W.writeAPICall(APICall_glDeleteFragmentShaderATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteFragmentShaderATI);
}

void GLAPIENTRY glDeleteFramebuffers(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteFramebuffers);
    _COUNT(APICall_glDeleteFramebuffers);
    CHECKCALL(glDeleteFramebuffers);
    DO_REAL_CALL(glDeleteFramebuffers(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteFramebuffers);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteFramebuffers);
}

void GLAPIENTRY glDeleteFramebuffersEXT(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteFramebuffersEXT);
    _COUNT(APICall_glDeleteFramebuffersEXT);
    CHECKCALL(glDeleteFramebuffersEXT);
    DO_REAL_CALL(glDeleteFramebuffersEXT(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteFramebuffersEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteFramebuffersEXT);
}

void GLAPIENTRY glDeleteLists(GLuint list, GLsizei range)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteLists);
    _COUNT(APICall_glDeleteLists);
    CHECKCALL(glDeleteLists);
    DO_REAL_CALL(glDeleteLists(list,range));
    _W.writeAPICall(APICall_glDeleteLists);
    _W.writeMark("(");
    _W.write(list);
    _W.writeMark(",");
    _W.write(range);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteLists);
}

void GLAPIENTRY glDeleteObjectARB(GLhandleARB _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteObjectARB);
    _COUNT(APICall_glDeleteObjectARB);
    CHECKCALL(glDeleteObjectARB);
    DO_REAL_CALL(glDeleteObjectARB(_p0));
    _W.writeAPICall(APICall_glDeleteObjectARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteObjectARB);
}

void GLAPIENTRY glDeleteObjectBufferATI(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteObjectBufferATI);
    _COUNT(APICall_glDeleteObjectBufferATI);
    CHECKCALL(glDeleteObjectBufferATI);
    DO_REAL_CALL(glDeleteObjectBufferATI(_p0));
    _W.writeAPICall(APICall_glDeleteObjectBufferATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteObjectBufferATI);
}

void GLAPIENTRY glDeleteOcclusionQueriesNV(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteOcclusionQueriesNV);
    _COUNT(APICall_glDeleteOcclusionQueriesNV);
    CHECKCALL(glDeleteOcclusionQueriesNV);
    DO_REAL_CALL(glDeleteOcclusionQueriesNV(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteOcclusionQueriesNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteOcclusionQueriesNV);
}

void GLAPIENTRY glDeletePerfMonitorsAMD(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeletePerfMonitorsAMD);
    _COUNT(APICall_glDeletePerfMonitorsAMD);
    CHECKCALL(glDeletePerfMonitorsAMD);
    DO_REAL_CALL(glDeletePerfMonitorsAMD(_p0,_p1));
    _W.writeAPICall(APICall_glDeletePerfMonitorsAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeletePerfMonitorsAMD);
}

void GLAPIENTRY glDeleteProgram(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteProgram);
    _COUNT(APICall_glDeleteProgram);
    CHECKCALL(glDeleteProgram);
    DO_REAL_CALL(glDeleteProgram(_p0));
    _W.writeAPICall(APICall_glDeleteProgram);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteProgram);
}

void GLAPIENTRY glDeleteProgramsARB(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteProgramsARB);
    _COUNT(APICall_glDeleteProgramsARB);
    CHECKCALL(glDeleteProgramsARB);
    DO_REAL_CALL(glDeleteProgramsARB(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteProgramsARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteProgramsARB);
}

void GLAPIENTRY glDeleteProgramsNV(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteProgramsNV);
    _COUNT(APICall_glDeleteProgramsNV);
    CHECKCALL(glDeleteProgramsNV);
    DO_REAL_CALL(glDeleteProgramsNV(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteProgramsNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteProgramsNV);
}

void GLAPIENTRY glDeleteQueries(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteQueries);
    _COUNT(APICall_glDeleteQueries);
    CHECKCALL(glDeleteQueries);
    DO_REAL_CALL(glDeleteQueries(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteQueries);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteQueries);
}

void GLAPIENTRY glDeleteQueriesARB(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteQueriesARB);
    _COUNT(APICall_glDeleteQueriesARB);
    CHECKCALL(glDeleteQueriesARB);
    DO_REAL_CALL(glDeleteQueriesARB(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteQueriesARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteQueriesARB);
}

void GLAPIENTRY glDeleteRenderbuffers(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteRenderbuffers);
    _COUNT(APICall_glDeleteRenderbuffers);
    CHECKCALL(glDeleteRenderbuffers);
    DO_REAL_CALL(glDeleteRenderbuffers(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteRenderbuffers);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteRenderbuffers);
}

void GLAPIENTRY glDeleteRenderbuffersEXT(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteRenderbuffersEXT);
    _COUNT(APICall_glDeleteRenderbuffersEXT);
    CHECKCALL(glDeleteRenderbuffersEXT);
    DO_REAL_CALL(glDeleteRenderbuffersEXT(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteRenderbuffersEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteRenderbuffersEXT);
}

void GLAPIENTRY glDeleteShader(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteShader);
    _COUNT(APICall_glDeleteShader);
    CHECKCALL(glDeleteShader);
    DO_REAL_CALL(glDeleteShader(_p0));
    _W.writeAPICall(APICall_glDeleteShader);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteShader);
}

void GLAPIENTRY glDeleteTextures(GLsizei n, const GLuint *textures)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteTextures);
    _COUNT(APICall_glDeleteTextures);
    CHECKCALL(glDeleteTextures);
    DO_REAL_CALL(glDeleteTextures(n,textures));
    _W.writeAPICall(APICall_glDeleteTextures);
    _W.writeMark("(");
    _W.write(n);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glDeleteTextures_SPECIFIC(n,textures);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteTextures);
}

void GLAPIENTRY glDeleteTexturesEXT(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteTexturesEXT);
    _COUNT(APICall_glDeleteTexturesEXT);
    CHECKCALL(glDeleteTexturesEXT);
    DO_REAL_CALL(glDeleteTexturesEXT(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteTexturesEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteTexturesEXT);
}

void GLAPIENTRY glDeleteTransformFeedbacksNV(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteTransformFeedbacksNV);
    _COUNT(APICall_glDeleteTransformFeedbacksNV);
    CHECKCALL(glDeleteTransformFeedbacksNV);
    DO_REAL_CALL(glDeleteTransformFeedbacksNV(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteTransformFeedbacksNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteTransformFeedbacksNV);
}

void GLAPIENTRY glDeleteVertexArrays(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteVertexArrays);
    _COUNT(APICall_glDeleteVertexArrays);
    CHECKCALL(glDeleteVertexArrays);
    DO_REAL_CALL(glDeleteVertexArrays(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteVertexArrays);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteVertexArrays);
}

void GLAPIENTRY glDeleteVertexArraysAPPLE(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteVertexArraysAPPLE);
    _COUNT(APICall_glDeleteVertexArraysAPPLE);
    CHECKCALL(glDeleteVertexArraysAPPLE);
    DO_REAL_CALL(glDeleteVertexArraysAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glDeleteVertexArraysAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteVertexArraysAPPLE);
}

void GLAPIENTRY glDeleteVertexShaderEXT(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDeleteVertexShaderEXT);
    _COUNT(APICall_glDeleteVertexShaderEXT);
    CHECKCALL(glDeleteVertexShaderEXT);
    DO_REAL_CALL(glDeleteVertexShaderEXT(_p0));
    _W.writeAPICall(APICall_glDeleteVertexShaderEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDeleteVertexShaderEXT);
}

void GLAPIENTRY glDepthBoundsEXT(GLclampd _p0, GLclampd _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDepthBoundsEXT);
    _COUNT(APICall_glDepthBoundsEXT);
    CHECKCALL(glDepthBoundsEXT);
    DO_REAL_CALL(glDepthBoundsEXT(_p0,_p1));
    _W.writeAPICall(APICall_glDepthBoundsEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDepthBoundsEXT);
}

void GLAPIENTRY glDepthBoundsdNV(GLdouble _p0, GLdouble _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDepthBoundsdNV);
    _COUNT(APICall_glDepthBoundsdNV);
    CHECKCALL(glDepthBoundsdNV);
    DO_REAL_CALL(glDepthBoundsdNV(_p0,_p1));
    _W.writeAPICall(APICall_glDepthBoundsdNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDepthBoundsdNV);
}

void GLAPIENTRY glDepthFunc(GLenum func)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDepthFunc);
    _COUNT(APICall_glDepthFunc);
    CHECKCALL(glDepthFunc);
    DO_REAL_CALL(glDepthFunc(func));
    _W.writeAPICall(APICall_glDepthFunc);
    _W.writeMark("(");
    _W.writeEnum(func);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDepthFunc);
}

void GLAPIENTRY glDepthMask(GLboolean flag)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDepthMask);
    _COUNT(APICall_glDepthMask);
    CHECKCALL(glDepthMask);
    DO_REAL_CALL(glDepthMask(flag));
    _W.writeAPICall(APICall_glDepthMask);
    _W.writeMark("(");
    _W.write(flag);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDepthMask);
}

void GLAPIENTRY glDepthRange(GLclampd near_val, GLclampd far_val)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDepthRange);
    _COUNT(APICall_glDepthRange);
    CHECKCALL(glDepthRange);
    DO_REAL_CALL(glDepthRange(near_val,far_val));
    _W.writeAPICall(APICall_glDepthRange);
    _W.writeMark("(");
    _W.write(near_val);
    _W.writeMark(",");
    _W.write(far_val);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDepthRange);
}

void GLAPIENTRY glDepthRangedNV(GLdouble _p0, GLdouble _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDepthRangedNV);
    _COUNT(APICall_glDepthRangedNV);
    CHECKCALL(glDepthRangedNV);
    DO_REAL_CALL(glDepthRangedNV(_p0,_p1));
    _W.writeAPICall(APICall_glDepthRangedNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDepthRangedNV);
}

void GLAPIENTRY glDetachObjectARB(GLhandleARB _p0, GLhandleARB _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDetachObjectARB);
    _COUNT(APICall_glDetachObjectARB);
    CHECKCALL(glDetachObjectARB);
    DO_REAL_CALL(glDetachObjectARB(_p0,_p1));
    _W.writeAPICall(APICall_glDetachObjectARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDetachObjectARB);
}

void GLAPIENTRY glDetachShader(GLuint _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDetachShader);
    _COUNT(APICall_glDetachShader);
    CHECKCALL(glDetachShader);
    DO_REAL_CALL(glDetachShader(_p0,_p1));
    _W.writeAPICall(APICall_glDetachShader);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDetachShader);
}

void GLAPIENTRY glDetailTexFuncSGIS(GLenum _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDetailTexFuncSGIS);
    _COUNT(APICall_glDetailTexFuncSGIS);
    CHECKCALL(glDetailTexFuncSGIS);
    DO_REAL_CALL(glDetailTexFuncSGIS(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glDetailTexFuncSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDetailTexFuncSGIS);
}

void GLAPIENTRY glDisable(GLenum cap)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDisable);
    // Specific stats code
    glDisable_STAT(cap);
    _COUNT(APICall_glDisable);
    // [GEN-CODE info: Specific user call]
    glDisable_SPECIFIC(cap);
    CHECKCALL(glDisable);
    DO_REAL_CALL(glDisable(cap));
    _W.writeAPICall(APICall_glDisable);
    _W.writeMark("(");
    _W.writeEnum(cap);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDisable);
}

void GLAPIENTRY glDisableClientState(GLenum cap)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDisableClientState);
    _COUNT(APICall_glDisableClientState);
    // [GEN-CODE info: Specific user call]
    glDisableClientState_SPECIFIC(cap);
    CHECKCALL(glDisableClientState);
    DO_REAL_CALL(glDisableClientState(cap));
    _W.writeAPICall(APICall_glDisableClientState);
    _W.writeMark("(");
    _W.writeEnum(cap);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDisableClientState);
}

void GLAPIENTRY glDisableClientStateIndexedEXT(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDisableClientStateIndexedEXT);
    _COUNT(APICall_glDisableClientStateIndexedEXT);
    CHECKCALL(glDisableClientStateIndexedEXT);
    DO_REAL_CALL(glDisableClientStateIndexedEXT(_p0,_p1));
    _W.writeAPICall(APICall_glDisableClientStateIndexedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDisableClientStateIndexedEXT);
}

void GLAPIENTRY glDisableIndexedEXT(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDisableIndexedEXT);
    _COUNT(APICall_glDisableIndexedEXT);
    CHECKCALL(glDisableIndexedEXT);
    DO_REAL_CALL(glDisableIndexedEXT(_p0,_p1));
    _W.writeAPICall(APICall_glDisableIndexedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDisableIndexedEXT);
}

void GLAPIENTRY glDisableVariantClientStateEXT(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDisableVariantClientStateEXT);
    _COUNT(APICall_glDisableVariantClientStateEXT);
    CHECKCALL(glDisableVariantClientStateEXT);
    DO_REAL_CALL(glDisableVariantClientStateEXT(_p0));
    _W.writeAPICall(APICall_glDisableVariantClientStateEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDisableVariantClientStateEXT);
}

void GLAPIENTRY glDisableVertexAttribArray(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDisableVertexAttribArray);
    _COUNT(APICall_glDisableVertexAttribArray);
    CHECKCALL(glDisableVertexAttribArray);
    DO_REAL_CALL(glDisableVertexAttribArray(_p0));
    _W.writeAPICall(APICall_glDisableVertexAttribArray);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDisableVertexAttribArray);
}

void GLAPIENTRY glDisableVertexAttribArrayARB(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDisableVertexAttribArrayARB);
    _COUNT(APICall_glDisableVertexAttribArrayARB);
    // [GEN-CODE info: Specific user call]
    glDisableVertexAttribArrayARB_SPECIFIC(_p0);
    CHECKCALL(glDisableVertexAttribArrayARB);
    DO_REAL_CALL(glDisableVertexAttribArrayARB(_p0));
    _W.writeAPICall(APICall_glDisableVertexAttribArrayARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDisableVertexAttribArrayARB);
}

void GLAPIENTRY glDisablei(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDisablei);
    _COUNT(APICall_glDisablei);
    CHECKCALL(glDisablei);
    DO_REAL_CALL(glDisablei(_p0,_p1));
    _W.writeAPICall(APICall_glDisablei);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDisablei);
}

void GLAPIENTRY glDrawArrays(GLenum mode, GLint first, GLsizei count)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawArrays);
    // Specific stats code
    glDrawArrays_STAT(mode,first,count);
    _COUNT(APICall_glDrawArrays);
    // [GEN-CODE info: Specific user call]
    glDrawArrays_SPECIFIC(mode,first,count);
    CHECKCALL(glDrawArrays);
    DO_REAL_CALL(glDrawArrays(mode,first,count));
    _W.writeAPICall(APICall_glDrawArrays);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(",");
    _W.write(first);
    _W.writeMark(",");
    _W.write(count);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawArrays);
}

void GLAPIENTRY glDrawArraysEXT(GLenum _p0, GLint _p1, GLsizei _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawArraysEXT);
    _COUNT(APICall_glDrawArraysEXT);
    CHECKCALL(glDrawArraysEXT);
    DO_REAL_CALL(glDrawArraysEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glDrawArraysEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawArraysEXT);
}

void GLAPIENTRY glDrawArraysInstanced(GLenum _p0, GLint _p1, GLsizei _p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawArraysInstanced);
    _COUNT(APICall_glDrawArraysInstanced);
    CHECKCALL(glDrawArraysInstanced);
    DO_REAL_CALL(glDrawArraysInstanced(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glDrawArraysInstanced);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawArraysInstanced);
}

void GLAPIENTRY glDrawArraysInstancedARB(GLenum _p0, GLint _p1, GLsizei _p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawArraysInstancedARB);
    _COUNT(APICall_glDrawArraysInstancedARB);
    CHECKCALL(glDrawArraysInstancedARB);
    DO_REAL_CALL(glDrawArraysInstancedARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glDrawArraysInstancedARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawArraysInstancedARB);
}

void GLAPIENTRY glDrawArraysInstancedEXT(GLenum _p0, GLint _p1, GLsizei _p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawArraysInstancedEXT);
    _COUNT(APICall_glDrawArraysInstancedEXT);
    CHECKCALL(glDrawArraysInstancedEXT);
    DO_REAL_CALL(glDrawArraysInstancedEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glDrawArraysInstancedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawArraysInstancedEXT);
}

void GLAPIENTRY glDrawBuffer(GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawBuffer);
    _COUNT(APICall_glDrawBuffer);
    CHECKCALL(glDrawBuffer);
    DO_REAL_CALL(glDrawBuffer(mode));
    _W.writeAPICall(APICall_glDrawBuffer);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawBuffer);
}

void GLAPIENTRY glDrawBuffers(GLsizei _p0, const GLenum *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawBuffers);
    _COUNT(APICall_glDrawBuffers);
    CHECKCALL(glDrawBuffers);
    DO_REAL_CALL(glDrawBuffers(_p0,_p1));
    _W.writeAPICall(APICall_glDrawBuffers);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawBuffers);
}

void GLAPIENTRY glDrawBuffersARB(GLsizei _p0, const GLenum *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawBuffersARB);
    _COUNT(APICall_glDrawBuffersARB);
    CHECKCALL(glDrawBuffersARB);
    DO_REAL_CALL(glDrawBuffersARB(_p0,_p1));
    _W.writeAPICall(APICall_glDrawBuffersARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawBuffersARB);
}

void GLAPIENTRY glDrawBuffersATI(GLsizei _p0, const GLenum *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawBuffersATI);
    _COUNT(APICall_glDrawBuffersATI);
    CHECKCALL(glDrawBuffersATI);
    DO_REAL_CALL(glDrawBuffersATI(_p0,_p1));
    _W.writeAPICall(APICall_glDrawBuffersATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawBuffersATI);
}

void GLAPIENTRY glDrawElementArrayAPPLE(GLenum _p0, GLint _p1, GLsizei _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawElementArrayAPPLE);
    _COUNT(APICall_glDrawElementArrayAPPLE);
    CHECKCALL(glDrawElementArrayAPPLE);
    DO_REAL_CALL(glDrawElementArrayAPPLE(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glDrawElementArrayAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawElementArrayAPPLE);
}

void GLAPIENTRY glDrawElementArrayATI(GLenum _p0, GLsizei _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawElementArrayATI);
    _COUNT(APICall_glDrawElementArrayATI);
    CHECKCALL(glDrawElementArrayATI);
    DO_REAL_CALL(glDrawElementArrayATI(_p0,_p1));
    _W.writeAPICall(APICall_glDrawElementArrayATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawElementArrayATI);
}

void GLAPIENTRY glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawElements);
    // Specific stats code
    glDrawElements_STAT(mode,count,type,indices);
    _COUNT(APICall_glDrawElements);
    // [GEN-CODE info: Specific user call]
    glDrawElements_SPECIFIC(mode,count,type,indices);
    CHECKCALL(glDrawElements);
    DO_REAL_CALL(glDrawElements(mode,count,type,indices));
    _W.writeAPICall(APICall_glDrawElements);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(",");
    _W.write(count);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glDrawElements_SPECIFIC(mode,count,type,indices);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawElements);
}

void GLAPIENTRY glDrawElementsInstanced(GLenum _p0, GLsizei _p1, GLenum _p2, const GLvoid *_p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawElementsInstanced);
    _COUNT(APICall_glDrawElementsInstanced);
    CHECKCALL(glDrawElementsInstanced);
    DO_REAL_CALL(glDrawElementsInstanced(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glDrawElementsInstanced);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawElementsInstanced);
}

void GLAPIENTRY glDrawElementsInstancedARB(GLenum _p0, GLsizei _p1, GLenum _p2, const GLvoid *_p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawElementsInstancedARB);
    _COUNT(APICall_glDrawElementsInstancedARB);
    CHECKCALL(glDrawElementsInstancedARB);
    DO_REAL_CALL(glDrawElementsInstancedARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glDrawElementsInstancedARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawElementsInstancedARB);
}

void GLAPIENTRY glDrawElementsInstancedEXT(GLenum _p0, GLsizei _p1, GLenum _p2, const GLvoid *_p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawElementsInstancedEXT);
    _COUNT(APICall_glDrawElementsInstancedEXT);
    CHECKCALL(glDrawElementsInstancedEXT);
    DO_REAL_CALL(glDrawElementsInstancedEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glDrawElementsInstancedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawElementsInstancedEXT);
}

void GLAPIENTRY glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawPixels);
    _COUNT(APICall_glDrawPixels);
    CHECKCALL(glDrawPixels);
    DO_REAL_CALL(glDrawPixels(width,height,format,type,pixels));
    _W.writeAPICall(APICall_glDrawPixels);
    _W.writeMark("(");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&pixels);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawPixels);
}

void GLAPIENTRY glDrawRangeElementArrayAPPLE(GLenum _p0, GLuint _p1, GLuint _p2, GLint _p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawRangeElementArrayAPPLE);
    _COUNT(APICall_glDrawRangeElementArrayAPPLE);
    CHECKCALL(glDrawRangeElementArrayAPPLE);
    DO_REAL_CALL(glDrawRangeElementArrayAPPLE(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glDrawRangeElementArrayAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawRangeElementArrayAPPLE);
}

void GLAPIENTRY glDrawRangeElementArrayATI(GLenum _p0, GLuint _p1, GLuint _p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawRangeElementArrayATI);
    // Specific stats code
    glDrawRangeElementArrayATI_STAT(_p0,_p1,_p2,_p3);
    _COUNT(APICall_glDrawRangeElementArrayATI);
    CHECKCALL(glDrawRangeElementArrayATI);
    DO_REAL_CALL(glDrawRangeElementArrayATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glDrawRangeElementArrayATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawRangeElementArrayATI);
}

void GLAPIENTRY glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawRangeElements);
    // Specific stats code
    glDrawRangeElements_STAT(mode,start,end,count,type,indices);
    _COUNT(APICall_glDrawRangeElements);
    // [GEN-CODE info: Specific user call]
    glDrawRangeElements_SPECIFIC(mode,start,end,count,type,indices);
    CHECKCALL(glDrawRangeElements);
    DO_REAL_CALL(glDrawRangeElements(mode,start,end,count,type,indices));
    _W.writeAPICall(APICall_glDrawRangeElements);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(",");
    _W.write(start);
    _W.writeMark(",");
    _W.write(end);
    _W.writeMark(",");
    _W.write(count);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glDrawRangeElements_SPECIFIC(mode,start,end,count,type,indices);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawRangeElements);
}

void GLAPIENTRY glDrawRangeElementsEXT(GLenum _p0, GLuint _p1, GLuint _p2, GLsizei _p3, GLenum _p4, const GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawRangeElementsEXT);
    _COUNT(APICall_glDrawRangeElementsEXT);
    CHECKCALL(glDrawRangeElementsEXT);
    DO_REAL_CALL(glDrawRangeElementsEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glDrawRangeElementsEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawRangeElementsEXT);
}

void GLAPIENTRY glDrawTransformFeedbackNV(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glDrawTransformFeedbackNV);
    _COUNT(APICall_glDrawTransformFeedbackNV);
    CHECKCALL(glDrawTransformFeedbackNV);
    DO_REAL_CALL(glDrawTransformFeedbackNV(_p0,_p1));
    _W.writeAPICall(APICall_glDrawTransformFeedbackNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glDrawTransformFeedbackNV);
}

void GLAPIENTRY glEdgeFlag(GLboolean flag)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEdgeFlag);
    _COUNT(APICall_glEdgeFlag);
    CHECKCALL(glEdgeFlag);
    DO_REAL_CALL(glEdgeFlag(flag));
    _W.writeAPICall(APICall_glEdgeFlag);
    _W.writeMark("(");
    _W.write(flag);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEdgeFlag);
}

void GLAPIENTRY glEdgeFlagPointer(GLsizei stride, const GLvoid *ptr)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEdgeFlagPointer);
    _COUNT(APICall_glEdgeFlagPointer);
    CHECKCALL(glEdgeFlagPointer);
    DO_REAL_CALL(glEdgeFlagPointer(stride,ptr));
    _W.writeAPICall(APICall_glEdgeFlagPointer);
    _W.writeMark("(");
    _W.write(stride);
    _W.writeMark(",");
    _W.writeUnknown(&ptr);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEdgeFlagPointer);
}

void GLAPIENTRY glEdgeFlagPointerEXT(GLsizei _p0, GLsizei _p1, const GLboolean *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEdgeFlagPointerEXT);
    _COUNT(APICall_glEdgeFlagPointerEXT);
    CHECKCALL(glEdgeFlagPointerEXT);
    DO_REAL_CALL(glEdgeFlagPointerEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glEdgeFlagPointerEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEdgeFlagPointerEXT);
}

void GLAPIENTRY glEdgeFlagv(const GLboolean *flag)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEdgeFlagv);
    _COUNT(APICall_glEdgeFlagv);
    CHECKCALL(glEdgeFlagv);
    DO_REAL_CALL(glEdgeFlagv(flag));
    _W.writeAPICall(APICall_glEdgeFlagv);
    _W.writeMark("(");
    _W.writeUnknown(&flag);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEdgeFlagv);
}

void GLAPIENTRY glElementPointerAPPLE(GLenum _p0, const GLvoid *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glElementPointerAPPLE);
    _COUNT(APICall_glElementPointerAPPLE);
    CHECKCALL(glElementPointerAPPLE);
    DO_REAL_CALL(glElementPointerAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glElementPointerAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glElementPointerAPPLE);
}

void GLAPIENTRY glElementPointerATI(GLenum _p0, const GLvoid *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glElementPointerATI);
    _COUNT(APICall_glElementPointerATI);
    CHECKCALL(glElementPointerATI);
    DO_REAL_CALL(glElementPointerATI(_p0,_p1));
    _W.writeAPICall(APICall_glElementPointerATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glElementPointerATI);
}

void GLAPIENTRY glEnable(GLenum cap)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEnable);
    // Specific stats code
    glEnable_STAT(cap);
    _COUNT(APICall_glEnable);
    // [GEN-CODE info: Specific user call]
    glEnable_SPECIFIC(cap);
    CHECKCALL(glEnable);
    DO_REAL_CALL(glEnable(cap));
    _W.writeAPICall(APICall_glEnable);
    _W.writeMark("(");
    _W.writeEnum(cap);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEnable);
}

void GLAPIENTRY glEnableClientState(GLenum cap)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEnableClientState);
    _COUNT(APICall_glEnableClientState);
    // [GEN-CODE info: Specific user call]
    glEnableClientState_SPECIFIC(cap);
    CHECKCALL(glEnableClientState);
    DO_REAL_CALL(glEnableClientState(cap));
    _W.writeAPICall(APICall_glEnableClientState);
    _W.writeMark("(");
    _W.writeEnum(cap);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEnableClientState);
}

void GLAPIENTRY glEnableClientStateIndexedEXT(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEnableClientStateIndexedEXT);
    _COUNT(APICall_glEnableClientStateIndexedEXT);
    CHECKCALL(glEnableClientStateIndexedEXT);
    DO_REAL_CALL(glEnableClientStateIndexedEXT(_p0,_p1));
    _W.writeAPICall(APICall_glEnableClientStateIndexedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEnableClientStateIndexedEXT);
}

void GLAPIENTRY glEnableIndexedEXT(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEnableIndexedEXT);
    _COUNT(APICall_glEnableIndexedEXT);
    CHECKCALL(glEnableIndexedEXT);
    DO_REAL_CALL(glEnableIndexedEXT(_p0,_p1));
    _W.writeAPICall(APICall_glEnableIndexedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEnableIndexedEXT);
}

void GLAPIENTRY glEnableVariantClientStateEXT(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEnableVariantClientStateEXT);
    _COUNT(APICall_glEnableVariantClientStateEXT);
    CHECKCALL(glEnableVariantClientStateEXT);
    DO_REAL_CALL(glEnableVariantClientStateEXT(_p0));
    _W.writeAPICall(APICall_glEnableVariantClientStateEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEnableVariantClientStateEXT);
}

void GLAPIENTRY glEnableVertexAttribArray(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEnableVertexAttribArray);
    _COUNT(APICall_glEnableVertexAttribArray);
    CHECKCALL(glEnableVertexAttribArray);
    DO_REAL_CALL(glEnableVertexAttribArray(_p0));
    _W.writeAPICall(APICall_glEnableVertexAttribArray);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEnableVertexAttribArray);
}

void GLAPIENTRY glEnableVertexAttribArrayARB(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEnableVertexAttribArrayARB);
    _COUNT(APICall_glEnableVertexAttribArrayARB);
    // [GEN-CODE info: Specific user call]
    glEnableVertexAttribArrayARB_SPECIFIC(_p0);
    CHECKCALL(glEnableVertexAttribArrayARB);
    DO_REAL_CALL(glEnableVertexAttribArrayARB(_p0));
    _W.writeAPICall(APICall_glEnableVertexAttribArrayARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEnableVertexAttribArrayARB);
}

void GLAPIENTRY glEnablei(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEnablei);
    _COUNT(APICall_glEnablei);
    CHECKCALL(glEnablei);
    DO_REAL_CALL(glEnablei(_p0,_p1));
    _W.writeAPICall(APICall_glEnablei);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEnablei);
}

void GLAPIENTRY glEnd()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEnd);
    // Specific stats code
    glEnd_STAT();
    _COUNT(APICall_glEnd);
    CHECKCALL(glEnd);
    DO_REAL_CALL(glEnd());
    _W.writeAPICall(APICall_glEnd);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEnd);
}

void GLAPIENTRY glEndConditionalRender()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndConditionalRender);
    _COUNT(APICall_glEndConditionalRender);
    CHECKCALL(glEndConditionalRender);
    DO_REAL_CALL(glEndConditionalRender());
    _W.writeAPICall(APICall_glEndConditionalRender);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndConditionalRender);
}

void GLAPIENTRY glEndConditionalRenderNV()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndConditionalRenderNV);
    _COUNT(APICall_glEndConditionalRenderNV);
    CHECKCALL(glEndConditionalRenderNV);
    DO_REAL_CALL(glEndConditionalRenderNV());
    _W.writeAPICall(APICall_glEndConditionalRenderNV);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndConditionalRenderNV);
}

void GLAPIENTRY glEndFragmentShaderATI()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndFragmentShaderATI);
    _COUNT(APICall_glEndFragmentShaderATI);
    CHECKCALL(glEndFragmentShaderATI);
    DO_REAL_CALL(glEndFragmentShaderATI());
    _W.writeAPICall(APICall_glEndFragmentShaderATI);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndFragmentShaderATI);
}

void GLAPIENTRY glEndList()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndList);
    _COUNT(APICall_glEndList);
    CHECKCALL(glEndList);
    DO_REAL_CALL(glEndList());
    _W.writeAPICall(APICall_glEndList);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndList);
}

void GLAPIENTRY glEndOcclusionQueryNV()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndOcclusionQueryNV);
    _COUNT(APICall_glEndOcclusionQueryNV);
    CHECKCALL(glEndOcclusionQueryNV);
    DO_REAL_CALL(glEndOcclusionQueryNV());
    _W.writeAPICall(APICall_glEndOcclusionQueryNV);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndOcclusionQueryNV);
}

void GLAPIENTRY glEndPerfMonitorAMD(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndPerfMonitorAMD);
    _COUNT(APICall_glEndPerfMonitorAMD);
    CHECKCALL(glEndPerfMonitorAMD);
    DO_REAL_CALL(glEndPerfMonitorAMD(_p0));
    _W.writeAPICall(APICall_glEndPerfMonitorAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndPerfMonitorAMD);
}

void GLAPIENTRY glEndQuery(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndQuery);
    _COUNT(APICall_glEndQuery);
    CHECKCALL(glEndQuery);
    DO_REAL_CALL(glEndQuery(_p0));
    _W.writeAPICall(APICall_glEndQuery);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndQuery);
}

void GLAPIENTRY glEndQueryARB(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndQueryARB);
    _COUNT(APICall_glEndQueryARB);
    CHECKCALL(glEndQueryARB);
    DO_REAL_CALL(glEndQueryARB(_p0));
    _W.writeAPICall(APICall_glEndQueryARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndQueryARB);
}

void GLAPIENTRY glEndTransformFeedback()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndTransformFeedback);
    _COUNT(APICall_glEndTransformFeedback);
    CHECKCALL(glEndTransformFeedback);
    DO_REAL_CALL(glEndTransformFeedback());
    _W.writeAPICall(APICall_glEndTransformFeedback);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndTransformFeedback);
}

void GLAPIENTRY glEndTransformFeedbackEXT()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndTransformFeedbackEXT);
    _COUNT(APICall_glEndTransformFeedbackEXT);
    CHECKCALL(glEndTransformFeedbackEXT);
    DO_REAL_CALL(glEndTransformFeedbackEXT());
    _W.writeAPICall(APICall_glEndTransformFeedbackEXT);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndTransformFeedbackEXT);
}

void GLAPIENTRY glEndTransformFeedbackNV()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndTransformFeedbackNV);
    _COUNT(APICall_glEndTransformFeedbackNV);
    CHECKCALL(glEndTransformFeedbackNV);
    DO_REAL_CALL(glEndTransformFeedbackNV());
    _W.writeAPICall(APICall_glEndTransformFeedbackNV);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndTransformFeedbackNV);
}

void GLAPIENTRY glEndVertexShaderEXT()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEndVertexShaderEXT);
    _COUNT(APICall_glEndVertexShaderEXT);
    CHECKCALL(glEndVertexShaderEXT);
    DO_REAL_CALL(glEndVertexShaderEXT());
    _W.writeAPICall(APICall_glEndVertexShaderEXT);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEndVertexShaderEXT);
}

void GLAPIENTRY glEvalCoord1d(GLdouble u)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalCoord1d);
    _COUNT(APICall_glEvalCoord1d);
    CHECKCALL(glEvalCoord1d);
    DO_REAL_CALL(glEvalCoord1d(u));
    _W.writeAPICall(APICall_glEvalCoord1d);
    _W.writeMark("(");
    _W.write(u);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalCoord1d);
}

void GLAPIENTRY glEvalCoord1dv(const GLdouble *u)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalCoord1dv);
    _COUNT(APICall_glEvalCoord1dv);
    CHECKCALL(glEvalCoord1dv);
    DO_REAL_CALL(glEvalCoord1dv(u));
    _W.writeAPICall(APICall_glEvalCoord1dv);
    _W.writeMark("(");
    _W.write(u, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalCoord1dv);
}

void GLAPIENTRY glEvalCoord1f(GLfloat u)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalCoord1f);
    _COUNT(APICall_glEvalCoord1f);
    CHECKCALL(glEvalCoord1f);
    DO_REAL_CALL(glEvalCoord1f(u));
    _W.writeAPICall(APICall_glEvalCoord1f);
    _W.writeMark("(");
    _W.write(u);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalCoord1f);
}

void GLAPIENTRY glEvalCoord1fv(const GLfloat *u)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalCoord1fv);
    _COUNT(APICall_glEvalCoord1fv);
    CHECKCALL(glEvalCoord1fv);
    DO_REAL_CALL(glEvalCoord1fv(u));
    _W.writeAPICall(APICall_glEvalCoord1fv);
    _W.writeMark("(");
    _W.write(u, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalCoord1fv);
}

void GLAPIENTRY glEvalCoord2d(GLdouble u, GLdouble v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalCoord2d);
    _COUNT(APICall_glEvalCoord2d);
    CHECKCALL(glEvalCoord2d);
    DO_REAL_CALL(glEvalCoord2d(u,v));
    _W.writeAPICall(APICall_glEvalCoord2d);
    _W.writeMark("(");
    _W.write(u);
    _W.writeMark(",");
    _W.write(v);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalCoord2d);
}

void GLAPIENTRY glEvalCoord2dv(const GLdouble *u)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalCoord2dv);
    _COUNT(APICall_glEvalCoord2dv);
    CHECKCALL(glEvalCoord2dv);
    DO_REAL_CALL(glEvalCoord2dv(u));
    _W.writeAPICall(APICall_glEvalCoord2dv);
    _W.writeMark("(");
    _W.write(u, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalCoord2dv);
}

void GLAPIENTRY glEvalCoord2f(GLfloat u, GLfloat v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalCoord2f);
    _COUNT(APICall_glEvalCoord2f);
    CHECKCALL(glEvalCoord2f);
    DO_REAL_CALL(glEvalCoord2f(u,v));
    _W.writeAPICall(APICall_glEvalCoord2f);
    _W.writeMark("(");
    _W.write(u);
    _W.writeMark(",");
    _W.write(v);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalCoord2f);
}

void GLAPIENTRY glEvalCoord2fv(const GLfloat *u)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalCoord2fv);
    _COUNT(APICall_glEvalCoord2fv);
    CHECKCALL(glEvalCoord2fv);
    DO_REAL_CALL(glEvalCoord2fv(u));
    _W.writeAPICall(APICall_glEvalCoord2fv);
    _W.writeMark("(");
    _W.write(u, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalCoord2fv);
}

void GLAPIENTRY glEvalMapsNV(GLenum _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalMapsNV);
    _COUNT(APICall_glEvalMapsNV);
    CHECKCALL(glEvalMapsNV);
    DO_REAL_CALL(glEvalMapsNV(_p0,_p1));
    _W.writeAPICall(APICall_glEvalMapsNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalMapsNV);
}

void GLAPIENTRY glEvalMesh1(GLenum mode, GLint i1, GLint i2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalMesh1);
    _COUNT(APICall_glEvalMesh1);
    CHECKCALL(glEvalMesh1);
    DO_REAL_CALL(glEvalMesh1(mode,i1,i2));
    _W.writeAPICall(APICall_glEvalMesh1);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(",");
    _W.write(i1);
    _W.writeMark(",");
    _W.write(i2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalMesh1);
}

void GLAPIENTRY glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalMesh2);
    _COUNT(APICall_glEvalMesh2);
    CHECKCALL(glEvalMesh2);
    DO_REAL_CALL(glEvalMesh2(mode,i1,i2,j1,j2));
    _W.writeAPICall(APICall_glEvalMesh2);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(",");
    _W.write(i1);
    _W.writeMark(",");
    _W.write(i2);
    _W.writeMark(",");
    _W.write(j1);
    _W.writeMark(",");
    _W.write(j2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalMesh2);
}

void GLAPIENTRY glEvalPoint1(GLint i)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalPoint1);
    _COUNT(APICall_glEvalPoint1);
    CHECKCALL(glEvalPoint1);
    DO_REAL_CALL(glEvalPoint1(i));
    _W.writeAPICall(APICall_glEvalPoint1);
    _W.writeMark("(");
    _W.write(i);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalPoint1);
}

void GLAPIENTRY glEvalPoint2(GLint i, GLint j)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glEvalPoint2);
    _COUNT(APICall_glEvalPoint2);
    CHECKCALL(glEvalPoint2);
    DO_REAL_CALL(glEvalPoint2(i,j));
    _W.writeAPICall(APICall_glEvalPoint2);
    _W.writeMark("(");
    _W.write(i);
    _W.writeMark(",");
    _W.write(j);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glEvalPoint2);
}

void GLAPIENTRY glExecuteProgramNV(GLenum _p0, GLuint _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glExecuteProgramNV);
    _COUNT(APICall_glExecuteProgramNV);
    CHECKCALL(glExecuteProgramNV);
    DO_REAL_CALL(glExecuteProgramNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glExecuteProgramNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glExecuteProgramNV);
}

void GLAPIENTRY glExtractComponentEXT(GLuint _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glExtractComponentEXT);
    _COUNT(APICall_glExtractComponentEXT);
    CHECKCALL(glExtractComponentEXT);
    DO_REAL_CALL(glExtractComponentEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glExtractComponentEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glExtractComponentEXT);
}

void GLAPIENTRY glFeedbackBuffer(GLsizei size, GLenum type, GLfloat *buffer)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFeedbackBuffer);
    _COUNT(APICall_glFeedbackBuffer);
    CHECKCALL(glFeedbackBuffer);
    DO_REAL_CALL(glFeedbackBuffer(size,type,buffer));
    _W.writeAPICall(APICall_glFeedbackBuffer);
    _W.writeMark("(");
    _W.write(size);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&buffer);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFeedbackBuffer);
}

void GLAPIENTRY glFinalCombinerInputNV(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFinalCombinerInputNV);
    _COUNT(APICall_glFinalCombinerInputNV);
    CHECKCALL(glFinalCombinerInputNV);
    DO_REAL_CALL(glFinalCombinerInputNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glFinalCombinerInputNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFinalCombinerInputNV);
}

void GLAPIENTRY glFinish()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFinish);
    _COUNT(APICall_glFinish);
    CHECKCALL(glFinish);
    DO_REAL_CALL(glFinish());
    _W.writeAPICall(APICall_glFinish);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFinish);
}

GLint GLAPIENTRY glFinishAsyncSGIX(GLuint *_p0)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFinishAsyncSGIX);
    _COUNT(APICall_glFinishAsyncSGIX);
    CHECKCALL(glFinishAsyncSGIX);
    _result = DO_REAL_CALL(glFinishAsyncSGIX(_p0));
    _W.writeAPICall(APICall_glFinishAsyncSGIX);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFinishAsyncSGIX);
    return _result;
}

void GLAPIENTRY glFinishFenceAPPLE(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFinishFenceAPPLE);
    _COUNT(APICall_glFinishFenceAPPLE);
    CHECKCALL(glFinishFenceAPPLE);
    DO_REAL_CALL(glFinishFenceAPPLE(_p0));
    _W.writeAPICall(APICall_glFinishFenceAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFinishFenceAPPLE);
}

void GLAPIENTRY glFinishFenceNV(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFinishFenceNV);
    _COUNT(APICall_glFinishFenceNV);
    CHECKCALL(glFinishFenceNV);
    DO_REAL_CALL(glFinishFenceNV(_p0));
    _W.writeAPICall(APICall_glFinishFenceNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFinishFenceNV);
}

void GLAPIENTRY glFinishObjectAPPLE(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFinishObjectAPPLE);
    _COUNT(APICall_glFinishObjectAPPLE);
    CHECKCALL(glFinishObjectAPPLE);
    DO_REAL_CALL(glFinishObjectAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glFinishObjectAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFinishObjectAPPLE);
}

void GLAPIENTRY glFlush()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFlush);
    _COUNT(APICall_glFlush);
    CHECKCALL(glFlush);
    DO_REAL_CALL(glFlush());
    _W.writeAPICall(APICall_glFlush);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFlush);
}

void GLAPIENTRY glFlushMappedBufferRange(GLenum _p0, GLintptr _p1, GLsizeiptr _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFlushMappedBufferRange);
    _COUNT(APICall_glFlushMappedBufferRange);
    CHECKCALL(glFlushMappedBufferRange);
    DO_REAL_CALL(glFlushMappedBufferRange(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFlushMappedBufferRange);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFlushMappedBufferRange);
}

void GLAPIENTRY glFlushMappedBufferRangeAPPLE(GLenum _p0, GLintptr _p1, GLsizeiptr _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFlushMappedBufferRangeAPPLE);
    _COUNT(APICall_glFlushMappedBufferRangeAPPLE);
    CHECKCALL(glFlushMappedBufferRangeAPPLE);
    DO_REAL_CALL(glFlushMappedBufferRangeAPPLE(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFlushMappedBufferRangeAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFlushMappedBufferRangeAPPLE);
}

void GLAPIENTRY glFlushPixelDataRangeNV(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFlushPixelDataRangeNV);
    _COUNT(APICall_glFlushPixelDataRangeNV);
    CHECKCALL(glFlushPixelDataRangeNV);
    DO_REAL_CALL(glFlushPixelDataRangeNV(_p0));
    _W.writeAPICall(APICall_glFlushPixelDataRangeNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFlushPixelDataRangeNV);
}

void GLAPIENTRY glFlushRasterSGIX()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFlushRasterSGIX);
    _COUNT(APICall_glFlushRasterSGIX);
    CHECKCALL(glFlushRasterSGIX);
    DO_REAL_CALL(glFlushRasterSGIX());
    _W.writeAPICall(APICall_glFlushRasterSGIX);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFlushRasterSGIX);
}

void GLAPIENTRY glFlushVertexArrayRangeAPPLE(GLsizei _p0, GLvoid *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFlushVertexArrayRangeAPPLE);
    _COUNT(APICall_glFlushVertexArrayRangeAPPLE);
    CHECKCALL(glFlushVertexArrayRangeAPPLE);
    DO_REAL_CALL(glFlushVertexArrayRangeAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glFlushVertexArrayRangeAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFlushVertexArrayRangeAPPLE);
}

void GLAPIENTRY glFlushVertexArrayRangeNV()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFlushVertexArrayRangeNV);
    _COUNT(APICall_glFlushVertexArrayRangeNV);
    CHECKCALL(glFlushVertexArrayRangeNV);
    DO_REAL_CALL(glFlushVertexArrayRangeNV());
    _W.writeAPICall(APICall_glFlushVertexArrayRangeNV);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFlushVertexArrayRangeNV);
}

void GLAPIENTRY glFogCoordPointer(GLenum _p0, GLsizei _p1, const GLvoid *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoordPointer);
    _COUNT(APICall_glFogCoordPointer);
    CHECKCALL(glFogCoordPointer);
    DO_REAL_CALL(glFogCoordPointer(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFogCoordPointer);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoordPointer);
}

void GLAPIENTRY glFogCoordPointerEXT(GLenum _p0, GLsizei _p1, const GLvoid *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoordPointerEXT);
    _COUNT(APICall_glFogCoordPointerEXT);
    CHECKCALL(glFogCoordPointerEXT);
    DO_REAL_CALL(glFogCoordPointerEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFogCoordPointerEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoordPointerEXT);
}

void GLAPIENTRY glFogCoordd(GLdouble _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoordd);
    _COUNT(APICall_glFogCoordd);
    CHECKCALL(glFogCoordd);
    DO_REAL_CALL(glFogCoordd(_p0));
    _W.writeAPICall(APICall_glFogCoordd);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoordd);
}

void GLAPIENTRY glFogCoorddEXT(GLdouble _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoorddEXT);
    _COUNT(APICall_glFogCoorddEXT);
    CHECKCALL(glFogCoorddEXT);
    DO_REAL_CALL(glFogCoorddEXT(_p0));
    _W.writeAPICall(APICall_glFogCoorddEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoorddEXT);
}

void GLAPIENTRY glFogCoorddv(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoorddv);
    _COUNT(APICall_glFogCoorddv);
    CHECKCALL(glFogCoorddv);
    DO_REAL_CALL(glFogCoorddv(_p0));
    _W.writeAPICall(APICall_glFogCoorddv);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoorddv);
}

void GLAPIENTRY glFogCoorddvEXT(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoorddvEXT);
    _COUNT(APICall_glFogCoorddvEXT);
    CHECKCALL(glFogCoorddvEXT);
    DO_REAL_CALL(glFogCoorddvEXT(_p0));
    _W.writeAPICall(APICall_glFogCoorddvEXT);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoorddvEXT);
}

void GLAPIENTRY glFogCoordf(GLfloat _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoordf);
    _COUNT(APICall_glFogCoordf);
    CHECKCALL(glFogCoordf);
    DO_REAL_CALL(glFogCoordf(_p0));
    _W.writeAPICall(APICall_glFogCoordf);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoordf);
}

void GLAPIENTRY glFogCoordfEXT(GLfloat _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoordfEXT);
    _COUNT(APICall_glFogCoordfEXT);
    CHECKCALL(glFogCoordfEXT);
    DO_REAL_CALL(glFogCoordfEXT(_p0));
    _W.writeAPICall(APICall_glFogCoordfEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoordfEXT);
}

void GLAPIENTRY glFogCoordfv(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoordfv);
    _COUNT(APICall_glFogCoordfv);
    CHECKCALL(glFogCoordfv);
    DO_REAL_CALL(glFogCoordfv(_p0));
    _W.writeAPICall(APICall_glFogCoordfv);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoordfv);
}

void GLAPIENTRY glFogCoordfvEXT(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoordfvEXT);
    _COUNT(APICall_glFogCoordfvEXT);
    CHECKCALL(glFogCoordfvEXT);
    DO_REAL_CALL(glFogCoordfvEXT(_p0));
    _W.writeAPICall(APICall_glFogCoordfvEXT);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoordfvEXT);
}

void GLAPIENTRY glFogCoordhNV(GLhalfNV _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoordhNV);
    _COUNT(APICall_glFogCoordhNV);
    CHECKCALL(glFogCoordhNV);
    DO_REAL_CALL(glFogCoordhNV(_p0));
    _W.writeAPICall(APICall_glFogCoordhNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoordhNV);
}

void GLAPIENTRY glFogCoordhvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogCoordhvNV);
    _COUNT(APICall_glFogCoordhvNV);
    CHECKCALL(glFogCoordhvNV);
    DO_REAL_CALL(glFogCoordhvNV(_p0));
    _W.writeAPICall(APICall_glFogCoordhvNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogCoordhvNV);
}

void GLAPIENTRY glFogFuncSGIS(GLsizei _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogFuncSGIS);
    _COUNT(APICall_glFogFuncSGIS);
    CHECKCALL(glFogFuncSGIS);
    DO_REAL_CALL(glFogFuncSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glFogFuncSGIS);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogFuncSGIS);
}

void GLAPIENTRY glFogf(GLenum pname, GLfloat param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogf);
    _COUNT(APICall_glFogf);
    CHECKCALL(glFogf);
    DO_REAL_CALL(glFogf(pname,param));
    _W.writeAPICall(APICall_glFogf);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogf);
}

void GLAPIENTRY glFogfv(GLenum pname, const GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogfv);
    _COUNT(APICall_glFogfv);
    CHECKCALL(glFogfv);
    DO_REAL_CALL(glFogfv(pname,params));
    _W.writeAPICall(APICall_glFogfv);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glFogfv_SPECIFIC(pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogfv);
}

void GLAPIENTRY glFogi(GLenum pname, GLint param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogi);
    _COUNT(APICall_glFogi);
    CHECKCALL(glFogi);
    DO_REAL_CALL(glFogi(pname,param));
    _W.writeAPICall(APICall_glFogi);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogi);
}

void GLAPIENTRY glFogiv(GLenum pname, const GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFogiv);
    _COUNT(APICall_glFogiv);
    CHECKCALL(glFogiv);
    DO_REAL_CALL(glFogiv(pname,params));
    _W.writeAPICall(APICall_glFogiv);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glFogiv_SPECIFIC(pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFogiv);
}

void GLAPIENTRY glFragmentColorMaterialSGIX(GLenum _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentColorMaterialSGIX);
    _COUNT(APICall_glFragmentColorMaterialSGIX);
    CHECKCALL(glFragmentColorMaterialSGIX);
    DO_REAL_CALL(glFragmentColorMaterialSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glFragmentColorMaterialSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentColorMaterialSGIX);
}

void GLAPIENTRY glFragmentLightModelfSGIX(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentLightModelfSGIX);
    _COUNT(APICall_glFragmentLightModelfSGIX);
    CHECKCALL(glFragmentLightModelfSGIX);
    DO_REAL_CALL(glFragmentLightModelfSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glFragmentLightModelfSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentLightModelfSGIX);
}

void GLAPIENTRY glFragmentLightModelfvSGIX(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentLightModelfvSGIX);
    _COUNT(APICall_glFragmentLightModelfvSGIX);
    CHECKCALL(glFragmentLightModelfvSGIX);
    DO_REAL_CALL(glFragmentLightModelfvSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glFragmentLightModelfvSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentLightModelfvSGIX);
}

void GLAPIENTRY glFragmentLightModeliSGIX(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentLightModeliSGIX);
    _COUNT(APICall_glFragmentLightModeliSGIX);
    CHECKCALL(glFragmentLightModeliSGIX);
    DO_REAL_CALL(glFragmentLightModeliSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glFragmentLightModeliSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentLightModeliSGIX);
}

void GLAPIENTRY glFragmentLightModelivSGIX(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentLightModelivSGIX);
    _COUNT(APICall_glFragmentLightModelivSGIX);
    CHECKCALL(glFragmentLightModelivSGIX);
    DO_REAL_CALL(glFragmentLightModelivSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glFragmentLightModelivSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentLightModelivSGIX);
}

void GLAPIENTRY glFragmentLightfSGIX(GLenum _p0, GLenum _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentLightfSGIX);
    _COUNT(APICall_glFragmentLightfSGIX);
    CHECKCALL(glFragmentLightfSGIX);
    DO_REAL_CALL(glFragmentLightfSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFragmentLightfSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentLightfSGIX);
}

void GLAPIENTRY glFragmentLightfvSGIX(GLenum _p0, GLenum _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentLightfvSGIX);
    _COUNT(APICall_glFragmentLightfvSGIX);
    CHECKCALL(glFragmentLightfvSGIX);
    DO_REAL_CALL(glFragmentLightfvSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFragmentLightfvSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentLightfvSGIX);
}

void GLAPIENTRY glFragmentLightiSGIX(GLenum _p0, GLenum _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentLightiSGIX);
    _COUNT(APICall_glFragmentLightiSGIX);
    CHECKCALL(glFragmentLightiSGIX);
    DO_REAL_CALL(glFragmentLightiSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFragmentLightiSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentLightiSGIX);
}

void GLAPIENTRY glFragmentLightivSGIX(GLenum _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentLightivSGIX);
    _COUNT(APICall_glFragmentLightivSGIX);
    CHECKCALL(glFragmentLightivSGIX);
    DO_REAL_CALL(glFragmentLightivSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFragmentLightivSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentLightivSGIX);
}

void GLAPIENTRY glFragmentMaterialfSGIX(GLenum _p0, GLenum _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentMaterialfSGIX);
    _COUNT(APICall_glFragmentMaterialfSGIX);
    CHECKCALL(glFragmentMaterialfSGIX);
    DO_REAL_CALL(glFragmentMaterialfSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFragmentMaterialfSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentMaterialfSGIX);
}

void GLAPIENTRY glFragmentMaterialfvSGIX(GLenum _p0, GLenum _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentMaterialfvSGIX);
    _COUNT(APICall_glFragmentMaterialfvSGIX);
    CHECKCALL(glFragmentMaterialfvSGIX);
    DO_REAL_CALL(glFragmentMaterialfvSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFragmentMaterialfvSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentMaterialfvSGIX);
}

void GLAPIENTRY glFragmentMaterialiSGIX(GLenum _p0, GLenum _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentMaterialiSGIX);
    _COUNT(APICall_glFragmentMaterialiSGIX);
    CHECKCALL(glFragmentMaterialiSGIX);
    DO_REAL_CALL(glFragmentMaterialiSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFragmentMaterialiSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentMaterialiSGIX);
}

void GLAPIENTRY glFragmentMaterialivSGIX(GLenum _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFragmentMaterialivSGIX);
    _COUNT(APICall_glFragmentMaterialivSGIX);
    CHECKCALL(glFragmentMaterialivSGIX);
    DO_REAL_CALL(glFragmentMaterialivSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFragmentMaterialivSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFragmentMaterialivSGIX);
}

void GLAPIENTRY glFrameTerminatorGREMEDY()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFrameTerminatorGREMEDY);
    _COUNT(APICall_glFrameTerminatorGREMEDY);
    CHECKCALL(glFrameTerminatorGREMEDY);
    DO_REAL_CALL(glFrameTerminatorGREMEDY());
    _W.writeAPICall(APICall_glFrameTerminatorGREMEDY);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFrameTerminatorGREMEDY);
}

void GLAPIENTRY glFrameZoomSGIX(GLint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFrameZoomSGIX);
    _COUNT(APICall_glFrameZoomSGIX);
    CHECKCALL(glFrameZoomSGIX);
    DO_REAL_CALL(glFrameZoomSGIX(_p0));
    _W.writeAPICall(APICall_glFrameZoomSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFrameZoomSGIX);
}

void GLAPIENTRY glFramebufferDrawBufferEXT(GLuint _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferDrawBufferEXT);
    _COUNT(APICall_glFramebufferDrawBufferEXT);
    CHECKCALL(glFramebufferDrawBufferEXT);
    DO_REAL_CALL(glFramebufferDrawBufferEXT(_p0,_p1));
    _W.writeAPICall(APICall_glFramebufferDrawBufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferDrawBufferEXT);
}

void GLAPIENTRY glFramebufferDrawBuffersEXT(GLuint _p0, GLsizei _p1, const GLenum *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferDrawBuffersEXT);
    _COUNT(APICall_glFramebufferDrawBuffersEXT);
    CHECKCALL(glFramebufferDrawBuffersEXT);
    DO_REAL_CALL(glFramebufferDrawBuffersEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glFramebufferDrawBuffersEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferDrawBuffersEXT);
}

void GLAPIENTRY glFramebufferReadBufferEXT(GLuint _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferReadBufferEXT);
    _COUNT(APICall_glFramebufferReadBufferEXT);
    CHECKCALL(glFramebufferReadBufferEXT);
    DO_REAL_CALL(glFramebufferReadBufferEXT(_p0,_p1));
    _W.writeAPICall(APICall_glFramebufferReadBufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferReadBufferEXT);
}

void GLAPIENTRY glFramebufferRenderbuffer(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferRenderbuffer);
    _COUNT(APICall_glFramebufferRenderbuffer);
    CHECKCALL(glFramebufferRenderbuffer);
    DO_REAL_CALL(glFramebufferRenderbuffer(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glFramebufferRenderbuffer);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferRenderbuffer);
}

void GLAPIENTRY glFramebufferRenderbufferEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferRenderbufferEXT);
    _COUNT(APICall_glFramebufferRenderbufferEXT);
    CHECKCALL(glFramebufferRenderbufferEXT);
    DO_REAL_CALL(glFramebufferRenderbufferEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glFramebufferRenderbufferEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferRenderbufferEXT);
}

void GLAPIENTRY glFramebufferTexture1D(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTexture1D);
    _COUNT(APICall_glFramebufferTexture1D);
    CHECKCALL(glFramebufferTexture1D);
    DO_REAL_CALL(glFramebufferTexture1D(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glFramebufferTexture1D);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTexture1D);
}

void GLAPIENTRY glFramebufferTexture1DEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTexture1DEXT);
    _COUNT(APICall_glFramebufferTexture1DEXT);
    CHECKCALL(glFramebufferTexture1DEXT);
    DO_REAL_CALL(glFramebufferTexture1DEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glFramebufferTexture1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTexture1DEXT);
}

void GLAPIENTRY glFramebufferTexture2D(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTexture2D);
    _COUNT(APICall_glFramebufferTexture2D);
    CHECKCALL(glFramebufferTexture2D);
    DO_REAL_CALL(glFramebufferTexture2D(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glFramebufferTexture2D);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTexture2D);
}

void GLAPIENTRY glFramebufferTexture2DEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTexture2DEXT);
    _COUNT(APICall_glFramebufferTexture2DEXT);
    CHECKCALL(glFramebufferTexture2DEXT);
    DO_REAL_CALL(glFramebufferTexture2DEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glFramebufferTexture2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTexture2DEXT);
}

void GLAPIENTRY glFramebufferTexture3D(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3, GLint _p4, GLint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTexture3D);
    _COUNT(APICall_glFramebufferTexture3D);
    CHECKCALL(glFramebufferTexture3D);
    DO_REAL_CALL(glFramebufferTexture3D(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glFramebufferTexture3D);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTexture3D);
}

void GLAPIENTRY glFramebufferTexture3DEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3, GLint _p4, GLint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTexture3DEXT);
    _COUNT(APICall_glFramebufferTexture3DEXT);
    CHECKCALL(glFramebufferTexture3DEXT);
    DO_REAL_CALL(glFramebufferTexture3DEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glFramebufferTexture3DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTexture3DEXT);
}

void GLAPIENTRY glFramebufferTextureARB(GLenum _p0, GLenum _p1, GLuint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTextureARB);
    _COUNT(APICall_glFramebufferTextureARB);
    CHECKCALL(glFramebufferTextureARB);
    DO_REAL_CALL(glFramebufferTextureARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glFramebufferTextureARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTextureARB);
}

void GLAPIENTRY glFramebufferTextureEXT(GLenum _p0, GLenum _p1, GLuint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTextureEXT);
    _COUNT(APICall_glFramebufferTextureEXT);
    CHECKCALL(glFramebufferTextureEXT);
    DO_REAL_CALL(glFramebufferTextureEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glFramebufferTextureEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTextureEXT);
}

void GLAPIENTRY glFramebufferTextureFaceARB(GLenum _p0, GLenum _p1, GLuint _p2, GLint _p3, GLenum _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTextureFaceARB);
    _COUNT(APICall_glFramebufferTextureFaceARB);
    CHECKCALL(glFramebufferTextureFaceARB);
    DO_REAL_CALL(glFramebufferTextureFaceARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glFramebufferTextureFaceARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTextureFaceARB);
}

void GLAPIENTRY glFramebufferTextureFaceEXT(GLenum _p0, GLenum _p1, GLuint _p2, GLint _p3, GLenum _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTextureFaceEXT);
    _COUNT(APICall_glFramebufferTextureFaceEXT);
    CHECKCALL(glFramebufferTextureFaceEXT);
    DO_REAL_CALL(glFramebufferTextureFaceEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glFramebufferTextureFaceEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTextureFaceEXT);
}

void GLAPIENTRY glFramebufferTextureLayer(GLenum _p0, GLenum _p1, GLuint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTextureLayer);
    _COUNT(APICall_glFramebufferTextureLayer);
    CHECKCALL(glFramebufferTextureLayer);
    DO_REAL_CALL(glFramebufferTextureLayer(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glFramebufferTextureLayer);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTextureLayer);
}

void GLAPIENTRY glFramebufferTextureLayerARB(GLenum _p0, GLenum _p1, GLuint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTextureLayerARB);
    _COUNT(APICall_glFramebufferTextureLayerARB);
    CHECKCALL(glFramebufferTextureLayerARB);
    DO_REAL_CALL(glFramebufferTextureLayerARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glFramebufferTextureLayerARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTextureLayerARB);
}

void GLAPIENTRY glFramebufferTextureLayerEXT(GLenum _p0, GLenum _p1, GLuint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFramebufferTextureLayerEXT);
    _COUNT(APICall_glFramebufferTextureLayerEXT);
    CHECKCALL(glFramebufferTextureLayerEXT);
    DO_REAL_CALL(glFramebufferTextureLayerEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glFramebufferTextureLayerEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFramebufferTextureLayerEXT);
}

void GLAPIENTRY glFreeObjectBufferATI(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFreeObjectBufferATI);
    _COUNT(APICall_glFreeObjectBufferATI);
    CHECKCALL(glFreeObjectBufferATI);
    DO_REAL_CALL(glFreeObjectBufferATI(_p0));
    _W.writeAPICall(APICall_glFreeObjectBufferATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFreeObjectBufferATI);
}

void GLAPIENTRY glFrontFace(GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFrontFace);
    _COUNT(APICall_glFrontFace);
    CHECKCALL(glFrontFace);
    DO_REAL_CALL(glFrontFace(mode));
    _W.writeAPICall(APICall_glFrontFace);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFrontFace);
}

void GLAPIENTRY glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glFrustum);
    _COUNT(APICall_glFrustum);
    CHECKCALL(glFrustum);
    DO_REAL_CALL(glFrustum(left,right,bottom,top,near_val,far_val));
    _W.writeAPICall(APICall_glFrustum);
    _W.writeMark("(");
    _W.write(left);
    _W.writeMark(",");
    _W.write(right);
    _W.writeMark(",");
    _W.write(bottom);
    _W.writeMark(",");
    _W.write(top);
    _W.writeMark(",");
    _W.write(near_val);
    _W.writeMark(",");
    _W.write(far_val);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glFrustum);
}

GLuint GLAPIENTRY glGenAsyncMarkersSGIX(GLsizei _p0)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenAsyncMarkersSGIX);
    _COUNT(APICall_glGenAsyncMarkersSGIX);
    CHECKCALL(glGenAsyncMarkersSGIX);
    _result = DO_REAL_CALL(glGenAsyncMarkersSGIX(_p0));
    _W.writeAPICall(APICall_glGenAsyncMarkersSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenAsyncMarkersSGIX);
    return _result;
}

void GLAPIENTRY glGenBuffers(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenBuffers);
    _COUNT(APICall_glGenBuffers);
    CHECKCALL(glGenBuffers);
    DO_REAL_CALL(glGenBuffers(_p0,_p1));
    _W.writeAPICall(APICall_glGenBuffers);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenBuffers);
}

void GLAPIENTRY glGenBuffersARB(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenBuffersARB);
    _COUNT(APICall_glGenBuffersARB);
    CHECKCALL(glGenBuffersARB);
    DO_REAL_CALL(glGenBuffersARB(_p0,_p1));
    _W.writeAPICall(APICall_glGenBuffersARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGenBuffersARB_SPECIFIC(_p0,_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenBuffersARB);
}

void GLAPIENTRY glGenFencesAPPLE(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenFencesAPPLE);
    _COUNT(APICall_glGenFencesAPPLE);
    CHECKCALL(glGenFencesAPPLE);
    DO_REAL_CALL(glGenFencesAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glGenFencesAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenFencesAPPLE);
}

void GLAPIENTRY glGenFencesNV(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenFencesNV);
    _COUNT(APICall_glGenFencesNV);
    CHECKCALL(glGenFencesNV);
    DO_REAL_CALL(glGenFencesNV(_p0,_p1));
    _W.writeAPICall(APICall_glGenFencesNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenFencesNV);
}

GLuint GLAPIENTRY glGenFragmentShadersATI(GLuint _p0)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenFragmentShadersATI);
    _COUNT(APICall_glGenFragmentShadersATI);
    CHECKCALL(glGenFragmentShadersATI);
    _result = DO_REAL_CALL(glGenFragmentShadersATI(_p0));
    _W.writeAPICall(APICall_glGenFragmentShadersATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenFragmentShadersATI);
    return _result;
}

void GLAPIENTRY glGenFramebuffers(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenFramebuffers);
    _COUNT(APICall_glGenFramebuffers);
    CHECKCALL(glGenFramebuffers);
    DO_REAL_CALL(glGenFramebuffers(_p0,_p1));
    _W.writeAPICall(APICall_glGenFramebuffers);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenFramebuffers);
}

void GLAPIENTRY glGenFramebuffersEXT(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenFramebuffersEXT);
    _COUNT(APICall_glGenFramebuffersEXT);
    CHECKCALL(glGenFramebuffersEXT);
    DO_REAL_CALL(glGenFramebuffersEXT(_p0,_p1));
    _W.writeAPICall(APICall_glGenFramebuffersEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenFramebuffersEXT);
}

GLuint GLAPIENTRY glGenLists(GLsizei range)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenLists);
    _COUNT(APICall_glGenLists);
    CHECKCALL(glGenLists);
    _result = DO_REAL_CALL(glGenLists(range));
    _W.writeAPICall(APICall_glGenLists);
    _W.writeMark("(");
    _W.write(range);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenLists);
    return _result;
}

void GLAPIENTRY glGenOcclusionQueriesNV(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenOcclusionQueriesNV);
    _COUNT(APICall_glGenOcclusionQueriesNV);
    CHECKCALL(glGenOcclusionQueriesNV);
    DO_REAL_CALL(glGenOcclusionQueriesNV(_p0,_p1));
    _W.writeAPICall(APICall_glGenOcclusionQueriesNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenOcclusionQueriesNV);
}

void GLAPIENTRY glGenPerfMonitorsAMD(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenPerfMonitorsAMD);
    _COUNT(APICall_glGenPerfMonitorsAMD);
    CHECKCALL(glGenPerfMonitorsAMD);
    DO_REAL_CALL(glGenPerfMonitorsAMD(_p0,_p1));
    _W.writeAPICall(APICall_glGenPerfMonitorsAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenPerfMonitorsAMD);
}

void GLAPIENTRY glGenProgramsARB(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenProgramsARB);
    _COUNT(APICall_glGenProgramsARB);
    CHECKCALL(glGenProgramsARB);
    DO_REAL_CALL(glGenProgramsARB(_p0,_p1));
    _W.writeAPICall(APICall_glGenProgramsARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGenProgramsARB_SPECIFIC(_p0,_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenProgramsARB);
}

void GLAPIENTRY glGenProgramsNV(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenProgramsNV);
    _COUNT(APICall_glGenProgramsNV);
    CHECKCALL(glGenProgramsNV);
    DO_REAL_CALL(glGenProgramsNV(_p0,_p1));
    _W.writeAPICall(APICall_glGenProgramsNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenProgramsNV);
}

void GLAPIENTRY glGenQueries(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenQueries);
    _COUNT(APICall_glGenQueries);
    CHECKCALL(glGenQueries);
    DO_REAL_CALL(glGenQueries(_p0,_p1));
    _W.writeAPICall(APICall_glGenQueries);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenQueries);
}

void GLAPIENTRY glGenQueriesARB(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenQueriesARB);
    _COUNT(APICall_glGenQueriesARB);
    CHECKCALL(glGenQueriesARB);
    DO_REAL_CALL(glGenQueriesARB(_p0,_p1));
    _W.writeAPICall(APICall_glGenQueriesARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGenQueriesARB_SPECIFIC(_p0,_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenQueriesARB);
}

void GLAPIENTRY glGenRenderbuffers(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenRenderbuffers);
    _COUNT(APICall_glGenRenderbuffers);
    CHECKCALL(glGenRenderbuffers);
    DO_REAL_CALL(glGenRenderbuffers(_p0,_p1));
    _W.writeAPICall(APICall_glGenRenderbuffers);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenRenderbuffers);
}

void GLAPIENTRY glGenRenderbuffersEXT(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenRenderbuffersEXT);
    _COUNT(APICall_glGenRenderbuffersEXT);
    CHECKCALL(glGenRenderbuffersEXT);
    DO_REAL_CALL(glGenRenderbuffersEXT(_p0,_p1));
    _W.writeAPICall(APICall_glGenRenderbuffersEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenRenderbuffersEXT);
}

GLuint GLAPIENTRY glGenSymbolsEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenSymbolsEXT);
    _COUNT(APICall_glGenSymbolsEXT);
    CHECKCALL(glGenSymbolsEXT);
    _result = DO_REAL_CALL(glGenSymbolsEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGenSymbolsEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenSymbolsEXT);
    return _result;
}

void GLAPIENTRY glGenTextures(GLsizei n, GLuint *textures)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenTextures);
    _COUNT(APICall_glGenTextures);
    CHECKCALL(glGenTextures);
    DO_REAL_CALL(glGenTextures(n,textures));
    _W.writeAPICall(APICall_glGenTextures);
    _W.writeMark("(");
    _W.write(n);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGenTextures_SPECIFIC(n,textures);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenTextures);
}

void GLAPIENTRY glGenTexturesEXT(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenTexturesEXT);
    _COUNT(APICall_glGenTexturesEXT);
    CHECKCALL(glGenTexturesEXT);
    DO_REAL_CALL(glGenTexturesEXT(_p0,_p1));
    _W.writeAPICall(APICall_glGenTexturesEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenTexturesEXT);
}

void GLAPIENTRY glGenTransformFeedbacksNV(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenTransformFeedbacksNV);
    _COUNT(APICall_glGenTransformFeedbacksNV);
    CHECKCALL(glGenTransformFeedbacksNV);
    DO_REAL_CALL(glGenTransformFeedbacksNV(_p0,_p1));
    _W.writeAPICall(APICall_glGenTransformFeedbacksNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenTransformFeedbacksNV);
}

void GLAPIENTRY glGenVertexArrays(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenVertexArrays);
    _COUNT(APICall_glGenVertexArrays);
    CHECKCALL(glGenVertexArrays);
    DO_REAL_CALL(glGenVertexArrays(_p0,_p1));
    _W.writeAPICall(APICall_glGenVertexArrays);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenVertexArrays);
}

void GLAPIENTRY glGenVertexArraysAPPLE(GLsizei _p0, GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenVertexArraysAPPLE);
    _COUNT(APICall_glGenVertexArraysAPPLE);
    CHECKCALL(glGenVertexArraysAPPLE);
    DO_REAL_CALL(glGenVertexArraysAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glGenVertexArraysAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenVertexArraysAPPLE);
}

GLuint GLAPIENTRY glGenVertexShadersEXT(GLuint _p0)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenVertexShadersEXT);
    _COUNT(APICall_glGenVertexShadersEXT);
    CHECKCALL(glGenVertexShadersEXT);
    _result = DO_REAL_CALL(glGenVertexShadersEXT(_p0));
    _W.writeAPICall(APICall_glGenVertexShadersEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenVertexShadersEXT);
    return _result;
}

void GLAPIENTRY glGenerateMipmap(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenerateMipmap);
    _COUNT(APICall_glGenerateMipmap);
    CHECKCALL(glGenerateMipmap);
    DO_REAL_CALL(glGenerateMipmap(_p0));
    _W.writeAPICall(APICall_glGenerateMipmap);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenerateMipmap);
}

void GLAPIENTRY glGenerateMipmapEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenerateMipmapEXT);
    _COUNT(APICall_glGenerateMipmapEXT);
    CHECKCALL(glGenerateMipmapEXT);
    DO_REAL_CALL(glGenerateMipmapEXT(_p0));
    _W.writeAPICall(APICall_glGenerateMipmapEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenerateMipmapEXT);
}

void GLAPIENTRY glGenerateMultiTexMipmapEXT(GLenum _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenerateMultiTexMipmapEXT);
    _COUNT(APICall_glGenerateMultiTexMipmapEXT);
    CHECKCALL(glGenerateMultiTexMipmapEXT);
    DO_REAL_CALL(glGenerateMultiTexMipmapEXT(_p0,_p1));
    _W.writeAPICall(APICall_glGenerateMultiTexMipmapEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenerateMultiTexMipmapEXT);
}

void GLAPIENTRY glGenerateTextureMipmapEXT(GLuint _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGenerateTextureMipmapEXT);
    _COUNT(APICall_glGenerateTextureMipmapEXT);
    CHECKCALL(glGenerateTextureMipmapEXT);
    DO_REAL_CALL(glGenerateTextureMipmapEXT(_p0,_p1));
    _W.writeAPICall(APICall_glGenerateTextureMipmapEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGenerateTextureMipmapEXT);
}

void GLAPIENTRY glGetActiveAttrib(GLuint _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLint *_p4, GLenum *_p5, GLchar *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetActiveAttrib);
    _COUNT(APICall_glGetActiveAttrib);
    CHECKCALL(glGetActiveAttrib);
    DO_REAL_CALL(glGetActiveAttrib(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glGetActiveAttrib);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetActiveAttrib);
}

void GLAPIENTRY glGetActiveAttribARB(GLhandleARB _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLint *_p4, GLenum *_p5, GLcharARB *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetActiveAttribARB);
    _COUNT(APICall_glGetActiveAttribARB);
    CHECKCALL(glGetActiveAttribARB);
    DO_REAL_CALL(glGetActiveAttribARB(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glGetActiveAttribARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetActiveAttribARB);
}

void GLAPIENTRY glGetActiveUniform(GLuint _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLint *_p4, GLenum *_p5, GLchar *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetActiveUniform);
    _COUNT(APICall_glGetActiveUniform);
    CHECKCALL(glGetActiveUniform);
    DO_REAL_CALL(glGetActiveUniform(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glGetActiveUniform);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetActiveUniform);
}

void GLAPIENTRY glGetActiveUniformARB(GLhandleARB _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLint *_p4, GLenum *_p5, GLcharARB *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetActiveUniformARB);
    _COUNT(APICall_glGetActiveUniformARB);
    CHECKCALL(glGetActiveUniformARB);
    DO_REAL_CALL(glGetActiveUniformARB(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glGetActiveUniformARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetActiveUniformARB);
}

void GLAPIENTRY glGetActiveUniformBlockName(GLuint _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLchar *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetActiveUniformBlockName);
    _COUNT(APICall_glGetActiveUniformBlockName);
    CHECKCALL(glGetActiveUniformBlockName);
    DO_REAL_CALL(glGetActiveUniformBlockName(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetActiveUniformBlockName);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetActiveUniformBlockName);
}

void GLAPIENTRY glGetActiveUniformBlockiv(GLuint _p0, GLuint _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetActiveUniformBlockiv);
    _COUNT(APICall_glGetActiveUniformBlockiv);
    CHECKCALL(glGetActiveUniformBlockiv);
    DO_REAL_CALL(glGetActiveUniformBlockiv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetActiveUniformBlockiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetActiveUniformBlockiv);
}

void GLAPIENTRY glGetActiveUniformName(GLuint _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLchar *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetActiveUniformName);
    _COUNT(APICall_glGetActiveUniformName);
    CHECKCALL(glGetActiveUniformName);
    DO_REAL_CALL(glGetActiveUniformName(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetActiveUniformName);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetActiveUniformName);
}

void GLAPIENTRY glGetActiveUniformsiv(GLuint _p0, GLsizei _p1, const GLuint *_p2, GLenum _p3, GLint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetActiveUniformsiv);
    _COUNT(APICall_glGetActiveUniformsiv);
    CHECKCALL(glGetActiveUniformsiv);
    DO_REAL_CALL(glGetActiveUniformsiv(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetActiveUniformsiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetActiveUniformsiv);
}

void GLAPIENTRY glGetActiveVaryingNV(GLuint _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLsizei *_p4, GLenum *_p5, GLchar *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetActiveVaryingNV);
    _COUNT(APICall_glGetActiveVaryingNV);
    CHECKCALL(glGetActiveVaryingNV);
    DO_REAL_CALL(glGetActiveVaryingNV(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glGetActiveVaryingNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetActiveVaryingNV);
}

void GLAPIENTRY glGetArrayObjectfvATI(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetArrayObjectfvATI);
    _COUNT(APICall_glGetArrayObjectfvATI);
    CHECKCALL(glGetArrayObjectfvATI);
    DO_REAL_CALL(glGetArrayObjectfvATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetArrayObjectfvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetArrayObjectfvATI);
}

void GLAPIENTRY glGetArrayObjectivATI(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetArrayObjectivATI);
    _COUNT(APICall_glGetArrayObjectivATI);
    CHECKCALL(glGetArrayObjectivATI);
    DO_REAL_CALL(glGetArrayObjectivATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetArrayObjectivATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetArrayObjectivATI);
}

void GLAPIENTRY glGetAttachedObjectsARB(GLhandleARB _p0, GLsizei _p1, GLsizei *_p2, GLhandleARB *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetAttachedObjectsARB);
    _COUNT(APICall_glGetAttachedObjectsARB);
    CHECKCALL(glGetAttachedObjectsARB);
    DO_REAL_CALL(glGetAttachedObjectsARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetAttachedObjectsARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetAttachedObjectsARB);
}

void GLAPIENTRY glGetAttachedShaders(GLuint _p0, GLsizei _p1, GLsizei *_p2, GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetAttachedShaders);
    _COUNT(APICall_glGetAttachedShaders);
    CHECKCALL(glGetAttachedShaders);
    DO_REAL_CALL(glGetAttachedShaders(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetAttachedShaders);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetAttachedShaders);
}

GLint GLAPIENTRY glGetAttribLocation(GLuint _p0, const GLchar *_p1)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetAttribLocation);
    _COUNT(APICall_glGetAttribLocation);
    CHECKCALL(glGetAttribLocation);
    _result = DO_REAL_CALL(glGetAttribLocation(_p0,_p1));
    _W.writeAPICall(APICall_glGetAttribLocation);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetAttribLocation);
    return _result;
}

GLint GLAPIENTRY glGetAttribLocationARB(GLhandleARB _p0, const GLcharARB *_p1)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetAttribLocationARB);
    _COUNT(APICall_glGetAttribLocationARB);
    CHECKCALL(glGetAttribLocationARB);
    _result = DO_REAL_CALL(glGetAttribLocationARB(_p0,_p1));
    _W.writeAPICall(APICall_glGetAttribLocationARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetAttribLocationARB);
    return _result;
}

void GLAPIENTRY glGetBooleanIndexedvEXT(GLenum _p0, GLuint _p1, GLboolean *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetBooleanIndexedvEXT);
    _COUNT(APICall_glGetBooleanIndexedvEXT);
    CHECKCALL(glGetBooleanIndexedvEXT);
    DO_REAL_CALL(glGetBooleanIndexedvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetBooleanIndexedvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetBooleanIndexedvEXT);
}

void GLAPIENTRY glGetBooleani_v(GLenum _p0, GLuint _p1, GLboolean *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetBooleani_v);
    _COUNT(APICall_glGetBooleani_v);
    CHECKCALL(glGetBooleani_v);
    DO_REAL_CALL(glGetBooleani_v(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetBooleani_v);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetBooleani_v);
}

void GLAPIENTRY glGetBooleanv(GLenum pname, GLboolean *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetBooleanv);
    _COUNT(APICall_glGetBooleanv);
    CHECKCALL(glGetBooleanv);
    DO_REAL_CALL(glGetBooleanv(pname,params));
    _W.writeAPICall(APICall_glGetBooleanv);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetBooleanv);
}

void GLAPIENTRY glGetBufferParameteriv(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetBufferParameteriv);
    _COUNT(APICall_glGetBufferParameteriv);
    CHECKCALL(glGetBufferParameteriv);
    DO_REAL_CALL(glGetBufferParameteriv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetBufferParameteriv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetBufferParameteriv);
}

void GLAPIENTRY glGetBufferParameterivARB(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetBufferParameterivARB);
    _COUNT(APICall_glGetBufferParameterivARB);
    CHECKCALL(glGetBufferParameterivARB);
    DO_REAL_CALL(glGetBufferParameterivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetBufferParameterivARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetBufferParameterivARB);
}

void GLAPIENTRY glGetBufferPointerv(GLenum _p0, GLenum _p1, GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetBufferPointerv);
    _COUNT(APICall_glGetBufferPointerv);
    CHECKCALL(glGetBufferPointerv);
    DO_REAL_CALL(glGetBufferPointerv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetBufferPointerv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetBufferPointerv);
}

void GLAPIENTRY glGetBufferPointervARB(GLenum _p0, GLenum _p1, GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetBufferPointervARB);
    _COUNT(APICall_glGetBufferPointervARB);
    CHECKCALL(glGetBufferPointervARB);
    DO_REAL_CALL(glGetBufferPointervARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetBufferPointervARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetBufferPointervARB);
}

void GLAPIENTRY glGetBufferSubData(GLenum _p0, GLintptr _p1, GLsizeiptr _p2, GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetBufferSubData);
    _COUNT(APICall_glGetBufferSubData);
    CHECKCALL(glGetBufferSubData);
    DO_REAL_CALL(glGetBufferSubData(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetBufferSubData);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetBufferSubData);
}

void GLAPIENTRY glGetBufferSubDataARB(GLenum _p0, GLintptrARB _p1, GLsizeiptrARB _p2, GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetBufferSubDataARB);
    _COUNT(APICall_glGetBufferSubDataARB);
    CHECKCALL(glGetBufferSubDataARB);
    DO_REAL_CALL(glGetBufferSubDataARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetBufferSubDataARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetBufferSubDataARB);
}

void GLAPIENTRY glGetClipPlane(GLenum plane, GLdouble *equation)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetClipPlane);
    _COUNT(APICall_glGetClipPlane);
    CHECKCALL(glGetClipPlane);
    DO_REAL_CALL(glGetClipPlane(plane,equation));
    _W.writeAPICall(APICall_glGetClipPlane);
    _W.writeMark("(");
    _W.writeEnum(plane);
    _W.writeMark(",");
    _W.writeUnknown(&equation);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetClipPlane);
}

void GLAPIENTRY glGetColorTable(GLenum target, GLenum format, GLenum type, GLvoid *table)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetColorTable);
    _COUNT(APICall_glGetColorTable);
    CHECKCALL(glGetColorTable);
    DO_REAL_CALL(glGetColorTable(target,format,type,table));
    _W.writeAPICall(APICall_glGetColorTable);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&table);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetColorTable);
}

void GLAPIENTRY glGetColorTableEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetColorTableEXT);
    _COUNT(APICall_glGetColorTableEXT);
    CHECKCALL(glGetColorTableEXT);
    DO_REAL_CALL(glGetColorTableEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetColorTableEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetColorTableEXT);
}

void GLAPIENTRY glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetColorTableParameterfv);
    _COUNT(APICall_glGetColorTableParameterfv);
    CHECKCALL(glGetColorTableParameterfv);
    DO_REAL_CALL(glGetColorTableParameterfv(target,pname,params));
    _W.writeAPICall(APICall_glGetColorTableParameterfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetColorTableParameterfv);
}

void GLAPIENTRY glGetColorTableParameterfvEXT(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetColorTableParameterfvEXT);
    _COUNT(APICall_glGetColorTableParameterfvEXT);
    CHECKCALL(glGetColorTableParameterfvEXT);
    DO_REAL_CALL(glGetColorTableParameterfvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetColorTableParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetColorTableParameterfvEXT);
}

void GLAPIENTRY glGetColorTableParameterfvSGI(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetColorTableParameterfvSGI);
    _COUNT(APICall_glGetColorTableParameterfvSGI);
    CHECKCALL(glGetColorTableParameterfvSGI);
    DO_REAL_CALL(glGetColorTableParameterfvSGI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetColorTableParameterfvSGI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetColorTableParameterfvSGI);
}

void GLAPIENTRY glGetColorTableParameteriv(GLenum target, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetColorTableParameteriv);
    _COUNT(APICall_glGetColorTableParameteriv);
    CHECKCALL(glGetColorTableParameteriv);
    DO_REAL_CALL(glGetColorTableParameteriv(target,pname,params));
    _W.writeAPICall(APICall_glGetColorTableParameteriv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetColorTableParameteriv);
}

void GLAPIENTRY glGetColorTableParameterivEXT(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetColorTableParameterivEXT);
    _COUNT(APICall_glGetColorTableParameterivEXT);
    CHECKCALL(glGetColorTableParameterivEXT);
    DO_REAL_CALL(glGetColorTableParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetColorTableParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetColorTableParameterivEXT);
}

void GLAPIENTRY glGetColorTableParameterivSGI(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetColorTableParameterivSGI);
    _COUNT(APICall_glGetColorTableParameterivSGI);
    CHECKCALL(glGetColorTableParameterivSGI);
    DO_REAL_CALL(glGetColorTableParameterivSGI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetColorTableParameterivSGI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetColorTableParameterivSGI);
}

void GLAPIENTRY glGetColorTableSGI(GLenum _p0, GLenum _p1, GLenum _p2, GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetColorTableSGI);
    _COUNT(APICall_glGetColorTableSGI);
    CHECKCALL(glGetColorTableSGI);
    DO_REAL_CALL(glGetColorTableSGI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetColorTableSGI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetColorTableSGI);
}

void GLAPIENTRY glGetCombinerInputParameterfvNV(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3, GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetCombinerInputParameterfvNV);
    _COUNT(APICall_glGetCombinerInputParameterfvNV);
    CHECKCALL(glGetCombinerInputParameterfvNV);
    DO_REAL_CALL(glGetCombinerInputParameterfvNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetCombinerInputParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetCombinerInputParameterfvNV);
}

void GLAPIENTRY glGetCombinerInputParameterivNV(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3, GLint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetCombinerInputParameterivNV);
    _COUNT(APICall_glGetCombinerInputParameterivNV);
    CHECKCALL(glGetCombinerInputParameterivNV);
    DO_REAL_CALL(glGetCombinerInputParameterivNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetCombinerInputParameterivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetCombinerInputParameterivNV);
}

void GLAPIENTRY glGetCombinerOutputParameterfvNV(GLenum _p0, GLenum _p1, GLenum _p2, GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetCombinerOutputParameterfvNV);
    _COUNT(APICall_glGetCombinerOutputParameterfvNV);
    CHECKCALL(glGetCombinerOutputParameterfvNV);
    DO_REAL_CALL(glGetCombinerOutputParameterfvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetCombinerOutputParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetCombinerOutputParameterfvNV);
}

void GLAPIENTRY glGetCombinerOutputParameterivNV(GLenum _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetCombinerOutputParameterivNV);
    _COUNT(APICall_glGetCombinerOutputParameterivNV);
    CHECKCALL(glGetCombinerOutputParameterivNV);
    DO_REAL_CALL(glGetCombinerOutputParameterivNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetCombinerOutputParameterivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetCombinerOutputParameterivNV);
}

void GLAPIENTRY glGetCombinerStageParameterfvNV(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetCombinerStageParameterfvNV);
    _COUNT(APICall_glGetCombinerStageParameterfvNV);
    CHECKCALL(glGetCombinerStageParameterfvNV);
    DO_REAL_CALL(glGetCombinerStageParameterfvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetCombinerStageParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetCombinerStageParameterfvNV);
}

void GLAPIENTRY glGetCompressedMultiTexImageEXT(GLenum _p0, GLenum _p1, GLint _p2, GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetCompressedMultiTexImageEXT);
    _COUNT(APICall_glGetCompressedMultiTexImageEXT);
    CHECKCALL(glGetCompressedMultiTexImageEXT);
    DO_REAL_CALL(glGetCompressedMultiTexImageEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetCompressedMultiTexImageEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetCompressedMultiTexImageEXT);
}

void GLAPIENTRY glGetCompressedTexImage(GLenum target, GLint lod, GLvoid *img)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetCompressedTexImage);
    _COUNT(APICall_glGetCompressedTexImage);
    CHECKCALL(glGetCompressedTexImage);
    DO_REAL_CALL(glGetCompressedTexImage(target,lod,img));
    _W.writeAPICall(APICall_glGetCompressedTexImage);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(lod);
    _W.writeMark(",");
    _W.writeUnknown(&img);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetCompressedTexImage);
}

void GLAPIENTRY glGetCompressedTexImageARB(GLenum _p0, GLint _p1, GLvoid *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetCompressedTexImageARB);
    _COUNT(APICall_glGetCompressedTexImageARB);
    CHECKCALL(glGetCompressedTexImageARB);
    DO_REAL_CALL(glGetCompressedTexImageARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetCompressedTexImageARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetCompressedTexImageARB);
}

void GLAPIENTRY glGetCompressedTextureImageEXT(GLuint _p0, GLenum _p1, GLint _p2, GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetCompressedTextureImageEXT);
    _COUNT(APICall_glGetCompressedTextureImageEXT);
    CHECKCALL(glGetCompressedTextureImageEXT);
    DO_REAL_CALL(glGetCompressedTextureImageEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetCompressedTextureImageEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetCompressedTextureImageEXT);
}

void GLAPIENTRY glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, GLvoid *image)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetConvolutionFilter);
    _COUNT(APICall_glGetConvolutionFilter);
    CHECKCALL(glGetConvolutionFilter);
    DO_REAL_CALL(glGetConvolutionFilter(target,format,type,image));
    _W.writeAPICall(APICall_glGetConvolutionFilter);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&image);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetConvolutionFilter);
}

void GLAPIENTRY glGetConvolutionFilterEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetConvolutionFilterEXT);
    _COUNT(APICall_glGetConvolutionFilterEXT);
    CHECKCALL(glGetConvolutionFilterEXT);
    DO_REAL_CALL(glGetConvolutionFilterEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetConvolutionFilterEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetConvolutionFilterEXT);
}

void GLAPIENTRY glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetConvolutionParameterfv);
    _COUNT(APICall_glGetConvolutionParameterfv);
    CHECKCALL(glGetConvolutionParameterfv);
    DO_REAL_CALL(glGetConvolutionParameterfv(target,pname,params));
    _W.writeAPICall(APICall_glGetConvolutionParameterfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetConvolutionParameterfv);
}

void GLAPIENTRY glGetConvolutionParameterfvEXT(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetConvolutionParameterfvEXT);
    _COUNT(APICall_glGetConvolutionParameterfvEXT);
    CHECKCALL(glGetConvolutionParameterfvEXT);
    DO_REAL_CALL(glGetConvolutionParameterfvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetConvolutionParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetConvolutionParameterfvEXT);
}

void GLAPIENTRY glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetConvolutionParameteriv);
    _COUNT(APICall_glGetConvolutionParameteriv);
    CHECKCALL(glGetConvolutionParameteriv);
    DO_REAL_CALL(glGetConvolutionParameteriv(target,pname,params));
    _W.writeAPICall(APICall_glGetConvolutionParameteriv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetConvolutionParameteriv);
}

void GLAPIENTRY glGetConvolutionParameterivEXT(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetConvolutionParameterivEXT);
    _COUNT(APICall_glGetConvolutionParameterivEXT);
    CHECKCALL(glGetConvolutionParameterivEXT);
    DO_REAL_CALL(glGetConvolutionParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetConvolutionParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetConvolutionParameterivEXT);
}

void GLAPIENTRY glGetDetailTexFuncSGIS(GLenum _p0, GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetDetailTexFuncSGIS);
    _COUNT(APICall_glGetDetailTexFuncSGIS);
    CHECKCALL(glGetDetailTexFuncSGIS);
    DO_REAL_CALL(glGetDetailTexFuncSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glGetDetailTexFuncSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetDetailTexFuncSGIS);
}

void GLAPIENTRY glGetDoubleIndexedvEXT(GLenum _p0, GLuint _p1, GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetDoubleIndexedvEXT);
    _COUNT(APICall_glGetDoubleIndexedvEXT);
    CHECKCALL(glGetDoubleIndexedvEXT);
    DO_REAL_CALL(glGetDoubleIndexedvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetDoubleIndexedvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetDoubleIndexedvEXT);
}

void GLAPIENTRY glGetDoublev(GLenum pname, GLdouble *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetDoublev);
    _COUNT(APICall_glGetDoublev);
    CHECKCALL(glGetDoublev);
    DO_REAL_CALL(glGetDoublev(pname,params));
    _W.writeAPICall(APICall_glGetDoublev);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetDoublev);
}

GLenum GLAPIENTRY glGetError()
{
    GLenum _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetError);
    _COUNT(APICall_glGetError);
    CHECKCALL(glGetError);
    _result = DO_REAL_CALL(glGetError());
    _W.writeAPICall(APICall_glGetError);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultEnum(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetError);
    return _result;
}

void GLAPIENTRY glGetFenceivNV(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFenceivNV);
    _COUNT(APICall_glGetFenceivNV);
    CHECKCALL(glGetFenceivNV);
    DO_REAL_CALL(glGetFenceivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetFenceivNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFenceivNV);
}

void GLAPIENTRY glGetFinalCombinerInputParameterfvNV(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFinalCombinerInputParameterfvNV);
    _COUNT(APICall_glGetFinalCombinerInputParameterfvNV);
    CHECKCALL(glGetFinalCombinerInputParameterfvNV);
    DO_REAL_CALL(glGetFinalCombinerInputParameterfvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetFinalCombinerInputParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFinalCombinerInputParameterfvNV);
}

void GLAPIENTRY glGetFinalCombinerInputParameterivNV(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFinalCombinerInputParameterivNV);
    _COUNT(APICall_glGetFinalCombinerInputParameterivNV);
    CHECKCALL(glGetFinalCombinerInputParameterivNV);
    DO_REAL_CALL(glGetFinalCombinerInputParameterivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetFinalCombinerInputParameterivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFinalCombinerInputParameterivNV);
}

void GLAPIENTRY glGetFloatIndexedvEXT(GLenum _p0, GLuint _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFloatIndexedvEXT);
    _COUNT(APICall_glGetFloatIndexedvEXT);
    CHECKCALL(glGetFloatIndexedvEXT);
    DO_REAL_CALL(glGetFloatIndexedvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetFloatIndexedvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFloatIndexedvEXT);
}

void GLAPIENTRY glGetFloatv(GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFloatv);
    _COUNT(APICall_glGetFloatv);
    CHECKCALL(glGetFloatv);
    DO_REAL_CALL(glGetFloatv(pname,params));
    _W.writeAPICall(APICall_glGetFloatv);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGetFloatv_SPECIFIC(pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFloatv);
}

void GLAPIENTRY glGetFogFuncSGIS(GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFogFuncSGIS);
    _COUNT(APICall_glGetFogFuncSGIS);
    CHECKCALL(glGetFogFuncSGIS);
    DO_REAL_CALL(glGetFogFuncSGIS(_p0));
    _W.writeAPICall(APICall_glGetFogFuncSGIS);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFogFuncSGIS);
}

GLint GLAPIENTRY glGetFragDataLocation(GLuint _p0, const GLchar *_p1)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFragDataLocation);
    _COUNT(APICall_glGetFragDataLocation);
    CHECKCALL(glGetFragDataLocation);
    _result = DO_REAL_CALL(glGetFragDataLocation(_p0,_p1));
    _W.writeAPICall(APICall_glGetFragDataLocation);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFragDataLocation);
    return _result;
}

GLint GLAPIENTRY glGetFragDataLocationEXT(GLuint _p0, const GLchar *_p1)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFragDataLocationEXT);
    _COUNT(APICall_glGetFragDataLocationEXT);
    CHECKCALL(glGetFragDataLocationEXT);
    _result = DO_REAL_CALL(glGetFragDataLocationEXT(_p0,_p1));
    _W.writeAPICall(APICall_glGetFragDataLocationEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFragDataLocationEXT);
    return _result;
}

void GLAPIENTRY glGetFragmentLightfvSGIX(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFragmentLightfvSGIX);
    _COUNT(APICall_glGetFragmentLightfvSGIX);
    CHECKCALL(glGetFragmentLightfvSGIX);
    DO_REAL_CALL(glGetFragmentLightfvSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetFragmentLightfvSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFragmentLightfvSGIX);
}

void GLAPIENTRY glGetFragmentLightivSGIX(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFragmentLightivSGIX);
    _COUNT(APICall_glGetFragmentLightivSGIX);
    CHECKCALL(glGetFragmentLightivSGIX);
    DO_REAL_CALL(glGetFragmentLightivSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetFragmentLightivSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFragmentLightivSGIX);
}

void GLAPIENTRY glGetFragmentMaterialfvSGIX(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFragmentMaterialfvSGIX);
    _COUNT(APICall_glGetFragmentMaterialfvSGIX);
    CHECKCALL(glGetFragmentMaterialfvSGIX);
    DO_REAL_CALL(glGetFragmentMaterialfvSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetFragmentMaterialfvSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFragmentMaterialfvSGIX);
}

void GLAPIENTRY glGetFragmentMaterialivSGIX(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFragmentMaterialivSGIX);
    _COUNT(APICall_glGetFragmentMaterialivSGIX);
    CHECKCALL(glGetFragmentMaterialivSGIX);
    DO_REAL_CALL(glGetFragmentMaterialivSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetFragmentMaterialivSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFragmentMaterialivSGIX);
}

void GLAPIENTRY glGetFramebufferAttachmentParameteriv(GLenum _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFramebufferAttachmentParameteriv);
    _COUNT(APICall_glGetFramebufferAttachmentParameteriv);
    CHECKCALL(glGetFramebufferAttachmentParameteriv);
    DO_REAL_CALL(glGetFramebufferAttachmentParameteriv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetFramebufferAttachmentParameteriv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFramebufferAttachmentParameteriv);
}

void GLAPIENTRY glGetFramebufferAttachmentParameterivEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFramebufferAttachmentParameterivEXT);
    _COUNT(APICall_glGetFramebufferAttachmentParameterivEXT);
    CHECKCALL(glGetFramebufferAttachmentParameterivEXT);
    DO_REAL_CALL(glGetFramebufferAttachmentParameterivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetFramebufferAttachmentParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFramebufferAttachmentParameterivEXT);
}

void GLAPIENTRY glGetFramebufferParameterivEXT(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetFramebufferParameterivEXT);
    _COUNT(APICall_glGetFramebufferParameterivEXT);
    CHECKCALL(glGetFramebufferParameterivEXT);
    DO_REAL_CALL(glGetFramebufferParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetFramebufferParameterivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetFramebufferParameterivEXT);
}

GLhandleARB GLAPIENTRY glGetHandleARB(GLenum _p0)
{
    GLhandleARB _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetHandleARB);
    _COUNT(APICall_glGetHandleARB);
    CHECKCALL(glGetHandleARB);
    _result = DO_REAL_CALL(glGetHandleARB(_p0));
    _W.writeAPICall(APICall_glGetHandleARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetHandleARB);
    return _result;
}

void GLAPIENTRY glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetHistogram);
    _COUNT(APICall_glGetHistogram);
    CHECKCALL(glGetHistogram);
    DO_REAL_CALL(glGetHistogram(target,reset,format,type,values));
    _W.writeAPICall(APICall_glGetHistogram);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(reset);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&values);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetHistogram);
}

void GLAPIENTRY glGetHistogramEXT(GLenum _p0, GLboolean _p1, GLenum _p2, GLenum _p3, GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetHistogramEXT);
    _COUNT(APICall_glGetHistogramEXT);
    CHECKCALL(glGetHistogramEXT);
    DO_REAL_CALL(glGetHistogramEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetHistogramEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetHistogramEXT);
}

void GLAPIENTRY glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetHistogramParameterfv);
    _COUNT(APICall_glGetHistogramParameterfv);
    CHECKCALL(glGetHistogramParameterfv);
    DO_REAL_CALL(glGetHistogramParameterfv(target,pname,params));
    _W.writeAPICall(APICall_glGetHistogramParameterfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetHistogramParameterfv);
}

void GLAPIENTRY glGetHistogramParameterfvEXT(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetHistogramParameterfvEXT);
    _COUNT(APICall_glGetHistogramParameterfvEXT);
    CHECKCALL(glGetHistogramParameterfvEXT);
    DO_REAL_CALL(glGetHistogramParameterfvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetHistogramParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetHistogramParameterfvEXT);
}

void GLAPIENTRY glGetHistogramParameteriv(GLenum target, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetHistogramParameteriv);
    _COUNT(APICall_glGetHistogramParameteriv);
    CHECKCALL(glGetHistogramParameteriv);
    DO_REAL_CALL(glGetHistogramParameteriv(target,pname,params));
    _W.writeAPICall(APICall_glGetHistogramParameteriv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetHistogramParameteriv);
}

void GLAPIENTRY glGetHistogramParameterivEXT(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetHistogramParameterivEXT);
    _COUNT(APICall_glGetHistogramParameterivEXT);
    CHECKCALL(glGetHistogramParameterivEXT);
    DO_REAL_CALL(glGetHistogramParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetHistogramParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetHistogramParameterivEXT);
}

void GLAPIENTRY glGetImageTransformParameterfvHP(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetImageTransformParameterfvHP);
    _COUNT(APICall_glGetImageTransformParameterfvHP);
    CHECKCALL(glGetImageTransformParameterfvHP);
    DO_REAL_CALL(glGetImageTransformParameterfvHP(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetImageTransformParameterfvHP);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetImageTransformParameterfvHP);
}

void GLAPIENTRY glGetImageTransformParameterivHP(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetImageTransformParameterivHP);
    _COUNT(APICall_glGetImageTransformParameterivHP);
    CHECKCALL(glGetImageTransformParameterivHP);
    DO_REAL_CALL(glGetImageTransformParameterivHP(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetImageTransformParameterivHP);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetImageTransformParameterivHP);
}

void GLAPIENTRY glGetInfoLogARB(GLhandleARB _p0, GLsizei _p1, GLsizei *_p2, GLcharARB *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetInfoLogARB);
    _COUNT(APICall_glGetInfoLogARB);
    CHECKCALL(glGetInfoLogARB);
    DO_REAL_CALL(glGetInfoLogARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetInfoLogARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGetInfoLogARB_SPECIFIC(_p0,_p1,_p2,_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetInfoLogARB);
}

GLint GLAPIENTRY glGetInstrumentsSGIX()
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetInstrumentsSGIX);
    _COUNT(APICall_glGetInstrumentsSGIX);
    CHECKCALL(glGetInstrumentsSGIX);
    _result = DO_REAL_CALL(glGetInstrumentsSGIX());
    _W.writeAPICall(APICall_glGetInstrumentsSGIX);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetInstrumentsSGIX);
    return _result;
}

void GLAPIENTRY glGetIntegerIndexedvEXT(GLenum _p0, GLuint _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetIntegerIndexedvEXT);
    _COUNT(APICall_glGetIntegerIndexedvEXT);
    CHECKCALL(glGetIntegerIndexedvEXT);
    DO_REAL_CALL(glGetIntegerIndexedvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetIntegerIndexedvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetIntegerIndexedvEXT);
}

void GLAPIENTRY glGetIntegeri_v(GLenum _p0, GLuint _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetIntegeri_v);
    _COUNT(APICall_glGetIntegeri_v);
    CHECKCALL(glGetIntegeri_v);
    DO_REAL_CALL(glGetIntegeri_v(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetIntegeri_v);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetIntegeri_v);
}

void GLAPIENTRY glGetIntegerv(GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetIntegerv);
    _COUNT(APICall_glGetIntegerv);
    CHECKCALL(glGetIntegerv);
    DO_REAL_CALL(glGetIntegerv(pname,params));
    _W.writeAPICall(APICall_glGetIntegerv);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGetIntegerv_SPECIFIC(pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetIntegerv);
}

void GLAPIENTRY glGetInvariantBooleanvEXT(GLuint _p0, GLenum _p1, GLboolean *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetInvariantBooleanvEXT);
    _COUNT(APICall_glGetInvariantBooleanvEXT);
    CHECKCALL(glGetInvariantBooleanvEXT);
    DO_REAL_CALL(glGetInvariantBooleanvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetInvariantBooleanvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetInvariantBooleanvEXT);
}

void GLAPIENTRY glGetInvariantFloatvEXT(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetInvariantFloatvEXT);
    _COUNT(APICall_glGetInvariantFloatvEXT);
    CHECKCALL(glGetInvariantFloatvEXT);
    DO_REAL_CALL(glGetInvariantFloatvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetInvariantFloatvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetInvariantFloatvEXT);
}

void GLAPIENTRY glGetInvariantIntegervEXT(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetInvariantIntegervEXT);
    _COUNT(APICall_glGetInvariantIntegervEXT);
    CHECKCALL(glGetInvariantIntegervEXT);
    DO_REAL_CALL(glGetInvariantIntegervEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetInvariantIntegervEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetInvariantIntegervEXT);
}

void GLAPIENTRY glGetLightfv(GLenum light, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetLightfv);
    _COUNT(APICall_glGetLightfv);
    CHECKCALL(glGetLightfv);
    DO_REAL_CALL(glGetLightfv(light,pname,params));
    _W.writeAPICall(APICall_glGetLightfv);
    _W.writeMark("(");
    _W.writeEnum(light);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetLightfv);
}

void GLAPIENTRY glGetLightiv(GLenum light, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetLightiv);
    _COUNT(APICall_glGetLightiv);
    CHECKCALL(glGetLightiv);
    DO_REAL_CALL(glGetLightiv(light,pname,params));
    _W.writeAPICall(APICall_glGetLightiv);
    _W.writeMark("(");
    _W.writeEnum(light);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetLightiv);
}

void GLAPIENTRY glGetListParameterfvSGIX(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetListParameterfvSGIX);
    _COUNT(APICall_glGetListParameterfvSGIX);
    CHECKCALL(glGetListParameterfvSGIX);
    DO_REAL_CALL(glGetListParameterfvSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetListParameterfvSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetListParameterfvSGIX);
}

void GLAPIENTRY glGetListParameterivSGIX(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetListParameterivSGIX);
    _COUNT(APICall_glGetListParameterivSGIX);
    CHECKCALL(glGetListParameterivSGIX);
    DO_REAL_CALL(glGetListParameterivSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetListParameterivSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetListParameterivSGIX);
}

void GLAPIENTRY glGetLocalConstantBooleanvEXT(GLuint _p0, GLenum _p1, GLboolean *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetLocalConstantBooleanvEXT);
    _COUNT(APICall_glGetLocalConstantBooleanvEXT);
    CHECKCALL(glGetLocalConstantBooleanvEXT);
    DO_REAL_CALL(glGetLocalConstantBooleanvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetLocalConstantBooleanvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetLocalConstantBooleanvEXT);
}

void GLAPIENTRY glGetLocalConstantFloatvEXT(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetLocalConstantFloatvEXT);
    _COUNT(APICall_glGetLocalConstantFloatvEXT);
    CHECKCALL(glGetLocalConstantFloatvEXT);
    DO_REAL_CALL(glGetLocalConstantFloatvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetLocalConstantFloatvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetLocalConstantFloatvEXT);
}

void GLAPIENTRY glGetLocalConstantIntegervEXT(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetLocalConstantIntegervEXT);
    _COUNT(APICall_glGetLocalConstantIntegervEXT);
    CHECKCALL(glGetLocalConstantIntegervEXT);
    DO_REAL_CALL(glGetLocalConstantIntegervEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetLocalConstantIntegervEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetLocalConstantIntegervEXT);
}

void GLAPIENTRY glGetMapAttribParameterfvNV(GLenum _p0, GLuint _p1, GLenum _p2, GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMapAttribParameterfvNV);
    _COUNT(APICall_glGetMapAttribParameterfvNV);
    CHECKCALL(glGetMapAttribParameterfvNV);
    DO_REAL_CALL(glGetMapAttribParameterfvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMapAttribParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMapAttribParameterfvNV);
}

void GLAPIENTRY glGetMapAttribParameterivNV(GLenum _p0, GLuint _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMapAttribParameterivNV);
    _COUNT(APICall_glGetMapAttribParameterivNV);
    CHECKCALL(glGetMapAttribParameterivNV);
    DO_REAL_CALL(glGetMapAttribParameterivNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMapAttribParameterivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMapAttribParameterivNV);
}

void GLAPIENTRY glGetMapControlPointsNV(GLenum _p0, GLuint _p1, GLenum _p2, GLsizei _p3, GLsizei _p4, GLboolean _p5, GLvoid *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMapControlPointsNV);
    _COUNT(APICall_glGetMapControlPointsNV);
    CHECKCALL(glGetMapControlPointsNV);
    DO_REAL_CALL(glGetMapControlPointsNV(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glGetMapControlPointsNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMapControlPointsNV);
}

void GLAPIENTRY glGetMapParameterfvNV(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMapParameterfvNV);
    _COUNT(APICall_glGetMapParameterfvNV);
    CHECKCALL(glGetMapParameterfvNV);
    DO_REAL_CALL(glGetMapParameterfvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetMapParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMapParameterfvNV);
}

void GLAPIENTRY glGetMapParameterivNV(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMapParameterivNV);
    _COUNT(APICall_glGetMapParameterivNV);
    CHECKCALL(glGetMapParameterivNV);
    DO_REAL_CALL(glGetMapParameterivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetMapParameterivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMapParameterivNV);
}

void GLAPIENTRY glGetMapdv(GLenum target, GLenum query, GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMapdv);
    _COUNT(APICall_glGetMapdv);
    CHECKCALL(glGetMapdv);
    DO_REAL_CALL(glGetMapdv(target,query,v));
    _W.writeAPICall(APICall_glGetMapdv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(query);
    _W.writeMark(",");
    _W.writeUnknown(&v);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMapdv);
}

void GLAPIENTRY glGetMapfv(GLenum target, GLenum query, GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMapfv);
    _COUNT(APICall_glGetMapfv);
    CHECKCALL(glGetMapfv);
    DO_REAL_CALL(glGetMapfv(target,query,v));
    _W.writeAPICall(APICall_glGetMapfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(query);
    _W.writeMark(",");
    _W.writeUnknown(&v);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMapfv);
}

void GLAPIENTRY glGetMapiv(GLenum target, GLenum query, GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMapiv);
    _COUNT(APICall_glGetMapiv);
    CHECKCALL(glGetMapiv);
    DO_REAL_CALL(glGetMapiv(target,query,v));
    _W.writeAPICall(APICall_glGetMapiv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(query);
    _W.writeMark(",");
    _W.writeUnknown(&v);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMapiv);
}

void GLAPIENTRY glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMaterialfv);
    _COUNT(APICall_glGetMaterialfv);
    CHECKCALL(glGetMaterialfv);
    DO_REAL_CALL(glGetMaterialfv(face,pname,params));
    _W.writeAPICall(APICall_glGetMaterialfv);
    _W.writeMark("(");
    _W.writeEnum(face);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMaterialfv);
}

void GLAPIENTRY glGetMaterialiv(GLenum face, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMaterialiv);
    _COUNT(APICall_glGetMaterialiv);
    CHECKCALL(glGetMaterialiv);
    DO_REAL_CALL(glGetMaterialiv(face,pname,params));
    _W.writeAPICall(APICall_glGetMaterialiv);
    _W.writeMark("(");
    _W.writeEnum(face);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMaterialiv);
}

void GLAPIENTRY glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMinmax);
    _COUNT(APICall_glGetMinmax);
    CHECKCALL(glGetMinmax);
    DO_REAL_CALL(glGetMinmax(target,reset,format,types,values));
    _W.writeAPICall(APICall_glGetMinmax);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(reset);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(types);
    _W.writeMark(",");
    _W.writeUnknown(&values);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMinmax);
}

void GLAPIENTRY glGetMinmaxEXT(GLenum _p0, GLboolean _p1, GLenum _p2, GLenum _p3, GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMinmaxEXT);
    _COUNT(APICall_glGetMinmaxEXT);
    CHECKCALL(glGetMinmaxEXT);
    DO_REAL_CALL(glGetMinmaxEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetMinmaxEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMinmaxEXT);
}

void GLAPIENTRY glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMinmaxParameterfv);
    _COUNT(APICall_glGetMinmaxParameterfv);
    CHECKCALL(glGetMinmaxParameterfv);
    DO_REAL_CALL(glGetMinmaxParameterfv(target,pname,params));
    _W.writeAPICall(APICall_glGetMinmaxParameterfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMinmaxParameterfv);
}

void GLAPIENTRY glGetMinmaxParameterfvEXT(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMinmaxParameterfvEXT);
    _COUNT(APICall_glGetMinmaxParameterfvEXT);
    CHECKCALL(glGetMinmaxParameterfvEXT);
    DO_REAL_CALL(glGetMinmaxParameterfvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetMinmaxParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMinmaxParameterfvEXT);
}

void GLAPIENTRY glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMinmaxParameteriv);
    _COUNT(APICall_glGetMinmaxParameteriv);
    CHECKCALL(glGetMinmaxParameteriv);
    DO_REAL_CALL(glGetMinmaxParameteriv(target,pname,params));
    _W.writeAPICall(APICall_glGetMinmaxParameteriv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMinmaxParameteriv);
}

void GLAPIENTRY glGetMinmaxParameterivEXT(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMinmaxParameterivEXT);
    _COUNT(APICall_glGetMinmaxParameterivEXT);
    CHECKCALL(glGetMinmaxParameterivEXT);
    DO_REAL_CALL(glGetMinmaxParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetMinmaxParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMinmaxParameterivEXT);
}

void GLAPIENTRY glGetMultiTexEnvfvEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexEnvfvEXT);
    _COUNT(APICall_glGetMultiTexEnvfvEXT);
    CHECKCALL(glGetMultiTexEnvfvEXT);
    DO_REAL_CALL(glGetMultiTexEnvfvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMultiTexEnvfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexEnvfvEXT);
}

void GLAPIENTRY glGetMultiTexEnvivEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexEnvivEXT);
    _COUNT(APICall_glGetMultiTexEnvivEXT);
    CHECKCALL(glGetMultiTexEnvivEXT);
    DO_REAL_CALL(glGetMultiTexEnvivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMultiTexEnvivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexEnvivEXT);
}

void GLAPIENTRY glGetMultiTexGendvEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLdouble *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexGendvEXT);
    _COUNT(APICall_glGetMultiTexGendvEXT);
    CHECKCALL(glGetMultiTexGendvEXT);
    DO_REAL_CALL(glGetMultiTexGendvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMultiTexGendvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexGendvEXT);
}

void GLAPIENTRY glGetMultiTexGenfvEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexGenfvEXT);
    _COUNT(APICall_glGetMultiTexGenfvEXT);
    CHECKCALL(glGetMultiTexGenfvEXT);
    DO_REAL_CALL(glGetMultiTexGenfvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMultiTexGenfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexGenfvEXT);
}

void GLAPIENTRY glGetMultiTexGenivEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexGenivEXT);
    _COUNT(APICall_glGetMultiTexGenivEXT);
    CHECKCALL(glGetMultiTexGenivEXT);
    DO_REAL_CALL(glGetMultiTexGenivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMultiTexGenivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexGenivEXT);
}

void GLAPIENTRY glGetMultiTexImageEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLenum _p4, GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexImageEXT);
    _COUNT(APICall_glGetMultiTexImageEXT);
    CHECKCALL(glGetMultiTexImageEXT);
    DO_REAL_CALL(glGetMultiTexImageEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glGetMultiTexImageEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexImageEXT);
}

void GLAPIENTRY glGetMultiTexLevelParameterfvEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexLevelParameterfvEXT);
    _COUNT(APICall_glGetMultiTexLevelParameterfvEXT);
    CHECKCALL(glGetMultiTexLevelParameterfvEXT);
    DO_REAL_CALL(glGetMultiTexLevelParameterfvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetMultiTexLevelParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexLevelParameterfvEXT);
}

void GLAPIENTRY glGetMultiTexLevelParameterivEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexLevelParameterivEXT);
    _COUNT(APICall_glGetMultiTexLevelParameterivEXT);
    CHECKCALL(glGetMultiTexLevelParameterivEXT);
    DO_REAL_CALL(glGetMultiTexLevelParameterivEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetMultiTexLevelParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexLevelParameterivEXT);
}

void GLAPIENTRY glGetMultiTexParameterIivEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexParameterIivEXT);
    _COUNT(APICall_glGetMultiTexParameterIivEXT);
    CHECKCALL(glGetMultiTexParameterIivEXT);
    DO_REAL_CALL(glGetMultiTexParameterIivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMultiTexParameterIivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexParameterIivEXT);
}

void GLAPIENTRY glGetMultiTexParameterIuivEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexParameterIuivEXT);
    _COUNT(APICall_glGetMultiTexParameterIuivEXT);
    CHECKCALL(glGetMultiTexParameterIuivEXT);
    DO_REAL_CALL(glGetMultiTexParameterIuivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMultiTexParameterIuivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexParameterIuivEXT);
}

void GLAPIENTRY glGetMultiTexParameterfvEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexParameterfvEXT);
    _COUNT(APICall_glGetMultiTexParameterfvEXT);
    CHECKCALL(glGetMultiTexParameterfvEXT);
    DO_REAL_CALL(glGetMultiTexParameterfvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMultiTexParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexParameterfvEXT);
}

void GLAPIENTRY glGetMultiTexParameterivEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultiTexParameterivEXT);
    _COUNT(APICall_glGetMultiTexParameterivEXT);
    CHECKCALL(glGetMultiTexParameterivEXT);
    DO_REAL_CALL(glGetMultiTexParameterivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetMultiTexParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultiTexParameterivEXT);
}

void GLAPIENTRY glGetMultisamplefvNV(GLenum _p0, GLuint _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetMultisamplefvNV);
    _COUNT(APICall_glGetMultisamplefvNV);
    CHECKCALL(glGetMultisamplefvNV);
    DO_REAL_CALL(glGetMultisamplefvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetMultisamplefvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetMultisamplefvNV);
}

void GLAPIENTRY glGetNamedBufferParameterivEXT(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedBufferParameterivEXT);
    _COUNT(APICall_glGetNamedBufferParameterivEXT);
    CHECKCALL(glGetNamedBufferParameterivEXT);
    DO_REAL_CALL(glGetNamedBufferParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetNamedBufferParameterivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedBufferParameterivEXT);
}

void GLAPIENTRY glGetNamedBufferPointervEXT(GLuint _p0, GLenum _p1, GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedBufferPointervEXT);
    _COUNT(APICall_glGetNamedBufferPointervEXT);
    CHECKCALL(glGetNamedBufferPointervEXT);
    DO_REAL_CALL(glGetNamedBufferPointervEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetNamedBufferPointervEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedBufferPointervEXT);
}

void GLAPIENTRY glGetNamedBufferSubDataEXT(GLuint _p0, GLintptr _p1, GLsizeiptr _p2, GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedBufferSubDataEXT);
    _COUNT(APICall_glGetNamedBufferSubDataEXT);
    CHECKCALL(glGetNamedBufferSubDataEXT);
    DO_REAL_CALL(glGetNamedBufferSubDataEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetNamedBufferSubDataEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedBufferSubDataEXT);
}

void GLAPIENTRY glGetNamedFramebufferAttachmentParameterivEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedFramebufferAttachmentParameterivEXT);
    _COUNT(APICall_glGetNamedFramebufferAttachmentParameterivEXT);
    CHECKCALL(glGetNamedFramebufferAttachmentParameterivEXT);
    DO_REAL_CALL(glGetNamedFramebufferAttachmentParameterivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetNamedFramebufferAttachmentParameterivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedFramebufferAttachmentParameterivEXT);
}

void GLAPIENTRY glGetNamedProgramLocalParameterIivEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedProgramLocalParameterIivEXT);
    _COUNT(APICall_glGetNamedProgramLocalParameterIivEXT);
    CHECKCALL(glGetNamedProgramLocalParameterIivEXT);
    DO_REAL_CALL(glGetNamedProgramLocalParameterIivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetNamedProgramLocalParameterIivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedProgramLocalParameterIivEXT);
}

void GLAPIENTRY glGetNamedProgramLocalParameterIuivEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedProgramLocalParameterIuivEXT);
    _COUNT(APICall_glGetNamedProgramLocalParameterIuivEXT);
    CHECKCALL(glGetNamedProgramLocalParameterIuivEXT);
    DO_REAL_CALL(glGetNamedProgramLocalParameterIuivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetNamedProgramLocalParameterIuivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedProgramLocalParameterIuivEXT);
}

void GLAPIENTRY glGetNamedProgramLocalParameterdvEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLdouble *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedProgramLocalParameterdvEXT);
    _COUNT(APICall_glGetNamedProgramLocalParameterdvEXT);
    CHECKCALL(glGetNamedProgramLocalParameterdvEXT);
    DO_REAL_CALL(glGetNamedProgramLocalParameterdvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetNamedProgramLocalParameterdvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedProgramLocalParameterdvEXT);
}

void GLAPIENTRY glGetNamedProgramLocalParameterfvEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedProgramLocalParameterfvEXT);
    _COUNT(APICall_glGetNamedProgramLocalParameterfvEXT);
    CHECKCALL(glGetNamedProgramLocalParameterfvEXT);
    DO_REAL_CALL(glGetNamedProgramLocalParameterfvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetNamedProgramLocalParameterfvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedProgramLocalParameterfvEXT);
}

void GLAPIENTRY glGetNamedProgramStringEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedProgramStringEXT);
    _COUNT(APICall_glGetNamedProgramStringEXT);
    CHECKCALL(glGetNamedProgramStringEXT);
    DO_REAL_CALL(glGetNamedProgramStringEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetNamedProgramStringEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedProgramStringEXT);
}

void GLAPIENTRY glGetNamedProgramivEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedProgramivEXT);
    _COUNT(APICall_glGetNamedProgramivEXT);
    CHECKCALL(glGetNamedProgramivEXT);
    DO_REAL_CALL(glGetNamedProgramivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetNamedProgramivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedProgramivEXT);
}

void GLAPIENTRY glGetNamedRenderbufferParameterivEXT(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetNamedRenderbufferParameterivEXT);
    _COUNT(APICall_glGetNamedRenderbufferParameterivEXT);
    CHECKCALL(glGetNamedRenderbufferParameterivEXT);
    DO_REAL_CALL(glGetNamedRenderbufferParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetNamedRenderbufferParameterivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetNamedRenderbufferParameterivEXT);
}

void GLAPIENTRY glGetObjectBufferfvATI(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetObjectBufferfvATI);
    _COUNT(APICall_glGetObjectBufferfvATI);
    CHECKCALL(glGetObjectBufferfvATI);
    DO_REAL_CALL(glGetObjectBufferfvATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetObjectBufferfvATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetObjectBufferfvATI);
}

void GLAPIENTRY glGetObjectBufferivATI(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetObjectBufferivATI);
    _COUNT(APICall_glGetObjectBufferivATI);
    CHECKCALL(glGetObjectBufferivATI);
    DO_REAL_CALL(glGetObjectBufferivATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetObjectBufferivATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetObjectBufferivATI);
}

void GLAPIENTRY glGetObjectParameterfvARB(GLhandleARB _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetObjectParameterfvARB);
    _COUNT(APICall_glGetObjectParameterfvARB);
    CHECKCALL(glGetObjectParameterfvARB);
    DO_REAL_CALL(glGetObjectParameterfvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetObjectParameterfvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetObjectParameterfvARB);
}

void GLAPIENTRY glGetObjectParameterivARB(GLhandleARB _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetObjectParameterivARB);
    _COUNT(APICall_glGetObjectParameterivARB);
    CHECKCALL(glGetObjectParameterivARB);
    DO_REAL_CALL(glGetObjectParameterivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetObjectParameterivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGetObjectParameterivARB_SPECIFIC(_p0,_p1,_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetObjectParameterivARB);
}

void GLAPIENTRY glGetOcclusionQueryivNV(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetOcclusionQueryivNV);
    _COUNT(APICall_glGetOcclusionQueryivNV);
    CHECKCALL(glGetOcclusionQueryivNV);
    DO_REAL_CALL(glGetOcclusionQueryivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetOcclusionQueryivNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetOcclusionQueryivNV);
}

void GLAPIENTRY glGetOcclusionQueryuivNV(GLuint _p0, GLenum _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetOcclusionQueryuivNV);
    _COUNT(APICall_glGetOcclusionQueryuivNV);
    CHECKCALL(glGetOcclusionQueryuivNV);
    DO_REAL_CALL(glGetOcclusionQueryuivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetOcclusionQueryuivNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetOcclusionQueryuivNV);
}

void GLAPIENTRY glGetPerfMonitorCounterDataAMD(GLuint _p0, GLenum _p1, GLsizei _p2, GLuint *_p3, GLint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPerfMonitorCounterDataAMD);
    _COUNT(APICall_glGetPerfMonitorCounterDataAMD);
    CHECKCALL(glGetPerfMonitorCounterDataAMD);
    DO_REAL_CALL(glGetPerfMonitorCounterDataAMD(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetPerfMonitorCounterDataAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPerfMonitorCounterDataAMD);
}

void GLAPIENTRY glGetPerfMonitorCounterInfoAMD(GLuint _p0, GLuint _p1, GLenum _p2, void *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPerfMonitorCounterInfoAMD);
    _COUNT(APICall_glGetPerfMonitorCounterInfoAMD);
    CHECKCALL(glGetPerfMonitorCounterInfoAMD);
    DO_REAL_CALL(glGetPerfMonitorCounterInfoAMD(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetPerfMonitorCounterInfoAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPerfMonitorCounterInfoAMD);
}

void GLAPIENTRY glGetPerfMonitorCounterStringAMD(GLuint _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLchar *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPerfMonitorCounterStringAMD);
    _COUNT(APICall_glGetPerfMonitorCounterStringAMD);
    CHECKCALL(glGetPerfMonitorCounterStringAMD);
    DO_REAL_CALL(glGetPerfMonitorCounterStringAMD(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetPerfMonitorCounterStringAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPerfMonitorCounterStringAMD);
}

void GLAPIENTRY glGetPerfMonitorCountersAMD(GLuint _p0, GLint *_p1, GLint *_p2, GLsizei _p3, GLuint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPerfMonitorCountersAMD);
    _COUNT(APICall_glGetPerfMonitorCountersAMD);
    CHECKCALL(glGetPerfMonitorCountersAMD);
    DO_REAL_CALL(glGetPerfMonitorCountersAMD(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetPerfMonitorCountersAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPerfMonitorCountersAMD);
}

void GLAPIENTRY glGetPerfMonitorGroupStringAMD(GLuint _p0, GLsizei _p1, GLsizei *_p2, GLchar *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPerfMonitorGroupStringAMD);
    _COUNT(APICall_glGetPerfMonitorGroupStringAMD);
    CHECKCALL(glGetPerfMonitorGroupStringAMD);
    DO_REAL_CALL(glGetPerfMonitorGroupStringAMD(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetPerfMonitorGroupStringAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPerfMonitorGroupStringAMD);
}

void GLAPIENTRY glGetPerfMonitorGroupsAMD(GLint *_p0, GLsizei _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPerfMonitorGroupsAMD);
    _COUNT(APICall_glGetPerfMonitorGroupsAMD);
    CHECKCALL(glGetPerfMonitorGroupsAMD);
    DO_REAL_CALL(glGetPerfMonitorGroupsAMD(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetPerfMonitorGroupsAMD);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPerfMonitorGroupsAMD);
}

void GLAPIENTRY glGetPixelMapfv(GLenum map, GLfloat *values)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPixelMapfv);
    _COUNT(APICall_glGetPixelMapfv);
    CHECKCALL(glGetPixelMapfv);
    DO_REAL_CALL(glGetPixelMapfv(map,values));
    _W.writeAPICall(APICall_glGetPixelMapfv);
    _W.writeMark("(");
    _W.writeEnum(map);
    _W.writeMark(",");
    _W.writeUnknown(&values);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPixelMapfv);
}

void GLAPIENTRY glGetPixelMapuiv(GLenum map, GLuint *values)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPixelMapuiv);
    _COUNT(APICall_glGetPixelMapuiv);
    CHECKCALL(glGetPixelMapuiv);
    DO_REAL_CALL(glGetPixelMapuiv(map,values));
    _W.writeAPICall(APICall_glGetPixelMapuiv);
    _W.writeMark("(");
    _W.writeEnum(map);
    _W.writeMark(",");
    _W.writeUnknown(&values);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPixelMapuiv);
}

void GLAPIENTRY glGetPixelMapusv(GLenum map, GLushort *values)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPixelMapusv);
    _COUNT(APICall_glGetPixelMapusv);
    CHECKCALL(glGetPixelMapusv);
    DO_REAL_CALL(glGetPixelMapusv(map,values));
    _W.writeAPICall(APICall_glGetPixelMapusv);
    _W.writeMark("(");
    _W.writeEnum(map);
    _W.writeMark(",");
    _W.writeUnknown(&values);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPixelMapusv);
}

void GLAPIENTRY glGetPixelTexGenParameterfvSGIS(GLenum _p0, GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPixelTexGenParameterfvSGIS);
    _COUNT(APICall_glGetPixelTexGenParameterfvSGIS);
    CHECKCALL(glGetPixelTexGenParameterfvSGIS);
    DO_REAL_CALL(glGetPixelTexGenParameterfvSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glGetPixelTexGenParameterfvSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPixelTexGenParameterfvSGIS);
}

void GLAPIENTRY glGetPixelTexGenParameterivSGIS(GLenum _p0, GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPixelTexGenParameterivSGIS);
    _COUNT(APICall_glGetPixelTexGenParameterivSGIS);
    CHECKCALL(glGetPixelTexGenParameterivSGIS);
    DO_REAL_CALL(glGetPixelTexGenParameterivSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glGetPixelTexGenParameterivSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPixelTexGenParameterivSGIS);
}

void GLAPIENTRY glGetPointerIndexedvEXT(GLenum _p0, GLuint _p1, GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPointerIndexedvEXT);
    _COUNT(APICall_glGetPointerIndexedvEXT);
    CHECKCALL(glGetPointerIndexedvEXT);
    DO_REAL_CALL(glGetPointerIndexedvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetPointerIndexedvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPointerIndexedvEXT);
}

void GLAPIENTRY glGetPointerv(GLenum pname, GLvoid **params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPointerv);
    _COUNT(APICall_glGetPointerv);
    CHECKCALL(glGetPointerv);
    DO_REAL_CALL(glGetPointerv(pname,params));
    _W.writeAPICall(APICall_glGetPointerv);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPointerv);
}

void GLAPIENTRY glGetPointervEXT(GLenum _p0, GLvoid **_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPointervEXT);
    _COUNT(APICall_glGetPointervEXT);
    CHECKCALL(glGetPointervEXT);
    DO_REAL_CALL(glGetPointervEXT(_p0,_p1));
    _W.writeAPICall(APICall_glGetPointervEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPointervEXT);
}

void GLAPIENTRY glGetPolygonStipple(GLubyte *mask)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetPolygonStipple);
    _COUNT(APICall_glGetPolygonStipple);
    CHECKCALL(glGetPolygonStipple);
    DO_REAL_CALL(glGetPolygonStipple(mask));
    _W.writeAPICall(APICall_glGetPolygonStipple);
    _W.writeMark("(");
    _W.writeUnknown(&mask);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetPolygonStipple);
}

void GLAPIENTRY glGetProgramEnvParameterIivNV(GLenum _p0, GLuint _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramEnvParameterIivNV);
    _COUNT(APICall_glGetProgramEnvParameterIivNV);
    CHECKCALL(glGetProgramEnvParameterIivNV);
    DO_REAL_CALL(glGetProgramEnvParameterIivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramEnvParameterIivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramEnvParameterIivNV);
}

void GLAPIENTRY glGetProgramEnvParameterIuivNV(GLenum _p0, GLuint _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramEnvParameterIuivNV);
    _COUNT(APICall_glGetProgramEnvParameterIuivNV);
    CHECKCALL(glGetProgramEnvParameterIuivNV);
    DO_REAL_CALL(glGetProgramEnvParameterIuivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramEnvParameterIuivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramEnvParameterIuivNV);
}

void GLAPIENTRY glGetProgramEnvParameterdvARB(GLenum _p0, GLuint _p1, GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramEnvParameterdvARB);
    _COUNT(APICall_glGetProgramEnvParameterdvARB);
    CHECKCALL(glGetProgramEnvParameterdvARB);
    DO_REAL_CALL(glGetProgramEnvParameterdvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramEnvParameterdvARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramEnvParameterdvARB);
}

void GLAPIENTRY glGetProgramEnvParameterfvARB(GLenum _p0, GLuint _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramEnvParameterfvARB);
    _COUNT(APICall_glGetProgramEnvParameterfvARB);
    CHECKCALL(glGetProgramEnvParameterfvARB);
    DO_REAL_CALL(glGetProgramEnvParameterfvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramEnvParameterfvARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramEnvParameterfvARB);
}

void GLAPIENTRY glGetProgramInfoLog(GLuint _p0, GLsizei _p1, GLsizei *_p2, GLchar *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramInfoLog);
    _COUNT(APICall_glGetProgramInfoLog);
    CHECKCALL(glGetProgramInfoLog);
    DO_REAL_CALL(glGetProgramInfoLog(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetProgramInfoLog);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramInfoLog);
}

void GLAPIENTRY glGetProgramLocalParameterIivNV(GLenum _p0, GLuint _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramLocalParameterIivNV);
    _COUNT(APICall_glGetProgramLocalParameterIivNV);
    CHECKCALL(glGetProgramLocalParameterIivNV);
    DO_REAL_CALL(glGetProgramLocalParameterIivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramLocalParameterIivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramLocalParameterIivNV);
}

void GLAPIENTRY glGetProgramLocalParameterIuivNV(GLenum _p0, GLuint _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramLocalParameterIuivNV);
    _COUNT(APICall_glGetProgramLocalParameterIuivNV);
    CHECKCALL(glGetProgramLocalParameterIuivNV);
    DO_REAL_CALL(glGetProgramLocalParameterIuivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramLocalParameterIuivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramLocalParameterIuivNV);
}

void GLAPIENTRY glGetProgramLocalParameterdvARB(GLenum _p0, GLuint _p1, GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramLocalParameterdvARB);
    _COUNT(APICall_glGetProgramLocalParameterdvARB);
    CHECKCALL(glGetProgramLocalParameterdvARB);
    DO_REAL_CALL(glGetProgramLocalParameterdvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramLocalParameterdvARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramLocalParameterdvARB);
}

void GLAPIENTRY glGetProgramLocalParameterfvARB(GLenum _p0, GLuint _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramLocalParameterfvARB);
    _COUNT(APICall_glGetProgramLocalParameterfvARB);
    CHECKCALL(glGetProgramLocalParameterfvARB);
    DO_REAL_CALL(glGetProgramLocalParameterfvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramLocalParameterfvARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramLocalParameterfvARB);
}

void GLAPIENTRY glGetProgramNamedParameterdvNV(GLuint _p0, GLsizei _p1, const GLubyte *_p2, GLdouble *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramNamedParameterdvNV);
    _COUNT(APICall_glGetProgramNamedParameterdvNV);
    CHECKCALL(glGetProgramNamedParameterdvNV);
    DO_REAL_CALL(glGetProgramNamedParameterdvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetProgramNamedParameterdvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramNamedParameterdvNV);
}

void GLAPIENTRY glGetProgramNamedParameterfvNV(GLuint _p0, GLsizei _p1, const GLubyte *_p2, GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramNamedParameterfvNV);
    _COUNT(APICall_glGetProgramNamedParameterfvNV);
    CHECKCALL(glGetProgramNamedParameterfvNV);
    DO_REAL_CALL(glGetProgramNamedParameterfvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetProgramNamedParameterfvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramNamedParameterfvNV);
}

void GLAPIENTRY glGetProgramParameterdvNV(GLenum _p0, GLuint _p1, GLenum _p2, GLdouble *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramParameterdvNV);
    _COUNT(APICall_glGetProgramParameterdvNV);
    CHECKCALL(glGetProgramParameterdvNV);
    DO_REAL_CALL(glGetProgramParameterdvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetProgramParameterdvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramParameterdvNV);
}

void GLAPIENTRY glGetProgramParameterfvNV(GLenum _p0, GLuint _p1, GLenum _p2, GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramParameterfvNV);
    _COUNT(APICall_glGetProgramParameterfvNV);
    CHECKCALL(glGetProgramParameterfvNV);
    DO_REAL_CALL(glGetProgramParameterfvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetProgramParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramParameterfvNV);
}

void GLAPIENTRY glGetProgramStringARB(GLenum _p0, GLenum _p1, GLvoid *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramStringARB);
    _COUNT(APICall_glGetProgramStringARB);
    CHECKCALL(glGetProgramStringARB);
    DO_REAL_CALL(glGetProgramStringARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramStringARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramStringARB);
}

void GLAPIENTRY glGetProgramStringNV(GLuint _p0, GLenum _p1, GLubyte *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramStringNV);
    _COUNT(APICall_glGetProgramStringNV);
    CHECKCALL(glGetProgramStringNV);
    DO_REAL_CALL(glGetProgramStringNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramStringNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramStringNV);
}

void GLAPIENTRY glGetProgramiv(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramiv);
    _COUNT(APICall_glGetProgramiv);
    CHECKCALL(glGetProgramiv);
    DO_REAL_CALL(glGetProgramiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramiv);
}

void GLAPIENTRY glGetProgramivARB(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramivARB);
    _COUNT(APICall_glGetProgramivARB);
    CHECKCALL(glGetProgramivARB);
    DO_REAL_CALL(glGetProgramivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramivARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGetProgramivARB_SPECIFIC(_p0,_p1,_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramivARB);
}

void GLAPIENTRY glGetProgramivNV(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetProgramivNV);
    _COUNT(APICall_glGetProgramivNV);
    CHECKCALL(glGetProgramivNV);
    DO_REAL_CALL(glGetProgramivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetProgramivNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetProgramivNV);
}

void GLAPIENTRY glGetQueryObjecti64vEXT(GLuint _p0, GLenum _p1, GLint64EXT *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetQueryObjecti64vEXT);
    _COUNT(APICall_glGetQueryObjecti64vEXT);
    CHECKCALL(glGetQueryObjecti64vEXT);
    DO_REAL_CALL(glGetQueryObjecti64vEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetQueryObjecti64vEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2, 6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetQueryObjecti64vEXT);
}

void GLAPIENTRY glGetQueryObjectiv(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetQueryObjectiv);
    _COUNT(APICall_glGetQueryObjectiv);
    CHECKCALL(glGetQueryObjectiv);
    DO_REAL_CALL(glGetQueryObjectiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetQueryObjectiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetQueryObjectiv);
}

void GLAPIENTRY glGetQueryObjectivARB(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetQueryObjectivARB);
    _COUNT(APICall_glGetQueryObjectivARB);
    CHECKCALL(glGetQueryObjectivARB);
    DO_REAL_CALL(glGetQueryObjectivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetQueryObjectivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGetQueryObjectivARB_SPECIFIC(_p0,_p1,_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetQueryObjectivARB);
}

void GLAPIENTRY glGetQueryObjectui64vEXT(GLuint _p0, GLenum _p1, GLuint64EXT *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetQueryObjectui64vEXT);
    _COUNT(APICall_glGetQueryObjectui64vEXT);
    CHECKCALL(glGetQueryObjectui64vEXT);
    DO_REAL_CALL(glGetQueryObjectui64vEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetQueryObjectui64vEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2, 6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetQueryObjectui64vEXT);
}

void GLAPIENTRY glGetQueryObjectuiv(GLuint _p0, GLenum _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetQueryObjectuiv);
    _COUNT(APICall_glGetQueryObjectuiv);
    CHECKCALL(glGetQueryObjectuiv);
    DO_REAL_CALL(glGetQueryObjectuiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetQueryObjectuiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetQueryObjectuiv);
}

void GLAPIENTRY glGetQueryObjectuivARB(GLuint _p0, GLenum _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetQueryObjectuivARB);
    _COUNT(APICall_glGetQueryObjectuivARB);
    CHECKCALL(glGetQueryObjectuivARB);
    DO_REAL_CALL(glGetQueryObjectuivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetQueryObjectuivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetQueryObjectuivARB);
}

void GLAPIENTRY glGetQueryiv(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetQueryiv);
    _COUNT(APICall_glGetQueryiv);
    CHECKCALL(glGetQueryiv);
    DO_REAL_CALL(glGetQueryiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetQueryiv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetQueryiv);
}

void GLAPIENTRY glGetQueryivARB(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetQueryivARB);
    _COUNT(APICall_glGetQueryivARB);
    CHECKCALL(glGetQueryivARB);
    DO_REAL_CALL(glGetQueryivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetQueryivARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetQueryivARB);
}

void GLAPIENTRY glGetRenderbufferParameteriv(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetRenderbufferParameteriv);
    _COUNT(APICall_glGetRenderbufferParameteriv);
    CHECKCALL(glGetRenderbufferParameteriv);
    DO_REAL_CALL(glGetRenderbufferParameteriv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetRenderbufferParameteriv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetRenderbufferParameteriv);
}

void GLAPIENTRY glGetRenderbufferParameterivEXT(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetRenderbufferParameterivEXT);
    _COUNT(APICall_glGetRenderbufferParameterivEXT);
    CHECKCALL(glGetRenderbufferParameterivEXT);
    DO_REAL_CALL(glGetRenderbufferParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetRenderbufferParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetRenderbufferParameterivEXT);
}

void GLAPIENTRY glGetSeparableFilter(GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetSeparableFilter);
    _COUNT(APICall_glGetSeparableFilter);
    CHECKCALL(glGetSeparableFilter);
    DO_REAL_CALL(glGetSeparableFilter(target,format,type,row,column,span));
    _W.writeAPICall(APICall_glGetSeparableFilter);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&row);
    _W.writeMark(",");
    _W.writeUnknown(&column);
    _W.writeMark(",");
    _W.writeUnknown(&span);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetSeparableFilter);
}

void GLAPIENTRY glGetSeparableFilterEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLvoid *_p3, GLvoid *_p4, GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetSeparableFilterEXT);
    _COUNT(APICall_glGetSeparableFilterEXT);
    CHECKCALL(glGetSeparableFilterEXT);
    DO_REAL_CALL(glGetSeparableFilterEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glGetSeparableFilterEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetSeparableFilterEXT);
}

void GLAPIENTRY glGetShaderInfoLog(GLuint _p0, GLsizei _p1, GLsizei *_p2, GLchar *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetShaderInfoLog);
    _COUNT(APICall_glGetShaderInfoLog);
    CHECKCALL(glGetShaderInfoLog);
    DO_REAL_CALL(glGetShaderInfoLog(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetShaderInfoLog);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetShaderInfoLog);
}

void GLAPIENTRY glGetShaderSource(GLuint _p0, GLsizei _p1, GLsizei *_p2, GLchar *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetShaderSource);
    _COUNT(APICall_glGetShaderSource);
    CHECKCALL(glGetShaderSource);
    DO_REAL_CALL(glGetShaderSource(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetShaderSource);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetShaderSource);
}

void GLAPIENTRY glGetShaderSourceARB(GLhandleARB _p0, GLsizei _p1, GLsizei *_p2, GLcharARB *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetShaderSourceARB);
    _COUNT(APICall_glGetShaderSourceARB);
    CHECKCALL(glGetShaderSourceARB);
    DO_REAL_CALL(glGetShaderSourceARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetShaderSourceARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetShaderSourceARB);
}

void GLAPIENTRY glGetShaderiv(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetShaderiv);
    _COUNT(APICall_glGetShaderiv);
    CHECKCALL(glGetShaderiv);
    DO_REAL_CALL(glGetShaderiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetShaderiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetShaderiv);
}

void GLAPIENTRY glGetSharpenTexFuncSGIS(GLenum _p0, GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetSharpenTexFuncSGIS);
    _COUNT(APICall_glGetSharpenTexFuncSGIS);
    CHECKCALL(glGetSharpenTexFuncSGIS);
    DO_REAL_CALL(glGetSharpenTexFuncSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glGetSharpenTexFuncSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetSharpenTexFuncSGIS);
}

const GLubyte * GLAPIENTRY glGetString(GLenum name)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetString);
    _COUNT(APICall_glGetString);
    // Calling SPECIFIC function instead orginal (assumed that SPECIFIC will call original)
    return glGetString_SPECIFIC(name);
    _W.writeAPICall(APICall_glGetString);
    _W.writeMark("(");
}

const GLubyte * GLAPIENTRY glGetStringi(GLenum _p0, GLuint _p1)
{
    const GLubyte *_result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetStringi);
    _COUNT(APICall_glGetStringi);
    CHECKCALL(glGetStringi);
    _result = DO_REAL_CALL(glGetStringi(_p0,_p1));
    _W.writeAPICall(APICall_glGetStringi);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetStringi);
    return _result;
}

void GLAPIENTRY glGetTexBumpParameterfvATI(GLenum _p0, GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexBumpParameterfvATI);
    _COUNT(APICall_glGetTexBumpParameterfvATI);
    CHECKCALL(glGetTexBumpParameterfvATI);
    DO_REAL_CALL(glGetTexBumpParameterfvATI(_p0,_p1));
    _W.writeAPICall(APICall_glGetTexBumpParameterfvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexBumpParameterfvATI);
}

void GLAPIENTRY glGetTexBumpParameterivATI(GLenum _p0, GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexBumpParameterivATI);
    _COUNT(APICall_glGetTexBumpParameterivATI);
    CHECKCALL(glGetTexBumpParameterivATI);
    DO_REAL_CALL(glGetTexBumpParameterivATI(_p0,_p1));
    _W.writeAPICall(APICall_glGetTexBumpParameterivATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexBumpParameterivATI);
}

void GLAPIENTRY glGetTexEnvfv(GLenum target, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexEnvfv);
    _COUNT(APICall_glGetTexEnvfv);
    CHECKCALL(glGetTexEnvfv);
    DO_REAL_CALL(glGetTexEnvfv(target,pname,params));
    _W.writeAPICall(APICall_glGetTexEnvfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexEnvfv);
}

void GLAPIENTRY glGetTexEnviv(GLenum target, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexEnviv);
    _COUNT(APICall_glGetTexEnviv);
    CHECKCALL(glGetTexEnviv);
    DO_REAL_CALL(glGetTexEnviv(target,pname,params));
    _W.writeAPICall(APICall_glGetTexEnviv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexEnviv);
}

void GLAPIENTRY glGetTexFilterFuncSGIS(GLenum _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexFilterFuncSGIS);
    _COUNT(APICall_glGetTexFilterFuncSGIS);
    CHECKCALL(glGetTexFilterFuncSGIS);
    DO_REAL_CALL(glGetTexFilterFuncSGIS(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetTexFilterFuncSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexFilterFuncSGIS);
}

void GLAPIENTRY glGetTexGendv(GLenum coord, GLenum pname, GLdouble *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexGendv);
    _COUNT(APICall_glGetTexGendv);
    CHECKCALL(glGetTexGendv);
    DO_REAL_CALL(glGetTexGendv(coord,pname,params));
    _W.writeAPICall(APICall_glGetTexGendv);
    _W.writeMark("(");
    _W.writeEnum(coord);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexGendv);
}

void GLAPIENTRY glGetTexGenfv(GLenum coord, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexGenfv);
    _COUNT(APICall_glGetTexGenfv);
    CHECKCALL(glGetTexGenfv);
    DO_REAL_CALL(glGetTexGenfv(coord,pname,params));
    _W.writeAPICall(APICall_glGetTexGenfv);
    _W.writeMark("(");
    _W.writeEnum(coord);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexGenfv);
}

void GLAPIENTRY glGetTexGeniv(GLenum coord, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexGeniv);
    _COUNT(APICall_glGetTexGeniv);
    CHECKCALL(glGetTexGeniv);
    DO_REAL_CALL(glGetTexGeniv(coord,pname,params));
    _W.writeAPICall(APICall_glGetTexGeniv);
    _W.writeMark("(");
    _W.writeEnum(coord);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexGeniv);
}

void GLAPIENTRY glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexImage);
    _COUNT(APICall_glGetTexImage);
    CHECKCALL(glGetTexImage);
    DO_REAL_CALL(glGetTexImage(target,level,format,type,pixels));
    _W.writeAPICall(APICall_glGetTexImage);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&pixels);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexImage);
}

void GLAPIENTRY glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexLevelParameterfv);
    _COUNT(APICall_glGetTexLevelParameterfv);
    CHECKCALL(glGetTexLevelParameterfv);
    DO_REAL_CALL(glGetTexLevelParameterfv(target,level,pname,params));
    _W.writeAPICall(APICall_glGetTexLevelParameterfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexLevelParameterfv);
}

void GLAPIENTRY glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexLevelParameteriv);
    _COUNT(APICall_glGetTexLevelParameteriv);
    CHECKCALL(glGetTexLevelParameteriv);
    DO_REAL_CALL(glGetTexLevelParameteriv(target,level,pname,params));
    _W.writeAPICall(APICall_glGetTexLevelParameteriv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGetTexLevelParameteriv_SPECIFIC(target,level,pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexLevelParameteriv);
}

void GLAPIENTRY glGetTexParameterIiv(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexParameterIiv);
    _COUNT(APICall_glGetTexParameterIiv);
    CHECKCALL(glGetTexParameterIiv);
    DO_REAL_CALL(glGetTexParameterIiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetTexParameterIiv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexParameterIiv);
}

void GLAPIENTRY glGetTexParameterIivEXT(GLenum _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexParameterIivEXT);
    _COUNT(APICall_glGetTexParameterIivEXT);
    CHECKCALL(glGetTexParameterIivEXT);
    DO_REAL_CALL(glGetTexParameterIivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetTexParameterIivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexParameterIivEXT);
}

void GLAPIENTRY glGetTexParameterIuiv(GLenum _p0, GLenum _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexParameterIuiv);
    _COUNT(APICall_glGetTexParameterIuiv);
    CHECKCALL(glGetTexParameterIuiv);
    DO_REAL_CALL(glGetTexParameterIuiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetTexParameterIuiv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexParameterIuiv);
}

void GLAPIENTRY glGetTexParameterIuivEXT(GLenum _p0, GLenum _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexParameterIuivEXT);
    _COUNT(APICall_glGetTexParameterIuivEXT);
    CHECKCALL(glGetTexParameterIuivEXT);
    DO_REAL_CALL(glGetTexParameterIuivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetTexParameterIuivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexParameterIuivEXT);
}

void GLAPIENTRY glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexParameterfv);
    _COUNT(APICall_glGetTexParameterfv);
    CHECKCALL(glGetTexParameterfv);
    DO_REAL_CALL(glGetTexParameterfv(target,pname,params));
    _W.writeAPICall(APICall_glGetTexParameterfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexParameterfv);
}

void GLAPIENTRY glGetTexParameteriv(GLenum target, GLenum pname, GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTexParameteriv);
    _COUNT(APICall_glGetTexParameteriv);
    CHECKCALL(glGetTexParameteriv);
    DO_REAL_CALL(glGetTexParameteriv(target,pname,params));
    _W.writeAPICall(APICall_glGetTexParameteriv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTexParameteriv);
}

void GLAPIENTRY glGetTextureImageEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLenum _p4, GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTextureImageEXT);
    _COUNT(APICall_glGetTextureImageEXT);
    CHECKCALL(glGetTextureImageEXT);
    DO_REAL_CALL(glGetTextureImageEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glGetTextureImageEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTextureImageEXT);
}

void GLAPIENTRY glGetTextureLevelParameterfvEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTextureLevelParameterfvEXT);
    _COUNT(APICall_glGetTextureLevelParameterfvEXT);
    CHECKCALL(glGetTextureLevelParameterfvEXT);
    DO_REAL_CALL(glGetTextureLevelParameterfvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetTextureLevelParameterfvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTextureLevelParameterfvEXT);
}

void GLAPIENTRY glGetTextureLevelParameterivEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTextureLevelParameterivEXT);
    _COUNT(APICall_glGetTextureLevelParameterivEXT);
    CHECKCALL(glGetTextureLevelParameterivEXT);
    DO_REAL_CALL(glGetTextureLevelParameterivEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glGetTextureLevelParameterivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTextureLevelParameterivEXT);
}

void GLAPIENTRY glGetTextureParameterIivEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTextureParameterIivEXT);
    _COUNT(APICall_glGetTextureParameterIivEXT);
    CHECKCALL(glGetTextureParameterIivEXT);
    DO_REAL_CALL(glGetTextureParameterIivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetTextureParameterIivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTextureParameterIivEXT);
}

void GLAPIENTRY glGetTextureParameterIuivEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTextureParameterIuivEXT);
    _COUNT(APICall_glGetTextureParameterIuivEXT);
    CHECKCALL(glGetTextureParameterIuivEXT);
    DO_REAL_CALL(glGetTextureParameterIuivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetTextureParameterIuivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTextureParameterIuivEXT);
}

void GLAPIENTRY glGetTextureParameterfvEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTextureParameterfvEXT);
    _COUNT(APICall_glGetTextureParameterfvEXT);
    CHECKCALL(glGetTextureParameterfvEXT);
    DO_REAL_CALL(glGetTextureParameterfvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetTextureParameterfvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTextureParameterfvEXT);
}

void GLAPIENTRY glGetTextureParameterivEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTextureParameterivEXT);
    _COUNT(APICall_glGetTextureParameterivEXT);
    CHECKCALL(glGetTextureParameterivEXT);
    DO_REAL_CALL(glGetTextureParameterivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetTextureParameterivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTextureParameterivEXT);
}

void GLAPIENTRY glGetTrackMatrixivNV(GLenum _p0, GLuint _p1, GLenum _p2, GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTrackMatrixivNV);
    _COUNT(APICall_glGetTrackMatrixivNV);
    CHECKCALL(glGetTrackMatrixivNV);
    DO_REAL_CALL(glGetTrackMatrixivNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetTrackMatrixivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTrackMatrixivNV);
}

void GLAPIENTRY glGetTransformFeedbackVarying(GLuint _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLsizei *_p4, GLenum *_p5, GLchar *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTransformFeedbackVarying);
    _COUNT(APICall_glGetTransformFeedbackVarying);
    CHECKCALL(glGetTransformFeedbackVarying);
    DO_REAL_CALL(glGetTransformFeedbackVarying(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glGetTransformFeedbackVarying);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTransformFeedbackVarying);
}

void GLAPIENTRY glGetTransformFeedbackVaryingEXT(GLuint _p0, GLuint _p1, GLsizei _p2, GLsizei *_p3, GLsizei *_p4, GLenum *_p5, GLchar *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTransformFeedbackVaryingEXT);
    _COUNT(APICall_glGetTransformFeedbackVaryingEXT);
    CHECKCALL(glGetTransformFeedbackVaryingEXT);
    DO_REAL_CALL(glGetTransformFeedbackVaryingEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glGetTransformFeedbackVaryingEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTransformFeedbackVaryingEXT);
}

void GLAPIENTRY glGetTransformFeedbackVaryingNV(GLuint _p0, GLuint _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetTransformFeedbackVaryingNV);
    _COUNT(APICall_glGetTransformFeedbackVaryingNV);
    CHECKCALL(glGetTransformFeedbackVaryingNV);
    DO_REAL_CALL(glGetTransformFeedbackVaryingNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetTransformFeedbackVaryingNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetTransformFeedbackVaryingNV);
}

GLuint GLAPIENTRY glGetUniformBlockIndex(GLuint _p0, const GLchar *_p1)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformBlockIndex);
    _COUNT(APICall_glGetUniformBlockIndex);
    CHECKCALL(glGetUniformBlockIndex);
    _result = DO_REAL_CALL(glGetUniformBlockIndex(_p0,_p1));
    _W.writeAPICall(APICall_glGetUniformBlockIndex);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformBlockIndex);
    return _result;
}

GLint GLAPIENTRY glGetUniformBufferSizeEXT(GLuint _p0, GLint _p1)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformBufferSizeEXT);
    _COUNT(APICall_glGetUniformBufferSizeEXT);
    CHECKCALL(glGetUniformBufferSizeEXT);
    _result = DO_REAL_CALL(glGetUniformBufferSizeEXT(_p0,_p1));
    _W.writeAPICall(APICall_glGetUniformBufferSizeEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformBufferSizeEXT);
    return _result;
}

void GLAPIENTRY glGetUniformIndices(GLuint _p0, GLsizei _p1, const GLchar **_p2, GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformIndices);
    _COUNT(APICall_glGetUniformIndices);
    CHECKCALL(glGetUniformIndices);
    DO_REAL_CALL(glGetUniformIndices(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glGetUniformIndices);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformIndices);
}

GLint GLAPIENTRY glGetUniformLocation(GLuint _p0, const GLchar *_p1)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformLocation);
    _COUNT(APICall_glGetUniformLocation);
    CHECKCALL(glGetUniformLocation);
    _result = DO_REAL_CALL(glGetUniformLocation(_p0,_p1));
    _W.writeAPICall(APICall_glGetUniformLocation);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformLocation);
    return _result;
}

GLint GLAPIENTRY glGetUniformLocationARB(GLhandleARB _p0, const GLcharARB *_p1)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformLocationARB);
    _COUNT(APICall_glGetUniformLocationARB);
    CHECKCALL(glGetUniformLocationARB);
    _result = DO_REAL_CALL(glGetUniformLocationARB(_p0,_p1));
    _W.writeAPICall(APICall_glGetUniformLocationARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glGetUniformLocationARB_SPECIFIC(_p0,_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformLocationARB);
    return _result;
}

GLintptr GLAPIENTRY glGetUniformOffsetEXT(GLuint _p0, GLint _p1)
{
    GLintptr _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformOffsetEXT);
    _COUNT(APICall_glGetUniformOffsetEXT);
    CHECKCALL(glGetUniformOffsetEXT);
    _result = DO_REAL_CALL(glGetUniformOffsetEXT(_p0,_p1));
    _W.writeAPICall(APICall_glGetUniformOffsetEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformOffsetEXT);
    return _result;
}

void GLAPIENTRY glGetUniformfv(GLuint _p0, GLint _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformfv);
    _COUNT(APICall_glGetUniformfv);
    CHECKCALL(glGetUniformfv);
    DO_REAL_CALL(glGetUniformfv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetUniformfv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformfv);
}

void GLAPIENTRY glGetUniformfvARB(GLhandleARB _p0, GLint _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformfvARB);
    _COUNT(APICall_glGetUniformfvARB);
    CHECKCALL(glGetUniformfvARB);
    DO_REAL_CALL(glGetUniformfvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetUniformfvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformfvARB);
}

void GLAPIENTRY glGetUniformiv(GLuint _p0, GLint _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformiv);
    _COUNT(APICall_glGetUniformiv);
    CHECKCALL(glGetUniformiv);
    DO_REAL_CALL(glGetUniformiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetUniformiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformiv);
}

void GLAPIENTRY glGetUniformivARB(GLhandleARB _p0, GLint _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformivARB);
    _COUNT(APICall_glGetUniformivARB);
    CHECKCALL(glGetUniformivARB);
    DO_REAL_CALL(glGetUniformivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetUniformivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformivARB);
}

void GLAPIENTRY glGetUniformuiv(GLuint _p0, GLint _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformuiv);
    _COUNT(APICall_glGetUniformuiv);
    CHECKCALL(glGetUniformuiv);
    DO_REAL_CALL(glGetUniformuiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetUniformuiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformuiv);
}

void GLAPIENTRY glGetUniformuivEXT(GLuint _p0, GLint _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetUniformuivEXT);
    _COUNT(APICall_glGetUniformuivEXT);
    CHECKCALL(glGetUniformuivEXT);
    DO_REAL_CALL(glGetUniformuivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetUniformuivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetUniformuivEXT);
}

void GLAPIENTRY glGetVariantArrayObjectfvATI(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVariantArrayObjectfvATI);
    _COUNT(APICall_glGetVariantArrayObjectfvATI);
    CHECKCALL(glGetVariantArrayObjectfvATI);
    DO_REAL_CALL(glGetVariantArrayObjectfvATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVariantArrayObjectfvATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVariantArrayObjectfvATI);
}

void GLAPIENTRY glGetVariantArrayObjectivATI(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVariantArrayObjectivATI);
    _COUNT(APICall_glGetVariantArrayObjectivATI);
    CHECKCALL(glGetVariantArrayObjectivATI);
    DO_REAL_CALL(glGetVariantArrayObjectivATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVariantArrayObjectivATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVariantArrayObjectivATI);
}

void GLAPIENTRY glGetVariantBooleanvEXT(GLuint _p0, GLenum _p1, GLboolean *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVariantBooleanvEXT);
    _COUNT(APICall_glGetVariantBooleanvEXT);
    CHECKCALL(glGetVariantBooleanvEXT);
    DO_REAL_CALL(glGetVariantBooleanvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVariantBooleanvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVariantBooleanvEXT);
}

void GLAPIENTRY glGetVariantFloatvEXT(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVariantFloatvEXT);
    _COUNT(APICall_glGetVariantFloatvEXT);
    CHECKCALL(glGetVariantFloatvEXT);
    DO_REAL_CALL(glGetVariantFloatvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVariantFloatvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVariantFloatvEXT);
}

void GLAPIENTRY glGetVariantIntegervEXT(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVariantIntegervEXT);
    _COUNT(APICall_glGetVariantIntegervEXT);
    CHECKCALL(glGetVariantIntegervEXT);
    DO_REAL_CALL(glGetVariantIntegervEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVariantIntegervEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVariantIntegervEXT);
}

void GLAPIENTRY glGetVariantPointervEXT(GLuint _p0, GLenum _p1, GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVariantPointervEXT);
    _COUNT(APICall_glGetVariantPointervEXT);
    CHECKCALL(glGetVariantPointervEXT);
    DO_REAL_CALL(glGetVariantPointervEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVariantPointervEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVariantPointervEXT);
}

GLint GLAPIENTRY glGetVaryingLocationNV(GLuint _p0, const GLchar *_p1)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVaryingLocationNV);
    _COUNT(APICall_glGetVaryingLocationNV);
    CHECKCALL(glGetVaryingLocationNV);
    _result = DO_REAL_CALL(glGetVaryingLocationNV(_p0,_p1));
    _W.writeAPICall(APICall_glGetVaryingLocationNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVaryingLocationNV);
    return _result;
}

void GLAPIENTRY glGetVertexAttribArrayObjectfvATI(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribArrayObjectfvATI);
    _COUNT(APICall_glGetVertexAttribArrayObjectfvATI);
    CHECKCALL(glGetVertexAttribArrayObjectfvATI);
    DO_REAL_CALL(glGetVertexAttribArrayObjectfvATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribArrayObjectfvATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribArrayObjectfvATI);
}

void GLAPIENTRY glGetVertexAttribArrayObjectivATI(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribArrayObjectivATI);
    _COUNT(APICall_glGetVertexAttribArrayObjectivATI);
    CHECKCALL(glGetVertexAttribArrayObjectivATI);
    DO_REAL_CALL(glGetVertexAttribArrayObjectivATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribArrayObjectivATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribArrayObjectivATI);
}

void GLAPIENTRY glGetVertexAttribIiv(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribIiv);
    _COUNT(APICall_glGetVertexAttribIiv);
    CHECKCALL(glGetVertexAttribIiv);
    DO_REAL_CALL(glGetVertexAttribIiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribIiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribIiv);
}

void GLAPIENTRY glGetVertexAttribIivEXT(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribIivEXT);
    _COUNT(APICall_glGetVertexAttribIivEXT);
    CHECKCALL(glGetVertexAttribIivEXT);
    DO_REAL_CALL(glGetVertexAttribIivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribIivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribIivEXT);
}

void GLAPIENTRY glGetVertexAttribIuiv(GLuint _p0, GLenum _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribIuiv);
    _COUNT(APICall_glGetVertexAttribIuiv);
    CHECKCALL(glGetVertexAttribIuiv);
    DO_REAL_CALL(glGetVertexAttribIuiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribIuiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribIuiv);
}

void GLAPIENTRY glGetVertexAttribIuivEXT(GLuint _p0, GLenum _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribIuivEXT);
    _COUNT(APICall_glGetVertexAttribIuivEXT);
    CHECKCALL(glGetVertexAttribIuivEXT);
    DO_REAL_CALL(glGetVertexAttribIuivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribIuivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribIuivEXT);
}

void GLAPIENTRY glGetVertexAttribPointerv(GLuint _p0, GLenum _p1, GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribPointerv);
    _COUNT(APICall_glGetVertexAttribPointerv);
    CHECKCALL(glGetVertexAttribPointerv);
    DO_REAL_CALL(glGetVertexAttribPointerv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribPointerv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribPointerv);
}

void GLAPIENTRY glGetVertexAttribPointervARB(GLuint _p0, GLenum _p1, GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribPointervARB);
    _COUNT(APICall_glGetVertexAttribPointervARB);
    CHECKCALL(glGetVertexAttribPointervARB);
    DO_REAL_CALL(glGetVertexAttribPointervARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribPointervARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribPointervARB);
}

void GLAPIENTRY glGetVertexAttribPointervNV(GLuint _p0, GLenum _p1, GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribPointervNV);
    _COUNT(APICall_glGetVertexAttribPointervNV);
    CHECKCALL(glGetVertexAttribPointervNV);
    DO_REAL_CALL(glGetVertexAttribPointervNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribPointervNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribPointervNV);
}

void GLAPIENTRY glGetVertexAttribdv(GLuint _p0, GLenum _p1, GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribdv);
    _COUNT(APICall_glGetVertexAttribdv);
    CHECKCALL(glGetVertexAttribdv);
    DO_REAL_CALL(glGetVertexAttribdv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribdv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribdv);
}

void GLAPIENTRY glGetVertexAttribdvARB(GLuint _p0, GLenum _p1, GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribdvARB);
    _COUNT(APICall_glGetVertexAttribdvARB);
    CHECKCALL(glGetVertexAttribdvARB);
    DO_REAL_CALL(glGetVertexAttribdvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribdvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribdvARB);
}

void GLAPIENTRY glGetVertexAttribdvNV(GLuint _p0, GLenum _p1, GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribdvNV);
    _COUNT(APICall_glGetVertexAttribdvNV);
    CHECKCALL(glGetVertexAttribdvNV);
    DO_REAL_CALL(glGetVertexAttribdvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribdvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribdvNV);
}

void GLAPIENTRY glGetVertexAttribfv(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribfv);
    _COUNT(APICall_glGetVertexAttribfv);
    CHECKCALL(glGetVertexAttribfv);
    DO_REAL_CALL(glGetVertexAttribfv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribfv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribfv);
}

void GLAPIENTRY glGetVertexAttribfvARB(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribfvARB);
    _COUNT(APICall_glGetVertexAttribfvARB);
    CHECKCALL(glGetVertexAttribfvARB);
    DO_REAL_CALL(glGetVertexAttribfvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribfvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribfvARB);
}

void GLAPIENTRY glGetVertexAttribfvNV(GLuint _p0, GLenum _p1, GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribfvNV);
    _COUNT(APICall_glGetVertexAttribfvNV);
    CHECKCALL(glGetVertexAttribfvNV);
    DO_REAL_CALL(glGetVertexAttribfvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribfvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribfvNV);
}

void GLAPIENTRY glGetVertexAttribiv(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribiv);
    _COUNT(APICall_glGetVertexAttribiv);
    CHECKCALL(glGetVertexAttribiv);
    DO_REAL_CALL(glGetVertexAttribiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribiv);
}

void GLAPIENTRY glGetVertexAttribivARB(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribivARB);
    _COUNT(APICall_glGetVertexAttribivARB);
    CHECKCALL(glGetVertexAttribivARB);
    DO_REAL_CALL(glGetVertexAttribivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribivARB);
}

void GLAPIENTRY glGetVertexAttribivNV(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVertexAttribivNV);
    _COUNT(APICall_glGetVertexAttribivNV);
    CHECKCALL(glGetVertexAttribivNV);
    DO_REAL_CALL(glGetVertexAttribivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVertexAttribivNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVertexAttribivNV);
}

void GLAPIENTRY glGetVideoi64vNV(GLuint _p0, GLenum _p1, GLint64EXT *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVideoi64vNV);
    _COUNT(APICall_glGetVideoi64vNV);
    CHECKCALL(glGetVideoi64vNV);
    DO_REAL_CALL(glGetVideoi64vNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVideoi64vNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2, 6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVideoi64vNV);
}

void GLAPIENTRY glGetVideoivNV(GLuint _p0, GLenum _p1, GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVideoivNV);
    _COUNT(APICall_glGetVideoivNV);
    CHECKCALL(glGetVideoivNV);
    DO_REAL_CALL(glGetVideoivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVideoivNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVideoivNV);
}

void GLAPIENTRY glGetVideoui64vNV(GLuint _p0, GLenum _p1, GLuint64EXT *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVideoui64vNV);
    _COUNT(APICall_glGetVideoui64vNV);
    CHECKCALL(glGetVideoui64vNV);
    DO_REAL_CALL(glGetVideoui64vNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVideoui64vNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2, 6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVideoui64vNV);
}

void GLAPIENTRY glGetVideouivNV(GLuint _p0, GLenum _p1, GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glGetVideouivNV);
    _COUNT(APICall_glGetVideouivNV);
    CHECKCALL(glGetVideouivNV);
    DO_REAL_CALL(glGetVideouivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glGetVideouivNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glGetVideouivNV);
}

void GLAPIENTRY glHint(GLenum target, GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glHint);
    _COUNT(APICall_glHint);
    CHECKCALL(glHint);
    DO_REAL_CALL(glHint(target,mode));
    _W.writeAPICall(APICall_glHint);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glHint);
}

void GLAPIENTRY glHintPGI(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glHintPGI);
    _COUNT(APICall_glHintPGI);
    CHECKCALL(glHintPGI);
    DO_REAL_CALL(glHintPGI(_p0,_p1));
    _W.writeAPICall(APICall_glHintPGI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glHintPGI);
}

void GLAPIENTRY glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glHistogram);
    _COUNT(APICall_glHistogram);
    CHECKCALL(glHistogram);
    DO_REAL_CALL(glHistogram(target,width,internalformat,sink));
    _W.writeAPICall(APICall_glHistogram);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(sink);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glHistogram);
}

void GLAPIENTRY glHistogramEXT(GLenum _p0, GLsizei _p1, GLenum _p2, GLboolean _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glHistogramEXT);
    _COUNT(APICall_glHistogramEXT);
    CHECKCALL(glHistogramEXT);
    DO_REAL_CALL(glHistogramEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glHistogramEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glHistogramEXT);
}

void GLAPIENTRY glIglooInterfaceSGIX(GLenum _p0, const GLvoid *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIglooInterfaceSGIX);
    _COUNT(APICall_glIglooInterfaceSGIX);
    CHECKCALL(glIglooInterfaceSGIX);
    DO_REAL_CALL(glIglooInterfaceSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glIglooInterfaceSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIglooInterfaceSGIX);
}

void GLAPIENTRY glImageTransformParameterfHP(GLenum _p0, GLenum _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glImageTransformParameterfHP);
    _COUNT(APICall_glImageTransformParameterfHP);
    CHECKCALL(glImageTransformParameterfHP);
    DO_REAL_CALL(glImageTransformParameterfHP(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glImageTransformParameterfHP);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glImageTransformParameterfHP);
}

void GLAPIENTRY glImageTransformParameterfvHP(GLenum _p0, GLenum _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glImageTransformParameterfvHP);
    _COUNT(APICall_glImageTransformParameterfvHP);
    CHECKCALL(glImageTransformParameterfvHP);
    DO_REAL_CALL(glImageTransformParameterfvHP(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glImageTransformParameterfvHP);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glImageTransformParameterfvHP);
}

void GLAPIENTRY glImageTransformParameteriHP(GLenum _p0, GLenum _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glImageTransformParameteriHP);
    _COUNT(APICall_glImageTransformParameteriHP);
    CHECKCALL(glImageTransformParameteriHP);
    DO_REAL_CALL(glImageTransformParameteriHP(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glImageTransformParameteriHP);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glImageTransformParameteriHP);
}

void GLAPIENTRY glImageTransformParameterivHP(GLenum _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glImageTransformParameterivHP);
    _COUNT(APICall_glImageTransformParameterivHP);
    CHECKCALL(glImageTransformParameterivHP);
    DO_REAL_CALL(glImageTransformParameterivHP(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glImageTransformParameterivHP);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glImageTransformParameterivHP);
}

void GLAPIENTRY glIndexFuncEXT(GLenum _p0, GLclampf _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexFuncEXT);
    _COUNT(APICall_glIndexFuncEXT);
    CHECKCALL(glIndexFuncEXT);
    DO_REAL_CALL(glIndexFuncEXT(_p0,_p1));
    _W.writeAPICall(APICall_glIndexFuncEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexFuncEXT);
}

void GLAPIENTRY glIndexMask(GLuint mask)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexMask);
    _COUNT(APICall_glIndexMask);
    CHECKCALL(glIndexMask);
    DO_REAL_CALL(glIndexMask(mask));
    _W.writeAPICall(APICall_glIndexMask);
    _W.writeMark("(");
    _W.write(mask);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexMask);
}

void GLAPIENTRY glIndexMaterialEXT(GLenum _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexMaterialEXT);
    _COUNT(APICall_glIndexMaterialEXT);
    CHECKCALL(glIndexMaterialEXT);
    DO_REAL_CALL(glIndexMaterialEXT(_p0,_p1));
    _W.writeAPICall(APICall_glIndexMaterialEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexMaterialEXT);
}

void GLAPIENTRY glIndexPointer(GLenum type, GLsizei stride, const GLvoid *ptr)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexPointer);
    _COUNT(APICall_glIndexPointer);
    CHECKCALL(glIndexPointer);
    DO_REAL_CALL(glIndexPointer(type,stride,ptr));
    _W.writeAPICall(APICall_glIndexPointer);
    _W.writeMark("(");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.write(stride);
    _W.writeMark(",");
    _W.writeUnknown(&ptr);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexPointer);
}

void GLAPIENTRY glIndexPointerEXT(GLenum _p0, GLsizei _p1, GLsizei _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexPointerEXT);
    _COUNT(APICall_glIndexPointerEXT);
    CHECKCALL(glIndexPointerEXT);
    DO_REAL_CALL(glIndexPointerEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glIndexPointerEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexPointerEXT);
}

void GLAPIENTRY glIndexd(GLdouble c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexd);
    _COUNT(APICall_glIndexd);
    CHECKCALL(glIndexd);
    DO_REAL_CALL(glIndexd(c));
    _W.writeAPICall(APICall_glIndexd);
    _W.writeMark("(");
    _W.write(c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexd);
}

void GLAPIENTRY glIndexdv(const GLdouble *c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexdv);
    _COUNT(APICall_glIndexdv);
    CHECKCALL(glIndexdv);
    DO_REAL_CALL(glIndexdv(c));
    _W.writeAPICall(APICall_glIndexdv);
    _W.writeMark("(");
    _W.writeUnknown(&c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexdv);
}

void GLAPIENTRY glIndexf(GLfloat c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexf);
    _COUNT(APICall_glIndexf);
    CHECKCALL(glIndexf);
    DO_REAL_CALL(glIndexf(c));
    _W.writeAPICall(APICall_glIndexf);
    _W.writeMark("(");
    _W.write(c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexf);
}

void GLAPIENTRY glIndexfv(const GLfloat *c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexfv);
    _COUNT(APICall_glIndexfv);
    CHECKCALL(glIndexfv);
    DO_REAL_CALL(glIndexfv(c));
    _W.writeAPICall(APICall_glIndexfv);
    _W.writeMark("(");
    _W.writeUnknown(&c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexfv);
}

void GLAPIENTRY glIndexi(GLint c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexi);
    _COUNT(APICall_glIndexi);
    CHECKCALL(glIndexi);
    DO_REAL_CALL(glIndexi(c));
    _W.writeAPICall(APICall_glIndexi);
    _W.writeMark("(");
    _W.write(c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexi);
}

void GLAPIENTRY glIndexiv(const GLint *c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexiv);
    _COUNT(APICall_glIndexiv);
    CHECKCALL(glIndexiv);
    DO_REAL_CALL(glIndexiv(c));
    _W.writeAPICall(APICall_glIndexiv);
    _W.writeMark("(");
    _W.writeUnknown(&c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexiv);
}

void GLAPIENTRY glIndexs(GLshort c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexs);
    _COUNT(APICall_glIndexs);
    CHECKCALL(glIndexs);
    DO_REAL_CALL(glIndexs(c));
    _W.writeAPICall(APICall_glIndexs);
    _W.writeMark("(");
    _W.write(c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexs);
}

void GLAPIENTRY glIndexsv(const GLshort *c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexsv);
    _COUNT(APICall_glIndexsv);
    CHECKCALL(glIndexsv);
    DO_REAL_CALL(glIndexsv(c));
    _W.writeAPICall(APICall_glIndexsv);
    _W.writeMark("(");
    _W.writeUnknown(&c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexsv);
}

void GLAPIENTRY glIndexub(GLubyte c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexub);
    _COUNT(APICall_glIndexub);
    CHECKCALL(glIndexub);
    DO_REAL_CALL(glIndexub(c));
    _W.writeAPICall(APICall_glIndexub);
    _W.writeMark("(");
    _W.write(c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexub);
}

void GLAPIENTRY glIndexubv(const GLubyte *c)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIndexubv);
    _COUNT(APICall_glIndexubv);
    CHECKCALL(glIndexubv);
    DO_REAL_CALL(glIndexubv(c));
    _W.writeAPICall(APICall_glIndexubv);
    _W.writeMark("(");
    _W.writeUnknown(&c);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIndexubv);
}

void GLAPIENTRY glInitNames()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glInitNames);
    _COUNT(APICall_glInitNames);
    CHECKCALL(glInitNames);
    DO_REAL_CALL(glInitNames());
    _W.writeAPICall(APICall_glInitNames);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glInitNames);
}

void GLAPIENTRY glInsertComponentEXT(GLuint _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glInsertComponentEXT);
    _COUNT(APICall_glInsertComponentEXT);
    CHECKCALL(glInsertComponentEXT);
    DO_REAL_CALL(glInsertComponentEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glInsertComponentEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glInsertComponentEXT);
}

void GLAPIENTRY glInstrumentsBufferSGIX(GLsizei _p0, GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glInstrumentsBufferSGIX);
    _COUNT(APICall_glInstrumentsBufferSGIX);
    CHECKCALL(glInstrumentsBufferSGIX);
    DO_REAL_CALL(glInstrumentsBufferSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glInstrumentsBufferSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glInstrumentsBufferSGIX);
}

void GLAPIENTRY glInterleavedArrays(GLenum format, GLsizei stride, const GLvoid *pointer)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glInterleavedArrays);
    _COUNT(APICall_glInterleavedArrays);
    CHECKCALL(glInterleavedArrays);
    DO_REAL_CALL(glInterleavedArrays(format,stride,pointer));
    _W.writeAPICall(APICall_glInterleavedArrays);
    _W.writeMark("(");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.write(stride);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glInterleavedArrays_SPECIFIC(format,stride,pointer);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glInterleavedArrays);
}

GLboolean GLAPIENTRY glIsAsyncMarkerSGIX(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsAsyncMarkerSGIX);
    _COUNT(APICall_glIsAsyncMarkerSGIX);
    CHECKCALL(glIsAsyncMarkerSGIX);
    _result = DO_REAL_CALL(glIsAsyncMarkerSGIX(_p0));
    _W.writeAPICall(APICall_glIsAsyncMarkerSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsAsyncMarkerSGIX);
    return _result;
}

GLboolean GLAPIENTRY glIsBuffer(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsBuffer);
    _COUNT(APICall_glIsBuffer);
    CHECKCALL(glIsBuffer);
    _result = DO_REAL_CALL(glIsBuffer(_p0));
    _W.writeAPICall(APICall_glIsBuffer);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsBuffer);
    return _result;
}

GLboolean GLAPIENTRY glIsBufferARB(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsBufferARB);
    _COUNT(APICall_glIsBufferARB);
    CHECKCALL(glIsBufferARB);
    _result = DO_REAL_CALL(glIsBufferARB(_p0));
    _W.writeAPICall(APICall_glIsBufferARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsBufferARB);
    return _result;
}

GLboolean GLAPIENTRY glIsEnabled(GLenum cap)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsEnabled);
    _COUNT(APICall_glIsEnabled);
    CHECKCALL(glIsEnabled);
    _result = DO_REAL_CALL(glIsEnabled(cap));
    _W.writeAPICall(APICall_glIsEnabled);
    _W.writeMark("(");
    _W.writeEnum(cap);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsEnabled);
    return _result;
}

GLboolean GLAPIENTRY glIsEnabledIndexedEXT(GLenum _p0, GLuint _p1)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsEnabledIndexedEXT);
    _COUNT(APICall_glIsEnabledIndexedEXT);
    CHECKCALL(glIsEnabledIndexedEXT);
    _result = DO_REAL_CALL(glIsEnabledIndexedEXT(_p0,_p1));
    _W.writeAPICall(APICall_glIsEnabledIndexedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsEnabledIndexedEXT);
    return _result;
}

GLboolean GLAPIENTRY glIsEnabledi(GLenum _p0, GLuint _p1)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsEnabledi);
    _COUNT(APICall_glIsEnabledi);
    CHECKCALL(glIsEnabledi);
    _result = DO_REAL_CALL(glIsEnabledi(_p0,_p1));
    _W.writeAPICall(APICall_glIsEnabledi);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsEnabledi);
    return _result;
}

GLboolean GLAPIENTRY glIsFenceAPPLE(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsFenceAPPLE);
    _COUNT(APICall_glIsFenceAPPLE);
    CHECKCALL(glIsFenceAPPLE);
    _result = DO_REAL_CALL(glIsFenceAPPLE(_p0));
    _W.writeAPICall(APICall_glIsFenceAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsFenceAPPLE);
    return _result;
}

GLboolean GLAPIENTRY glIsFenceNV(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsFenceNV);
    _COUNT(APICall_glIsFenceNV);
    CHECKCALL(glIsFenceNV);
    _result = DO_REAL_CALL(glIsFenceNV(_p0));
    _W.writeAPICall(APICall_glIsFenceNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsFenceNV);
    return _result;
}

GLboolean GLAPIENTRY glIsFramebuffer(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsFramebuffer);
    _COUNT(APICall_glIsFramebuffer);
    CHECKCALL(glIsFramebuffer);
    _result = DO_REAL_CALL(glIsFramebuffer(_p0));
    _W.writeAPICall(APICall_glIsFramebuffer);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsFramebuffer);
    return _result;
}

GLboolean GLAPIENTRY glIsFramebufferEXT(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsFramebufferEXT);
    _COUNT(APICall_glIsFramebufferEXT);
    CHECKCALL(glIsFramebufferEXT);
    _result = DO_REAL_CALL(glIsFramebufferEXT(_p0));
    _W.writeAPICall(APICall_glIsFramebufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsFramebufferEXT);
    return _result;
}

GLboolean GLAPIENTRY glIsList(GLuint list)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsList);
    _COUNT(APICall_glIsList);
    CHECKCALL(glIsList);
    _result = DO_REAL_CALL(glIsList(list));
    _W.writeAPICall(APICall_glIsList);
    _W.writeMark("(");
    _W.write(list);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsList);
    return _result;
}

GLboolean GLAPIENTRY glIsObjectBufferATI(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsObjectBufferATI);
    _COUNT(APICall_glIsObjectBufferATI);
    CHECKCALL(glIsObjectBufferATI);
    _result = DO_REAL_CALL(glIsObjectBufferATI(_p0));
    _W.writeAPICall(APICall_glIsObjectBufferATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsObjectBufferATI);
    return _result;
}

GLboolean GLAPIENTRY glIsOcclusionQueryNV(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsOcclusionQueryNV);
    _COUNT(APICall_glIsOcclusionQueryNV);
    CHECKCALL(glIsOcclusionQueryNV);
    _result = DO_REAL_CALL(glIsOcclusionQueryNV(_p0));
    _W.writeAPICall(APICall_glIsOcclusionQueryNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsOcclusionQueryNV);
    return _result;
}

GLboolean GLAPIENTRY glIsProgram(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsProgram);
    _COUNT(APICall_glIsProgram);
    CHECKCALL(glIsProgram);
    _result = DO_REAL_CALL(glIsProgram(_p0));
    _W.writeAPICall(APICall_glIsProgram);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsProgram);
    return _result;
}

GLboolean GLAPIENTRY glIsProgramARB(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsProgramARB);
    _COUNT(APICall_glIsProgramARB);
    CHECKCALL(glIsProgramARB);
    _result = DO_REAL_CALL(glIsProgramARB(_p0));
    _W.writeAPICall(APICall_glIsProgramARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsProgramARB);
    return _result;
}

GLboolean GLAPIENTRY glIsProgramNV(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsProgramNV);
    _COUNT(APICall_glIsProgramNV);
    CHECKCALL(glIsProgramNV);
    _result = DO_REAL_CALL(glIsProgramNV(_p0));
    _W.writeAPICall(APICall_glIsProgramNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsProgramNV);
    return _result;
}

GLboolean GLAPIENTRY glIsQuery(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsQuery);
    _COUNT(APICall_glIsQuery);
    CHECKCALL(glIsQuery);
    _result = DO_REAL_CALL(glIsQuery(_p0));
    _W.writeAPICall(APICall_glIsQuery);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsQuery);
    return _result;
}

GLboolean GLAPIENTRY glIsQueryARB(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsQueryARB);
    _COUNT(APICall_glIsQueryARB);
    CHECKCALL(glIsQueryARB);
    _result = DO_REAL_CALL(glIsQueryARB(_p0));
    _W.writeAPICall(APICall_glIsQueryARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsQueryARB);
    return _result;
}

GLboolean GLAPIENTRY glIsRenderbuffer(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsRenderbuffer);
    _COUNT(APICall_glIsRenderbuffer);
    CHECKCALL(glIsRenderbuffer);
    _result = DO_REAL_CALL(glIsRenderbuffer(_p0));
    _W.writeAPICall(APICall_glIsRenderbuffer);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsRenderbuffer);
    return _result;
}

GLboolean GLAPIENTRY glIsRenderbufferEXT(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsRenderbufferEXT);
    _COUNT(APICall_glIsRenderbufferEXT);
    CHECKCALL(glIsRenderbufferEXT);
    _result = DO_REAL_CALL(glIsRenderbufferEXT(_p0));
    _W.writeAPICall(APICall_glIsRenderbufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsRenderbufferEXT);
    return _result;
}

GLboolean GLAPIENTRY glIsShader(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsShader);
    _COUNT(APICall_glIsShader);
    CHECKCALL(glIsShader);
    _result = DO_REAL_CALL(glIsShader(_p0));
    _W.writeAPICall(APICall_glIsShader);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsShader);
    return _result;
}

GLboolean GLAPIENTRY glIsTexture(GLuint texture)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsTexture);
    _COUNT(APICall_glIsTexture);
    CHECKCALL(glIsTexture);
    _result = DO_REAL_CALL(glIsTexture(texture));
    _W.writeAPICall(APICall_glIsTexture);
    _W.writeMark("(");
    _W.write(texture);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsTexture);
    return _result;
}

GLboolean GLAPIENTRY glIsTextureEXT(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsTextureEXT);
    _COUNT(APICall_glIsTextureEXT);
    CHECKCALL(glIsTextureEXT);
    _result = DO_REAL_CALL(glIsTextureEXT(_p0));
    _W.writeAPICall(APICall_glIsTextureEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsTextureEXT);
    return _result;
}

GLboolean GLAPIENTRY glIsTransformFeedbackNV(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsTransformFeedbackNV);
    _COUNT(APICall_glIsTransformFeedbackNV);
    CHECKCALL(glIsTransformFeedbackNV);
    _result = DO_REAL_CALL(glIsTransformFeedbackNV(_p0));
    _W.writeAPICall(APICall_glIsTransformFeedbackNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsTransformFeedbackNV);
    return _result;
}

GLboolean GLAPIENTRY glIsVariantEnabledEXT(GLuint _p0, GLenum _p1)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsVariantEnabledEXT);
    _COUNT(APICall_glIsVariantEnabledEXT);
    CHECKCALL(glIsVariantEnabledEXT);
    _result = DO_REAL_CALL(glIsVariantEnabledEXT(_p0,_p1));
    _W.writeAPICall(APICall_glIsVariantEnabledEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsVariantEnabledEXT);
    return _result;
}

GLboolean GLAPIENTRY glIsVertexArray(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsVertexArray);
    _COUNT(APICall_glIsVertexArray);
    CHECKCALL(glIsVertexArray);
    _result = DO_REAL_CALL(glIsVertexArray(_p0));
    _W.writeAPICall(APICall_glIsVertexArray);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsVertexArray);
    return _result;
}

GLboolean GLAPIENTRY glIsVertexArrayAPPLE(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glIsVertexArrayAPPLE);
    _COUNT(APICall_glIsVertexArrayAPPLE);
    CHECKCALL(glIsVertexArrayAPPLE);
    _result = DO_REAL_CALL(glIsVertexArrayAPPLE(_p0));
    _W.writeAPICall(APICall_glIsVertexArrayAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glIsVertexArrayAPPLE);
    return _result;
}

void GLAPIENTRY glLightEnviSGIX(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLightEnviSGIX);
    _COUNT(APICall_glLightEnviSGIX);
    CHECKCALL(glLightEnviSGIX);
    DO_REAL_CALL(glLightEnviSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glLightEnviSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLightEnviSGIX);
}

void GLAPIENTRY glLightModelf(GLenum pname, GLfloat param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLightModelf);
    _COUNT(APICall_glLightModelf);
    CHECKCALL(glLightModelf);
    DO_REAL_CALL(glLightModelf(pname,param));
    _W.writeAPICall(APICall_glLightModelf);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLightModelf);
}

void GLAPIENTRY glLightModelfv(GLenum pname, const GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLightModelfv);
    _COUNT(APICall_glLightModelfv);
    CHECKCALL(glLightModelfv);
    DO_REAL_CALL(glLightModelfv(pname,params));
    _W.writeAPICall(APICall_glLightModelfv);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glLightModelfv_SPECIFIC(pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLightModelfv);
}

void GLAPIENTRY glLightModeli(GLenum pname, GLint param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLightModeli);
    _COUNT(APICall_glLightModeli);
    CHECKCALL(glLightModeli);
    DO_REAL_CALL(glLightModeli(pname,param));
    _W.writeAPICall(APICall_glLightModeli);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLightModeli);
}

void GLAPIENTRY glLightModeliv(GLenum pname, const GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLightModeliv);
    _COUNT(APICall_glLightModeliv);
    CHECKCALL(glLightModeliv);
    DO_REAL_CALL(glLightModeliv(pname,params));
    _W.writeAPICall(APICall_glLightModeliv);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLightModeliv);
}

void GLAPIENTRY glLightf(GLenum light, GLenum pname, GLfloat param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLightf);
    _COUNT(APICall_glLightf);
    CHECKCALL(glLightf);
    DO_REAL_CALL(glLightf(light,pname,param));
    _W.writeAPICall(APICall_glLightf);
    _W.writeMark("(");
    _W.writeEnum(light);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLightf);
}

void GLAPIENTRY glLightfv(GLenum light, GLenum pname, const GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLightfv);
    _COUNT(APICall_glLightfv);
    CHECKCALL(glLightfv);
    DO_REAL_CALL(glLightfv(light,pname,params));
    _W.writeAPICall(APICall_glLightfv);
    _W.writeMark("(");
    _W.writeEnum(light);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glLightfv_SPECIFIC(light,pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLightfv);
}

void GLAPIENTRY glLighti(GLenum light, GLenum pname, GLint param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLighti);
    _COUNT(APICall_glLighti);
    CHECKCALL(glLighti);
    DO_REAL_CALL(glLighti(light,pname,param));
    _W.writeAPICall(APICall_glLighti);
    _W.writeMark("(");
    _W.writeEnum(light);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLighti);
}

void GLAPIENTRY glLightiv(GLenum light, GLenum pname, const GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLightiv);
    _COUNT(APICall_glLightiv);
    CHECKCALL(glLightiv);
    DO_REAL_CALL(glLightiv(light,pname,params));
    _W.writeAPICall(APICall_glLightiv);
    _W.writeMark("(");
    _W.writeEnum(light);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLightiv);
}

void GLAPIENTRY glLineStipple(GLint factor, GLushort pattern)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLineStipple);
    _COUNT(APICall_glLineStipple);
    CHECKCALL(glLineStipple);
    DO_REAL_CALL(glLineStipple(factor,pattern));
    _W.writeAPICall(APICall_glLineStipple);
    _W.writeMark("(");
    _W.write(factor);
    _W.writeMark(",");
    _W.write(pattern);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLineStipple);
}

void GLAPIENTRY glLineWidth(GLfloat width)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLineWidth);
    _COUNT(APICall_glLineWidth);
    CHECKCALL(glLineWidth);
    DO_REAL_CALL(glLineWidth(width));
    _W.writeAPICall(APICall_glLineWidth);
    _W.writeMark("(");
    _W.write(width);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLineWidth);
}

void GLAPIENTRY glLinkProgram(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLinkProgram);
    _COUNT(APICall_glLinkProgram);
    CHECKCALL(glLinkProgram);
    DO_REAL_CALL(glLinkProgram(_p0));
    _W.writeAPICall(APICall_glLinkProgram);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLinkProgram);
}

void GLAPIENTRY glLinkProgramARB(GLhandleARB _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLinkProgramARB);
    _COUNT(APICall_glLinkProgramARB);
    CHECKCALL(glLinkProgramARB);
    DO_REAL_CALL(glLinkProgramARB(_p0));
    _W.writeAPICall(APICall_glLinkProgramARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLinkProgramARB);
}

void GLAPIENTRY glListBase(GLuint base)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glListBase);
    _COUNT(APICall_glListBase);
    CHECKCALL(glListBase);
    DO_REAL_CALL(glListBase(base));
    _W.writeAPICall(APICall_glListBase);
    _W.writeMark("(");
    _W.write(base);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glListBase);
}

void GLAPIENTRY glListParameterfSGIX(GLuint _p0, GLenum _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glListParameterfSGIX);
    _COUNT(APICall_glListParameterfSGIX);
    CHECKCALL(glListParameterfSGIX);
    DO_REAL_CALL(glListParameterfSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glListParameterfSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glListParameterfSGIX);
}

void GLAPIENTRY glListParameterfvSGIX(GLuint _p0, GLenum _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glListParameterfvSGIX);
    _COUNT(APICall_glListParameterfvSGIX);
    CHECKCALL(glListParameterfvSGIX);
    DO_REAL_CALL(glListParameterfvSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glListParameterfvSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glListParameterfvSGIX);
}

void GLAPIENTRY glListParameteriSGIX(GLuint _p0, GLenum _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glListParameteriSGIX);
    _COUNT(APICall_glListParameteriSGIX);
    CHECKCALL(glListParameteriSGIX);
    DO_REAL_CALL(glListParameteriSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glListParameteriSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glListParameteriSGIX);
}

void GLAPIENTRY glListParameterivSGIX(GLuint _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glListParameterivSGIX);
    _COUNT(APICall_glListParameterivSGIX);
    CHECKCALL(glListParameterivSGIX);
    DO_REAL_CALL(glListParameterivSGIX(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glListParameterivSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glListParameterivSGIX);
}

void GLAPIENTRY glLoadIdentity()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadIdentity);
    _COUNT(APICall_glLoadIdentity);
    CHECKCALL(glLoadIdentity);
    DO_REAL_CALL(glLoadIdentity());
    _W.writeAPICall(APICall_glLoadIdentity);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadIdentity);
}

void GLAPIENTRY glLoadIdentityDeformationMapSGIX(GLbitfield _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadIdentityDeformationMapSGIX);
    _COUNT(APICall_glLoadIdentityDeformationMapSGIX);
    CHECKCALL(glLoadIdentityDeformationMapSGIX);
    DO_REAL_CALL(glLoadIdentityDeformationMapSGIX(_p0));
    _W.writeAPICall(APICall_glLoadIdentityDeformationMapSGIX);
    _W.writeMark("(");
    _W.writeOring(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadIdentityDeformationMapSGIX);
}

void GLAPIENTRY glLoadMatrixd(const GLdouble *m)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadMatrixd);
    _COUNT(APICall_glLoadMatrixd);
    CHECKCALL(glLoadMatrixd);
    DO_REAL_CALL(glLoadMatrixd(m));
    _W.writeAPICall(APICall_glLoadMatrixd);
    _W.writeMark("(");
    // [GEN-CODE info: Specific user call]
    glLoadMatrixd_SPECIFIC(m);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadMatrixd);
}

void GLAPIENTRY glLoadMatrixf(const GLfloat *m)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadMatrixf);
    _COUNT(APICall_glLoadMatrixf);
    CHECKCALL(glLoadMatrixf);
    DO_REAL_CALL(glLoadMatrixf(m));
    _W.writeAPICall(APICall_glLoadMatrixf);
    _W.writeMark("(");
    // [GEN-CODE info: Specific user call]
    glLoadMatrixf_SPECIFIC(m);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadMatrixf);
}

void GLAPIENTRY glLoadName(GLuint name)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadName);
    _COUNT(APICall_glLoadName);
    CHECKCALL(glLoadName);
    DO_REAL_CALL(glLoadName(name));
    _W.writeAPICall(APICall_glLoadName);
    _W.writeMark("(");
    _W.write(name);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadName);
}

void GLAPIENTRY glLoadProgramNV(GLenum _p0, GLuint _p1, GLsizei _p2, const GLubyte *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadProgramNV);
    _COUNT(APICall_glLoadProgramNV);
    CHECKCALL(glLoadProgramNV);
    DO_REAL_CALL(glLoadProgramNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glLoadProgramNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glLoadProgramNV_SPECIFIC(_p0,_p1,_p2,_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadProgramNV);
}

void GLAPIENTRY glLoadTransposeMatrixd(const GLdouble *m)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadTransposeMatrixd);
    _COUNT(APICall_glLoadTransposeMatrixd);
    CHECKCALL(glLoadTransposeMatrixd);
    DO_REAL_CALL(glLoadTransposeMatrixd(m));
    _W.writeAPICall(APICall_glLoadTransposeMatrixd);
    _W.writeMark("(");
    _W.writeUnknown(&m);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadTransposeMatrixd);
}

void GLAPIENTRY glLoadTransposeMatrixdARB(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadTransposeMatrixdARB);
    _COUNT(APICall_glLoadTransposeMatrixdARB);
    CHECKCALL(glLoadTransposeMatrixdARB);
    DO_REAL_CALL(glLoadTransposeMatrixdARB(_p0));
    _W.writeAPICall(APICall_glLoadTransposeMatrixdARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadTransposeMatrixdARB);
}

void GLAPIENTRY glLoadTransposeMatrixf(const GLfloat *m)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadTransposeMatrixf);
    _COUNT(APICall_glLoadTransposeMatrixf);
    CHECKCALL(glLoadTransposeMatrixf);
    DO_REAL_CALL(glLoadTransposeMatrixf(m));
    _W.writeAPICall(APICall_glLoadTransposeMatrixf);
    _W.writeMark("(");
    _W.writeUnknown(&m);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadTransposeMatrixf);
}

void GLAPIENTRY glLoadTransposeMatrixfARB(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLoadTransposeMatrixfARB);
    _COUNT(APICall_glLoadTransposeMatrixfARB);
    CHECKCALL(glLoadTransposeMatrixfARB);
    DO_REAL_CALL(glLoadTransposeMatrixfARB(_p0));
    _W.writeAPICall(APICall_glLoadTransposeMatrixfARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLoadTransposeMatrixfARB);
}

void GLAPIENTRY glLockArraysEXT(GLint _p0, GLsizei _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLockArraysEXT);
    _COUNT(APICall_glLockArraysEXT);
    CHECKCALL(glLockArraysEXT);
    DO_REAL_CALL(glLockArraysEXT(_p0,_p1));
    _W.writeAPICall(APICall_glLockArraysEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLockArraysEXT);
}

void GLAPIENTRY glLogicOp(GLenum opcode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glLogicOp);
    _COUNT(APICall_glLogicOp);
    CHECKCALL(glLogicOp);
    DO_REAL_CALL(glLogicOp(opcode));
    _W.writeAPICall(APICall_glLogicOp);
    _W.writeMark("(");
    _W.writeEnum(opcode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glLogicOp);
}

void GLAPIENTRY glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMap1d);
    _COUNT(APICall_glMap1d);
    CHECKCALL(glMap1d);
    DO_REAL_CALL(glMap1d(target,u1,u2,stride,order,points));
    _W.writeAPICall(APICall_glMap1d);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(u1);
    _W.writeMark(",");
    _W.write(u2);
    _W.writeMark(",");
    _W.write(stride);
    _W.writeMark(",");
    _W.write(order);
    _W.writeMark(",");
    _W.writeUnknown(&points);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMap1d);
}

void GLAPIENTRY glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMap1f);
    _COUNT(APICall_glMap1f);
    CHECKCALL(glMap1f);
    DO_REAL_CALL(glMap1f(target,u1,u2,stride,order,points));
    _W.writeAPICall(APICall_glMap1f);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(u1);
    _W.writeMark(",");
    _W.write(u2);
    _W.writeMark(",");
    _W.write(stride);
    _W.writeMark(",");
    _W.write(order);
    _W.writeMark(",");
    _W.writeUnknown(&points);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMap1f);
}

void GLAPIENTRY glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMap2d);
    _COUNT(APICall_glMap2d);
    CHECKCALL(glMap2d);
    DO_REAL_CALL(glMap2d(target,u1,u2,ustride,uorder,v1,v2,vstride,vorder,points));
    _W.writeAPICall(APICall_glMap2d);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(u1);
    _W.writeMark(",");
    _W.write(u2);
    _W.writeMark(",");
    _W.write(ustride);
    _W.writeMark(",");
    _W.write(uorder);
    _W.writeMark(",");
    _W.write(v1);
    _W.writeMark(",");
    _W.write(v2);
    _W.writeMark(",");
    _W.write(vstride);
    _W.writeMark(",");
    _W.write(vorder);
    _W.writeMark(",");
    _W.writeUnknown(&points);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMap2d);
}

void GLAPIENTRY glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMap2f);
    _COUNT(APICall_glMap2f);
    CHECKCALL(glMap2f);
    DO_REAL_CALL(glMap2f(target,u1,u2,ustride,uorder,v1,v2,vstride,vorder,points));
    _W.writeAPICall(APICall_glMap2f);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(u1);
    _W.writeMark(",");
    _W.write(u2);
    _W.writeMark(",");
    _W.write(ustride);
    _W.writeMark(",");
    _W.write(uorder);
    _W.writeMark(",");
    _W.write(v1);
    _W.writeMark(",");
    _W.write(v2);
    _W.writeMark(",");
    _W.write(vstride);
    _W.writeMark(",");
    _W.write(vorder);
    _W.writeMark(",");
    _W.writeUnknown(&points);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMap2f);
}

GLvoid * GLAPIENTRY glMapBuffer(GLenum _p0, GLenum _p1)
{
    GLvoid *_result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapBuffer);
    _COUNT(APICall_glMapBuffer);
    CHECKCALL(glMapBuffer);
    _result = DO_REAL_CALL(glMapBuffer(_p0,_p1));
    _W.writeAPICall(APICall_glMapBuffer);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapBuffer);
    return _result;
}

GLvoid * GLAPIENTRY glMapBufferARB(GLenum _p0, GLenum _p1)
{
    GLvoid *_result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapBufferARB);
    _COUNT(APICall_glMapBufferARB);
    // Calling SPECIFIC function instead orginal (assumed that SPECIFIC will call original)
    _result = glMapBufferARB_SPECIFIC(_p0,_p1);
    _W.writeAPICall(APICall_glMapBufferARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapBufferARB);
    return _result;
}

GLvoid * GLAPIENTRY glMapBufferRange(GLenum _p0, GLintptr _p1, GLsizeiptr _p2, GLbitfield _p3)
{
    GLvoid *_result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapBufferRange);
    _COUNT(APICall_glMapBufferRange);
    CHECKCALL(glMapBufferRange);
    _result = DO_REAL_CALL(glMapBufferRange(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMapBufferRange);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeOring(_p3);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapBufferRange);
    return _result;
}

void GLAPIENTRY glMapControlPointsNV(GLenum _p0, GLuint _p1, GLenum _p2, GLsizei _p3, GLsizei _p4, GLint _p5, GLint _p6, GLboolean _p7, const GLvoid *_p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapControlPointsNV);
    _COUNT(APICall_glMapControlPointsNV);
    CHECKCALL(glMapControlPointsNV);
    DO_REAL_CALL(glMapControlPointsNV(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glMapControlPointsNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeUnknown(&_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapControlPointsNV);
}

void GLAPIENTRY glMapGrid1d(GLint un, GLdouble u1, GLdouble u2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapGrid1d);
    _COUNT(APICall_glMapGrid1d);
    CHECKCALL(glMapGrid1d);
    DO_REAL_CALL(glMapGrid1d(un,u1,u2));
    _W.writeAPICall(APICall_glMapGrid1d);
    _W.writeMark("(");
    _W.write(un);
    _W.writeMark(",");
    _W.write(u1);
    _W.writeMark(",");
    _W.write(u2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapGrid1d);
}

void GLAPIENTRY glMapGrid1f(GLint un, GLfloat u1, GLfloat u2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapGrid1f);
    _COUNT(APICall_glMapGrid1f);
    CHECKCALL(glMapGrid1f);
    DO_REAL_CALL(glMapGrid1f(un,u1,u2));
    _W.writeAPICall(APICall_glMapGrid1f);
    _W.writeMark("(");
    _W.write(un);
    _W.writeMark(",");
    _W.write(u1);
    _W.writeMark(",");
    _W.write(u2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapGrid1f);
}

void GLAPIENTRY glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapGrid2d);
    _COUNT(APICall_glMapGrid2d);
    CHECKCALL(glMapGrid2d);
    DO_REAL_CALL(glMapGrid2d(un,u1,u2,vn,v1,v2));
    _W.writeAPICall(APICall_glMapGrid2d);
    _W.writeMark("(");
    _W.write(un);
    _W.writeMark(",");
    _W.write(u1);
    _W.writeMark(",");
    _W.write(u2);
    _W.writeMark(",");
    _W.write(vn);
    _W.writeMark(",");
    _W.write(v1);
    _W.writeMark(",");
    _W.write(v2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapGrid2d);
}

void GLAPIENTRY glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapGrid2f);
    _COUNT(APICall_glMapGrid2f);
    CHECKCALL(glMapGrid2f);
    DO_REAL_CALL(glMapGrid2f(un,u1,u2,vn,v1,v2));
    _W.writeAPICall(APICall_glMapGrid2f);
    _W.writeMark("(");
    _W.write(un);
    _W.writeMark(",");
    _W.write(u1);
    _W.writeMark(",");
    _W.write(u2);
    _W.writeMark(",");
    _W.write(vn);
    _W.writeMark(",");
    _W.write(v1);
    _W.writeMark(",");
    _W.write(v2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapGrid2f);
}

GLvoid * GLAPIENTRY glMapNamedBufferEXT(GLuint _p0, GLenum _p1)
{
    GLvoid *_result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapNamedBufferEXT);
    _COUNT(APICall_glMapNamedBufferEXT);
    CHECKCALL(glMapNamedBufferEXT);
    _result = DO_REAL_CALL(glMapNamedBufferEXT(_p0,_p1));
    _W.writeAPICall(APICall_glMapNamedBufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapNamedBufferEXT);
    return _result;
}

GLvoid * GLAPIENTRY glMapObjectBufferATI(GLuint _p0)
{
    GLvoid *_result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapObjectBufferATI);
    _COUNT(APICall_glMapObjectBufferATI);
    CHECKCALL(glMapObjectBufferATI);
    _result = DO_REAL_CALL(glMapObjectBufferATI(_p0));
    _W.writeAPICall(APICall_glMapObjectBufferATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapObjectBufferATI);
    return _result;
}

void GLAPIENTRY glMapParameterfvNV(GLenum _p0, GLenum _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapParameterfvNV);
    _COUNT(APICall_glMapParameterfvNV);
    CHECKCALL(glMapParameterfvNV);
    DO_REAL_CALL(glMapParameterfvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glMapParameterfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapParameterfvNV);
}

void GLAPIENTRY glMapParameterivNV(GLenum _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMapParameterivNV);
    _COUNT(APICall_glMapParameterivNV);
    CHECKCALL(glMapParameterivNV);
    DO_REAL_CALL(glMapParameterivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glMapParameterivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMapParameterivNV);
}

void GLAPIENTRY glMaterialf(GLenum face, GLenum pname, GLfloat param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMaterialf);
    _COUNT(APICall_glMaterialf);
    CHECKCALL(glMaterialf);
    DO_REAL_CALL(glMaterialf(face,pname,param));
    _W.writeAPICall(APICall_glMaterialf);
    _W.writeMark("(");
    _W.writeEnum(face);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMaterialf);
}

void GLAPIENTRY glMaterialfv(GLenum face, GLenum pname, const GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMaterialfv);
    _COUNT(APICall_glMaterialfv);
    CHECKCALL(glMaterialfv);
    DO_REAL_CALL(glMaterialfv(face,pname,params));
    _W.writeAPICall(APICall_glMaterialfv);
    _W.writeMark("(");
    _W.writeEnum(face);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glMaterialfv_SPECIFIC(face,pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMaterialfv);
}

void GLAPIENTRY glMateriali(GLenum face, GLenum pname, GLint param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMateriali);
    _COUNT(APICall_glMateriali);
    CHECKCALL(glMateriali);
    DO_REAL_CALL(glMateriali(face,pname,param));
    _W.writeAPICall(APICall_glMateriali);
    _W.writeMark("(");
    _W.writeEnum(face);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMateriali);
}

void GLAPIENTRY glMaterialiv(GLenum face, GLenum pname, const GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMaterialiv);
    _COUNT(APICall_glMaterialiv);
    CHECKCALL(glMaterialiv);
    DO_REAL_CALL(glMaterialiv(face,pname,params));
    _W.writeAPICall(APICall_glMaterialiv);
    _W.writeMark("(");
    _W.writeEnum(face);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMaterialiv);
}

void GLAPIENTRY glMatrixFrustumEXT(GLenum _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4, GLdouble _p5, GLdouble _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixFrustumEXT);
    _COUNT(APICall_glMatrixFrustumEXT);
    CHECKCALL(glMatrixFrustumEXT);
    DO_REAL_CALL(glMatrixFrustumEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glMatrixFrustumEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixFrustumEXT);
}

void GLAPIENTRY glMatrixIndexPointerARB(GLint _p0, GLenum _p1, GLsizei _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixIndexPointerARB);
    _COUNT(APICall_glMatrixIndexPointerARB);
    CHECKCALL(glMatrixIndexPointerARB);
    DO_REAL_CALL(glMatrixIndexPointerARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMatrixIndexPointerARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixIndexPointerARB);
}

void GLAPIENTRY glMatrixIndexubvARB(GLint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixIndexubvARB);
    _COUNT(APICall_glMatrixIndexubvARB);
    CHECKCALL(glMatrixIndexubvARB);
    DO_REAL_CALL(glMatrixIndexubvARB(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixIndexubvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixIndexubvARB);
}

void GLAPIENTRY glMatrixIndexuivARB(GLint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixIndexuivARB);
    _COUNT(APICall_glMatrixIndexuivARB);
    CHECKCALL(glMatrixIndexuivARB);
    DO_REAL_CALL(glMatrixIndexuivARB(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixIndexuivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixIndexuivARB);
}

void GLAPIENTRY glMatrixIndexusvARB(GLint _p0, const GLushort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixIndexusvARB);
    _COUNT(APICall_glMatrixIndexusvARB);
    CHECKCALL(glMatrixIndexusvARB);
    DO_REAL_CALL(glMatrixIndexusvARB(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixIndexusvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixIndexusvARB);
}

void GLAPIENTRY glMatrixLoadIdentityEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixLoadIdentityEXT);
    _COUNT(APICall_glMatrixLoadIdentityEXT);
    CHECKCALL(glMatrixLoadIdentityEXT);
    DO_REAL_CALL(glMatrixLoadIdentityEXT(_p0));
    _W.writeAPICall(APICall_glMatrixLoadIdentityEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixLoadIdentityEXT);
}

void GLAPIENTRY glMatrixLoadTransposedEXT(GLenum _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixLoadTransposedEXT);
    _COUNT(APICall_glMatrixLoadTransposedEXT);
    CHECKCALL(glMatrixLoadTransposedEXT);
    DO_REAL_CALL(glMatrixLoadTransposedEXT(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixLoadTransposedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixLoadTransposedEXT);
}

void GLAPIENTRY glMatrixLoadTransposefEXT(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixLoadTransposefEXT);
    _COUNT(APICall_glMatrixLoadTransposefEXT);
    CHECKCALL(glMatrixLoadTransposefEXT);
    DO_REAL_CALL(glMatrixLoadTransposefEXT(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixLoadTransposefEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixLoadTransposefEXT);
}

void GLAPIENTRY glMatrixLoaddEXT(GLenum _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixLoaddEXT);
    _COUNT(APICall_glMatrixLoaddEXT);
    CHECKCALL(glMatrixLoaddEXT);
    DO_REAL_CALL(glMatrixLoaddEXT(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixLoaddEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixLoaddEXT);
}

void GLAPIENTRY glMatrixLoadfEXT(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixLoadfEXT);
    _COUNT(APICall_glMatrixLoadfEXT);
    CHECKCALL(glMatrixLoadfEXT);
    DO_REAL_CALL(glMatrixLoadfEXT(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixLoadfEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixLoadfEXT);
}

void GLAPIENTRY glMatrixMode(GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixMode);
    _COUNT(APICall_glMatrixMode);
    CHECKCALL(glMatrixMode);
    DO_REAL_CALL(glMatrixMode(mode));
    _W.writeAPICall(APICall_glMatrixMode);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixMode);
}

void GLAPIENTRY glMatrixMultTransposedEXT(GLenum _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixMultTransposedEXT);
    _COUNT(APICall_glMatrixMultTransposedEXT);
    CHECKCALL(glMatrixMultTransposedEXT);
    DO_REAL_CALL(glMatrixMultTransposedEXT(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixMultTransposedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixMultTransposedEXT);
}

void GLAPIENTRY glMatrixMultTransposefEXT(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixMultTransposefEXT);
    _COUNT(APICall_glMatrixMultTransposefEXT);
    CHECKCALL(glMatrixMultTransposefEXT);
    DO_REAL_CALL(glMatrixMultTransposefEXT(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixMultTransposefEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixMultTransposefEXT);
}

void GLAPIENTRY glMatrixMultdEXT(GLenum _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixMultdEXT);
    _COUNT(APICall_glMatrixMultdEXT);
    CHECKCALL(glMatrixMultdEXT);
    DO_REAL_CALL(glMatrixMultdEXT(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixMultdEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixMultdEXT);
}

void GLAPIENTRY glMatrixMultfEXT(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixMultfEXT);
    _COUNT(APICall_glMatrixMultfEXT);
    CHECKCALL(glMatrixMultfEXT);
    DO_REAL_CALL(glMatrixMultfEXT(_p0,_p1));
    _W.writeAPICall(APICall_glMatrixMultfEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixMultfEXT);
}

void GLAPIENTRY glMatrixOrthoEXT(GLenum _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4, GLdouble _p5, GLdouble _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixOrthoEXT);
    _COUNT(APICall_glMatrixOrthoEXT);
    CHECKCALL(glMatrixOrthoEXT);
    DO_REAL_CALL(glMatrixOrthoEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glMatrixOrthoEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixOrthoEXT);
}

void GLAPIENTRY glMatrixPopEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixPopEXT);
    _COUNT(APICall_glMatrixPopEXT);
    CHECKCALL(glMatrixPopEXT);
    DO_REAL_CALL(glMatrixPopEXT(_p0));
    _W.writeAPICall(APICall_glMatrixPopEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixPopEXT);
}

void GLAPIENTRY glMatrixPushEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixPushEXT);
    _COUNT(APICall_glMatrixPushEXT);
    CHECKCALL(glMatrixPushEXT);
    DO_REAL_CALL(glMatrixPushEXT(_p0));
    _W.writeAPICall(APICall_glMatrixPushEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixPushEXT);
}

void GLAPIENTRY glMatrixRotatedEXT(GLenum _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixRotatedEXT);
    _COUNT(APICall_glMatrixRotatedEXT);
    CHECKCALL(glMatrixRotatedEXT);
    DO_REAL_CALL(glMatrixRotatedEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glMatrixRotatedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixRotatedEXT);
}

void GLAPIENTRY glMatrixRotatefEXT(GLenum _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixRotatefEXT);
    _COUNT(APICall_glMatrixRotatefEXT);
    CHECKCALL(glMatrixRotatefEXT);
    DO_REAL_CALL(glMatrixRotatefEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glMatrixRotatefEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixRotatefEXT);
}

void GLAPIENTRY glMatrixScaledEXT(GLenum _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixScaledEXT);
    _COUNT(APICall_glMatrixScaledEXT);
    CHECKCALL(glMatrixScaledEXT);
    DO_REAL_CALL(glMatrixScaledEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMatrixScaledEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixScaledEXT);
}

void GLAPIENTRY glMatrixScalefEXT(GLenum _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixScalefEXT);
    _COUNT(APICall_glMatrixScalefEXT);
    CHECKCALL(glMatrixScalefEXT);
    DO_REAL_CALL(glMatrixScalefEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMatrixScalefEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixScalefEXT);
}

void GLAPIENTRY glMatrixTranslatedEXT(GLenum _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixTranslatedEXT);
    _COUNT(APICall_glMatrixTranslatedEXT);
    CHECKCALL(glMatrixTranslatedEXT);
    DO_REAL_CALL(glMatrixTranslatedEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMatrixTranslatedEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixTranslatedEXT);
}

void GLAPIENTRY glMatrixTranslatefEXT(GLenum _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMatrixTranslatefEXT);
    _COUNT(APICall_glMatrixTranslatefEXT);
    CHECKCALL(glMatrixTranslatefEXT);
    DO_REAL_CALL(glMatrixTranslatefEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMatrixTranslatefEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMatrixTranslatefEXT);
}

void GLAPIENTRY glMinmax(GLenum target, GLenum internalformat, GLboolean sink)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMinmax);
    _COUNT(APICall_glMinmax);
    CHECKCALL(glMinmax);
    DO_REAL_CALL(glMinmax(target,internalformat,sink));
    _W.writeAPICall(APICall_glMinmax);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(sink);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMinmax);
}

void GLAPIENTRY glMinmaxEXT(GLenum _p0, GLenum _p1, GLboolean _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMinmaxEXT);
    _COUNT(APICall_glMinmaxEXT);
    CHECKCALL(glMinmaxEXT);
    DO_REAL_CALL(glMinmaxEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glMinmaxEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMinmaxEXT);
}

void GLAPIENTRY glMultMatrixd(const GLdouble *m)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultMatrixd);
    _COUNT(APICall_glMultMatrixd);
    CHECKCALL(glMultMatrixd);
    DO_REAL_CALL(glMultMatrixd(m));
    _W.writeAPICall(APICall_glMultMatrixd);
    _W.writeMark("(");
    // [GEN-CODE info: Specific user call]
    glMultMatrixd_SPECIFIC(m);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultMatrixd);
}

void GLAPIENTRY glMultMatrixf(const GLfloat *m)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultMatrixf);
    _COUNT(APICall_glMultMatrixf);
    CHECKCALL(glMultMatrixf);
    DO_REAL_CALL(glMultMatrixf(m));
    _W.writeAPICall(APICall_glMultMatrixf);
    _W.writeMark("(");
    // [GEN-CODE info: Specific user call]
    glMultMatrixf_SPECIFIC(m);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultMatrixf);
}

void GLAPIENTRY glMultTransposeMatrixd(const GLdouble *m)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultTransposeMatrixd);
    _COUNT(APICall_glMultTransposeMatrixd);
    CHECKCALL(glMultTransposeMatrixd);
    DO_REAL_CALL(glMultTransposeMatrixd(m));
    _W.writeAPICall(APICall_glMultTransposeMatrixd);
    _W.writeMark("(");
    _W.writeUnknown(&m);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultTransposeMatrixd);
}

void GLAPIENTRY glMultTransposeMatrixdARB(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultTransposeMatrixdARB);
    _COUNT(APICall_glMultTransposeMatrixdARB);
    CHECKCALL(glMultTransposeMatrixdARB);
    DO_REAL_CALL(glMultTransposeMatrixdARB(_p0));
    _W.writeAPICall(APICall_glMultTransposeMatrixdARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultTransposeMatrixdARB);
}

void GLAPIENTRY glMultTransposeMatrixf(const GLfloat *m)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultTransposeMatrixf);
    _COUNT(APICall_glMultTransposeMatrixf);
    CHECKCALL(glMultTransposeMatrixf);
    DO_REAL_CALL(glMultTransposeMatrixf(m));
    _W.writeAPICall(APICall_glMultTransposeMatrixf);
    _W.writeMark("(");
    _W.writeUnknown(&m);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultTransposeMatrixf);
}

void GLAPIENTRY glMultTransposeMatrixfARB(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultTransposeMatrixfARB);
    _COUNT(APICall_glMultTransposeMatrixfARB);
    CHECKCALL(glMultTransposeMatrixfARB);
    DO_REAL_CALL(glMultTransposeMatrixfARB(_p0));
    _W.writeAPICall(APICall_glMultTransposeMatrixfARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultTransposeMatrixfARB);
}

void GLAPIENTRY glMultiDrawArrays(GLenum _p0, GLint *_p1, GLsizei *_p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiDrawArrays);
    // Specific stats code
    glMultiDrawArrays_STAT(_p0,_p1,_p2,_p3);
    _COUNT(APICall_glMultiDrawArrays);
    CHECKCALL(glMultiDrawArrays);
    DO_REAL_CALL(glMultiDrawArrays(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiDrawArrays);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiDrawArrays);
}

void GLAPIENTRY glMultiDrawArraysEXT(GLenum _p0, GLint *_p1, GLsizei *_p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiDrawArraysEXT);
    _COUNT(APICall_glMultiDrawArraysEXT);
    CHECKCALL(glMultiDrawArraysEXT);
    DO_REAL_CALL(glMultiDrawArraysEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiDrawArraysEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiDrawArraysEXT);
}

void GLAPIENTRY glMultiDrawElementArrayAPPLE(GLenum _p0, const GLint *_p1, const GLsizei *_p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiDrawElementArrayAPPLE);
    _COUNT(APICall_glMultiDrawElementArrayAPPLE);
    CHECKCALL(glMultiDrawElementArrayAPPLE);
    DO_REAL_CALL(glMultiDrawElementArrayAPPLE(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiDrawElementArrayAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiDrawElementArrayAPPLE);
}

void GLAPIENTRY glMultiDrawElements(GLenum _p0, const GLsizei *_p1, GLenum _p2, const GLvoid **_p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiDrawElements);
    _COUNT(APICall_glMultiDrawElements);
    CHECKCALL(glMultiDrawElements);
    DO_REAL_CALL(glMultiDrawElements(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glMultiDrawElements);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiDrawElements);
}

void GLAPIENTRY glMultiDrawElementsEXT(GLenum _p0, const GLsizei *_p1, GLenum _p2, const GLvoid **_p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiDrawElementsEXT);
    _COUNT(APICall_glMultiDrawElementsEXT);
    CHECKCALL(glMultiDrawElementsEXT);
    DO_REAL_CALL(glMultiDrawElementsEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glMultiDrawElementsEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiDrawElementsEXT);
}

void GLAPIENTRY glMultiDrawRangeElementArrayAPPLE(GLenum _p0, GLuint _p1, GLuint _p2, const GLint *_p3, const GLsizei *_p4, GLsizei _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiDrawRangeElementArrayAPPLE);
    _COUNT(APICall_glMultiDrawRangeElementArrayAPPLE);
    CHECKCALL(glMultiDrawRangeElementArrayAPPLE);
    DO_REAL_CALL(glMultiDrawRangeElementArrayAPPLE(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glMultiDrawRangeElementArrayAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiDrawRangeElementArrayAPPLE);
}

void GLAPIENTRY glMultiTexBufferEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexBufferEXT);
    _COUNT(APICall_glMultiTexBufferEXT);
    CHECKCALL(glMultiTexBufferEXT);
    DO_REAL_CALL(glMultiTexBufferEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexBufferEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexBufferEXT);
}

void GLAPIENTRY glMultiTexCoord1d(GLenum target, GLdouble s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1d);
    _COUNT(APICall_glMultiTexCoord1d);
    CHECKCALL(glMultiTexCoord1d);
    DO_REAL_CALL(glMultiTexCoord1d(target,s));
    _W.writeAPICall(APICall_glMultiTexCoord1d);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1d);
}

void GLAPIENTRY glMultiTexCoord1dARB(GLenum target, GLdouble s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1dARB);
    _COUNT(APICall_glMultiTexCoord1dARB);
    CHECKCALL(glMultiTexCoord1dARB);
    DO_REAL_CALL(glMultiTexCoord1dARB(target,s));
    _W.writeAPICall(APICall_glMultiTexCoord1dARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1dARB);
}

void GLAPIENTRY glMultiTexCoord1dv(GLenum target, const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1dv);
    _COUNT(APICall_glMultiTexCoord1dv);
    CHECKCALL(glMultiTexCoord1dv);
    DO_REAL_CALL(glMultiTexCoord1dv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord1dv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1dv);
}

void GLAPIENTRY glMultiTexCoord1dvARB(GLenum target, const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1dvARB);
    _COUNT(APICall_glMultiTexCoord1dvARB);
    CHECKCALL(glMultiTexCoord1dvARB);
    DO_REAL_CALL(glMultiTexCoord1dvARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord1dvARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1dvARB);
}

void GLAPIENTRY glMultiTexCoord1f(GLenum target, GLfloat s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1f);
    _COUNT(APICall_glMultiTexCoord1f);
    CHECKCALL(glMultiTexCoord1f);
    DO_REAL_CALL(glMultiTexCoord1f(target,s));
    _W.writeAPICall(APICall_glMultiTexCoord1f);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1f);
}

void GLAPIENTRY glMultiTexCoord1fARB(GLenum target, GLfloat s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1fARB);
    _COUNT(APICall_glMultiTexCoord1fARB);
    CHECKCALL(glMultiTexCoord1fARB);
    DO_REAL_CALL(glMultiTexCoord1fARB(target,s));
    _W.writeAPICall(APICall_glMultiTexCoord1fARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1fARB);
}

void GLAPIENTRY glMultiTexCoord1fv(GLenum target, const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1fv);
    _COUNT(APICall_glMultiTexCoord1fv);
    CHECKCALL(glMultiTexCoord1fv);
    DO_REAL_CALL(glMultiTexCoord1fv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord1fv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1fv);
}

void GLAPIENTRY glMultiTexCoord1fvARB(GLenum target, const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1fvARB);
    _COUNT(APICall_glMultiTexCoord1fvARB);
    CHECKCALL(glMultiTexCoord1fvARB);
    DO_REAL_CALL(glMultiTexCoord1fvARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord1fvARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1fvARB);
}

void GLAPIENTRY glMultiTexCoord1hNV(GLenum _p0, GLhalfNV _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1hNV);
    _COUNT(APICall_glMultiTexCoord1hNV);
    CHECKCALL(glMultiTexCoord1hNV);
    DO_REAL_CALL(glMultiTexCoord1hNV(_p0,_p1));
    _W.writeAPICall(APICall_glMultiTexCoord1hNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1hNV);
}

void GLAPIENTRY glMultiTexCoord1hvNV(GLenum _p0, const GLhalfNV *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1hvNV);
    _COUNT(APICall_glMultiTexCoord1hvNV);
    CHECKCALL(glMultiTexCoord1hvNV);
    DO_REAL_CALL(glMultiTexCoord1hvNV(_p0,_p1));
    _W.writeAPICall(APICall_glMultiTexCoord1hvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1hvNV);
}

void GLAPIENTRY glMultiTexCoord1i(GLenum target, GLint s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1i);
    _COUNT(APICall_glMultiTexCoord1i);
    CHECKCALL(glMultiTexCoord1i);
    DO_REAL_CALL(glMultiTexCoord1i(target,s));
    _W.writeAPICall(APICall_glMultiTexCoord1i);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1i);
}

void GLAPIENTRY glMultiTexCoord1iARB(GLenum target, GLint s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1iARB);
    _COUNT(APICall_glMultiTexCoord1iARB);
    CHECKCALL(glMultiTexCoord1iARB);
    DO_REAL_CALL(glMultiTexCoord1iARB(target,s));
    _W.writeAPICall(APICall_glMultiTexCoord1iARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1iARB);
}

void GLAPIENTRY glMultiTexCoord1iv(GLenum target, const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1iv);
    _COUNT(APICall_glMultiTexCoord1iv);
    CHECKCALL(glMultiTexCoord1iv);
    DO_REAL_CALL(glMultiTexCoord1iv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord1iv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1iv);
}

void GLAPIENTRY glMultiTexCoord1ivARB(GLenum target, const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1ivARB);
    _COUNT(APICall_glMultiTexCoord1ivARB);
    CHECKCALL(glMultiTexCoord1ivARB);
    DO_REAL_CALL(glMultiTexCoord1ivARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord1ivARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1ivARB);
}

void GLAPIENTRY glMultiTexCoord1s(GLenum target, GLshort s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1s);
    _COUNT(APICall_glMultiTexCoord1s);
    CHECKCALL(glMultiTexCoord1s);
    DO_REAL_CALL(glMultiTexCoord1s(target,s));
    _W.writeAPICall(APICall_glMultiTexCoord1s);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1s);
}

void GLAPIENTRY glMultiTexCoord1sARB(GLenum target, GLshort s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1sARB);
    _COUNT(APICall_glMultiTexCoord1sARB);
    CHECKCALL(glMultiTexCoord1sARB);
    DO_REAL_CALL(glMultiTexCoord1sARB(target,s));
    _W.writeAPICall(APICall_glMultiTexCoord1sARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1sARB);
}

void GLAPIENTRY glMultiTexCoord1sv(GLenum target, const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1sv);
    _COUNT(APICall_glMultiTexCoord1sv);
    CHECKCALL(glMultiTexCoord1sv);
    DO_REAL_CALL(glMultiTexCoord1sv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord1sv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1sv);
}

void GLAPIENTRY glMultiTexCoord1svARB(GLenum target, const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord1svARB);
    _COUNT(APICall_glMultiTexCoord1svARB);
    CHECKCALL(glMultiTexCoord1svARB);
    DO_REAL_CALL(glMultiTexCoord1svARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord1svARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord1svARB);
}

void GLAPIENTRY glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2d);
    _COUNT(APICall_glMultiTexCoord2d);
    CHECKCALL(glMultiTexCoord2d);
    DO_REAL_CALL(glMultiTexCoord2d(target,s,t));
    _W.writeAPICall(APICall_glMultiTexCoord2d);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2d);
}

void GLAPIENTRY glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2dARB);
    _COUNT(APICall_glMultiTexCoord2dARB);
    CHECKCALL(glMultiTexCoord2dARB);
    DO_REAL_CALL(glMultiTexCoord2dARB(target,s,t));
    _W.writeAPICall(APICall_glMultiTexCoord2dARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2dARB);
}

void GLAPIENTRY glMultiTexCoord2dv(GLenum target, const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2dv);
    _COUNT(APICall_glMultiTexCoord2dv);
    CHECKCALL(glMultiTexCoord2dv);
    DO_REAL_CALL(glMultiTexCoord2dv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord2dv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2dv);
}

void GLAPIENTRY glMultiTexCoord2dvARB(GLenum target, const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2dvARB);
    _COUNT(APICall_glMultiTexCoord2dvARB);
    CHECKCALL(glMultiTexCoord2dvARB);
    DO_REAL_CALL(glMultiTexCoord2dvARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord2dvARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2dvARB);
}

void GLAPIENTRY glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2f);
    _COUNT(APICall_glMultiTexCoord2f);
    CHECKCALL(glMultiTexCoord2f);
    DO_REAL_CALL(glMultiTexCoord2f(target,s,t));
    _W.writeAPICall(APICall_glMultiTexCoord2f);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2f);
}

void GLAPIENTRY glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2fARB);
    _COUNT(APICall_glMultiTexCoord2fARB);
    CHECKCALL(glMultiTexCoord2fARB);
    DO_REAL_CALL(glMultiTexCoord2fARB(target,s,t));
    _W.writeAPICall(APICall_glMultiTexCoord2fARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2fARB);
}

void GLAPIENTRY glMultiTexCoord2fv(GLenum target, const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2fv);
    _COUNT(APICall_glMultiTexCoord2fv);
    CHECKCALL(glMultiTexCoord2fv);
    DO_REAL_CALL(glMultiTexCoord2fv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord2fv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2fv);
}

void GLAPIENTRY glMultiTexCoord2fvARB(GLenum target, const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2fvARB);
    _COUNT(APICall_glMultiTexCoord2fvARB);
    CHECKCALL(glMultiTexCoord2fvARB);
    DO_REAL_CALL(glMultiTexCoord2fvARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord2fvARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2fvARB);
}

void GLAPIENTRY glMultiTexCoord2hNV(GLenum _p0, GLhalfNV _p1, GLhalfNV _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2hNV);
    _COUNT(APICall_glMultiTexCoord2hNV);
    CHECKCALL(glMultiTexCoord2hNV);
    DO_REAL_CALL(glMultiTexCoord2hNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glMultiTexCoord2hNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2hNV);
}

void GLAPIENTRY glMultiTexCoord2hvNV(GLenum _p0, const GLhalfNV *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2hvNV);
    _COUNT(APICall_glMultiTexCoord2hvNV);
    CHECKCALL(glMultiTexCoord2hvNV);
    DO_REAL_CALL(glMultiTexCoord2hvNV(_p0,_p1));
    _W.writeAPICall(APICall_glMultiTexCoord2hvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2hvNV);
}

void GLAPIENTRY glMultiTexCoord2i(GLenum target, GLint s, GLint t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2i);
    _COUNT(APICall_glMultiTexCoord2i);
    CHECKCALL(glMultiTexCoord2i);
    DO_REAL_CALL(glMultiTexCoord2i(target,s,t));
    _W.writeAPICall(APICall_glMultiTexCoord2i);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2i);
}

void GLAPIENTRY glMultiTexCoord2iARB(GLenum target, GLint s, GLint t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2iARB);
    _COUNT(APICall_glMultiTexCoord2iARB);
    CHECKCALL(glMultiTexCoord2iARB);
    DO_REAL_CALL(glMultiTexCoord2iARB(target,s,t));
    _W.writeAPICall(APICall_glMultiTexCoord2iARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2iARB);
}

void GLAPIENTRY glMultiTexCoord2iv(GLenum target, const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2iv);
    _COUNT(APICall_glMultiTexCoord2iv);
    CHECKCALL(glMultiTexCoord2iv);
    DO_REAL_CALL(glMultiTexCoord2iv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord2iv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2iv);
}

void GLAPIENTRY glMultiTexCoord2ivARB(GLenum target, const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2ivARB);
    _COUNT(APICall_glMultiTexCoord2ivARB);
    CHECKCALL(glMultiTexCoord2ivARB);
    DO_REAL_CALL(glMultiTexCoord2ivARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord2ivARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2ivARB);
}

void GLAPIENTRY glMultiTexCoord2s(GLenum target, GLshort s, GLshort t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2s);
    _COUNT(APICall_glMultiTexCoord2s);
    CHECKCALL(glMultiTexCoord2s);
    DO_REAL_CALL(glMultiTexCoord2s(target,s,t));
    _W.writeAPICall(APICall_glMultiTexCoord2s);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2s);
}

void GLAPIENTRY glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2sARB);
    _COUNT(APICall_glMultiTexCoord2sARB);
    CHECKCALL(glMultiTexCoord2sARB);
    DO_REAL_CALL(glMultiTexCoord2sARB(target,s,t));
    _W.writeAPICall(APICall_glMultiTexCoord2sARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2sARB);
}

void GLAPIENTRY glMultiTexCoord2sv(GLenum target, const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2sv);
    _COUNT(APICall_glMultiTexCoord2sv);
    CHECKCALL(glMultiTexCoord2sv);
    DO_REAL_CALL(glMultiTexCoord2sv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord2sv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2sv);
}

void GLAPIENTRY glMultiTexCoord2svARB(GLenum target, const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord2svARB);
    _COUNT(APICall_glMultiTexCoord2svARB);
    CHECKCALL(glMultiTexCoord2svARB);
    DO_REAL_CALL(glMultiTexCoord2svARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord2svARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord2svARB);
}

void GLAPIENTRY glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3d);
    _COUNT(APICall_glMultiTexCoord3d);
    CHECKCALL(glMultiTexCoord3d);
    DO_REAL_CALL(glMultiTexCoord3d(target,s,t,r));
    _W.writeAPICall(APICall_glMultiTexCoord3d);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3d);
}

void GLAPIENTRY glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3dARB);
    _COUNT(APICall_glMultiTexCoord3dARB);
    CHECKCALL(glMultiTexCoord3dARB);
    DO_REAL_CALL(glMultiTexCoord3dARB(target,s,t,r));
    _W.writeAPICall(APICall_glMultiTexCoord3dARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3dARB);
}

void GLAPIENTRY glMultiTexCoord3dv(GLenum target, const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3dv);
    _COUNT(APICall_glMultiTexCoord3dv);
    CHECKCALL(glMultiTexCoord3dv);
    DO_REAL_CALL(glMultiTexCoord3dv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord3dv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3dv);
}

void GLAPIENTRY glMultiTexCoord3dvARB(GLenum target, const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3dvARB);
    _COUNT(APICall_glMultiTexCoord3dvARB);
    CHECKCALL(glMultiTexCoord3dvARB);
    DO_REAL_CALL(glMultiTexCoord3dvARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord3dvARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3dvARB);
}

void GLAPIENTRY glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3f);
    _COUNT(APICall_glMultiTexCoord3f);
    CHECKCALL(glMultiTexCoord3f);
    DO_REAL_CALL(glMultiTexCoord3f(target,s,t,r));
    _W.writeAPICall(APICall_glMultiTexCoord3f);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3f);
}

void GLAPIENTRY glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3fARB);
    _COUNT(APICall_glMultiTexCoord3fARB);
    CHECKCALL(glMultiTexCoord3fARB);
    DO_REAL_CALL(glMultiTexCoord3fARB(target,s,t,r));
    _W.writeAPICall(APICall_glMultiTexCoord3fARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3fARB);
}

void GLAPIENTRY glMultiTexCoord3fv(GLenum target, const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3fv);
    _COUNT(APICall_glMultiTexCoord3fv);
    CHECKCALL(glMultiTexCoord3fv);
    DO_REAL_CALL(glMultiTexCoord3fv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord3fv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3fv);
}

void GLAPIENTRY glMultiTexCoord3fvARB(GLenum target, const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3fvARB);
    _COUNT(APICall_glMultiTexCoord3fvARB);
    CHECKCALL(glMultiTexCoord3fvARB);
    DO_REAL_CALL(glMultiTexCoord3fvARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord3fvARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3fvARB);
}

void GLAPIENTRY glMultiTexCoord3hNV(GLenum _p0, GLhalfNV _p1, GLhalfNV _p2, GLhalfNV _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3hNV);
    _COUNT(APICall_glMultiTexCoord3hNV);
    CHECKCALL(glMultiTexCoord3hNV);
    DO_REAL_CALL(glMultiTexCoord3hNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexCoord3hNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3hNV);
}

void GLAPIENTRY glMultiTexCoord3hvNV(GLenum _p0, const GLhalfNV *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3hvNV);
    _COUNT(APICall_glMultiTexCoord3hvNV);
    CHECKCALL(glMultiTexCoord3hvNV);
    DO_REAL_CALL(glMultiTexCoord3hvNV(_p0,_p1));
    _W.writeAPICall(APICall_glMultiTexCoord3hvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3hvNV);
}

void GLAPIENTRY glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3i);
    _COUNT(APICall_glMultiTexCoord3i);
    CHECKCALL(glMultiTexCoord3i);
    DO_REAL_CALL(glMultiTexCoord3i(target,s,t,r));
    _W.writeAPICall(APICall_glMultiTexCoord3i);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3i);
}

void GLAPIENTRY glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3iARB);
    _COUNT(APICall_glMultiTexCoord3iARB);
    CHECKCALL(glMultiTexCoord3iARB);
    DO_REAL_CALL(glMultiTexCoord3iARB(target,s,t,r));
    _W.writeAPICall(APICall_glMultiTexCoord3iARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3iARB);
}

void GLAPIENTRY glMultiTexCoord3iv(GLenum target, const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3iv);
    _COUNT(APICall_glMultiTexCoord3iv);
    CHECKCALL(glMultiTexCoord3iv);
    DO_REAL_CALL(glMultiTexCoord3iv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord3iv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3iv);
}

void GLAPIENTRY glMultiTexCoord3ivARB(GLenum target, const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3ivARB);
    _COUNT(APICall_glMultiTexCoord3ivARB);
    CHECKCALL(glMultiTexCoord3ivARB);
    DO_REAL_CALL(glMultiTexCoord3ivARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord3ivARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3ivARB);
}

void GLAPIENTRY glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3s);
    _COUNT(APICall_glMultiTexCoord3s);
    CHECKCALL(glMultiTexCoord3s);
    DO_REAL_CALL(glMultiTexCoord3s(target,s,t,r));
    _W.writeAPICall(APICall_glMultiTexCoord3s);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3s);
}

void GLAPIENTRY glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3sARB);
    _COUNT(APICall_glMultiTexCoord3sARB);
    CHECKCALL(glMultiTexCoord3sARB);
    DO_REAL_CALL(glMultiTexCoord3sARB(target,s,t,r));
    _W.writeAPICall(APICall_glMultiTexCoord3sARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3sARB);
}

void GLAPIENTRY glMultiTexCoord3sv(GLenum target, const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3sv);
    _COUNT(APICall_glMultiTexCoord3sv);
    CHECKCALL(glMultiTexCoord3sv);
    DO_REAL_CALL(glMultiTexCoord3sv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord3sv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3sv);
}

void GLAPIENTRY glMultiTexCoord3svARB(GLenum target, const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord3svARB);
    _COUNT(APICall_glMultiTexCoord3svARB);
    CHECKCALL(glMultiTexCoord3svARB);
    DO_REAL_CALL(glMultiTexCoord3svARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord3svARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord3svARB);
}

void GLAPIENTRY glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4d);
    _COUNT(APICall_glMultiTexCoord4d);
    CHECKCALL(glMultiTexCoord4d);
    DO_REAL_CALL(glMultiTexCoord4d(target,s,t,r,q));
    _W.writeAPICall(APICall_glMultiTexCoord4d);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4d);
}

void GLAPIENTRY glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4dARB);
    _COUNT(APICall_glMultiTexCoord4dARB);
    CHECKCALL(glMultiTexCoord4dARB);
    DO_REAL_CALL(glMultiTexCoord4dARB(target,s,t,r,q));
    _W.writeAPICall(APICall_glMultiTexCoord4dARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4dARB);
}

void GLAPIENTRY glMultiTexCoord4dv(GLenum target, const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4dv);
    _COUNT(APICall_glMultiTexCoord4dv);
    CHECKCALL(glMultiTexCoord4dv);
    DO_REAL_CALL(glMultiTexCoord4dv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord4dv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4dv);
}

void GLAPIENTRY glMultiTexCoord4dvARB(GLenum target, const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4dvARB);
    _COUNT(APICall_glMultiTexCoord4dvARB);
    CHECKCALL(glMultiTexCoord4dvARB);
    DO_REAL_CALL(glMultiTexCoord4dvARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord4dvARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4dvARB);
}

void GLAPIENTRY glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4f);
    _COUNT(APICall_glMultiTexCoord4f);
    CHECKCALL(glMultiTexCoord4f);
    DO_REAL_CALL(glMultiTexCoord4f(target,s,t,r,q));
    _W.writeAPICall(APICall_glMultiTexCoord4f);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4f);
}

void GLAPIENTRY glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4fARB);
    _COUNT(APICall_glMultiTexCoord4fARB);
    CHECKCALL(glMultiTexCoord4fARB);
    DO_REAL_CALL(glMultiTexCoord4fARB(target,s,t,r,q));
    _W.writeAPICall(APICall_glMultiTexCoord4fARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4fARB);
}

void GLAPIENTRY glMultiTexCoord4fv(GLenum target, const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4fv);
    _COUNT(APICall_glMultiTexCoord4fv);
    CHECKCALL(glMultiTexCoord4fv);
    DO_REAL_CALL(glMultiTexCoord4fv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord4fv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4fv);
}

void GLAPIENTRY glMultiTexCoord4fvARB(GLenum target, const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4fvARB);
    _COUNT(APICall_glMultiTexCoord4fvARB);
    CHECKCALL(glMultiTexCoord4fvARB);
    DO_REAL_CALL(glMultiTexCoord4fvARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord4fvARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4fvARB);
}

void GLAPIENTRY glMultiTexCoord4hNV(GLenum _p0, GLhalfNV _p1, GLhalfNV _p2, GLhalfNV _p3, GLhalfNV _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4hNV);
    _COUNT(APICall_glMultiTexCoord4hNV);
    CHECKCALL(glMultiTexCoord4hNV);
    DO_REAL_CALL(glMultiTexCoord4hNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glMultiTexCoord4hNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4hNV);
}

void GLAPIENTRY glMultiTexCoord4hvNV(GLenum _p0, const GLhalfNV *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4hvNV);
    _COUNT(APICall_glMultiTexCoord4hvNV);
    CHECKCALL(glMultiTexCoord4hvNV);
    DO_REAL_CALL(glMultiTexCoord4hvNV(_p0,_p1));
    _W.writeAPICall(APICall_glMultiTexCoord4hvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4hvNV);
}

void GLAPIENTRY glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4i);
    _COUNT(APICall_glMultiTexCoord4i);
    CHECKCALL(glMultiTexCoord4i);
    DO_REAL_CALL(glMultiTexCoord4i(target,s,t,r,q));
    _W.writeAPICall(APICall_glMultiTexCoord4i);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4i);
}

void GLAPIENTRY glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4iARB);
    _COUNT(APICall_glMultiTexCoord4iARB);
    CHECKCALL(glMultiTexCoord4iARB);
    DO_REAL_CALL(glMultiTexCoord4iARB(target,s,t,r,q));
    _W.writeAPICall(APICall_glMultiTexCoord4iARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4iARB);
}

void GLAPIENTRY glMultiTexCoord4iv(GLenum target, const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4iv);
    _COUNT(APICall_glMultiTexCoord4iv);
    CHECKCALL(glMultiTexCoord4iv);
    DO_REAL_CALL(glMultiTexCoord4iv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord4iv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4iv);
}

void GLAPIENTRY glMultiTexCoord4ivARB(GLenum target, const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4ivARB);
    _COUNT(APICall_glMultiTexCoord4ivARB);
    CHECKCALL(glMultiTexCoord4ivARB);
    DO_REAL_CALL(glMultiTexCoord4ivARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord4ivARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4ivARB);
}

void GLAPIENTRY glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4s);
    _COUNT(APICall_glMultiTexCoord4s);
    CHECKCALL(glMultiTexCoord4s);
    DO_REAL_CALL(glMultiTexCoord4s(target,s,t,r,q));
    _W.writeAPICall(APICall_glMultiTexCoord4s);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4s);
}

void GLAPIENTRY glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4sARB);
    _COUNT(APICall_glMultiTexCoord4sARB);
    CHECKCALL(glMultiTexCoord4sARB);
    DO_REAL_CALL(glMultiTexCoord4sARB(target,s,t,r,q));
    _W.writeAPICall(APICall_glMultiTexCoord4sARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4sARB);
}

void GLAPIENTRY glMultiTexCoord4sv(GLenum target, const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4sv);
    _COUNT(APICall_glMultiTexCoord4sv);
    CHECKCALL(glMultiTexCoord4sv);
    DO_REAL_CALL(glMultiTexCoord4sv(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord4sv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4sv);
}

void GLAPIENTRY glMultiTexCoord4svARB(GLenum target, const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoord4svARB);
    _COUNT(APICall_glMultiTexCoord4svARB);
    CHECKCALL(glMultiTexCoord4svARB);
    DO_REAL_CALL(glMultiTexCoord4svARB(target,v));
    _W.writeAPICall(APICall_glMultiTexCoord4svARB);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoord4svARB);
}

void GLAPIENTRY glMultiTexCoordPointerEXT(GLenum _p0, GLint _p1, GLenum _p2, GLsizei _p3, const GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexCoordPointerEXT);
    _COUNT(APICall_glMultiTexCoordPointerEXT);
    CHECKCALL(glMultiTexCoordPointerEXT);
    DO_REAL_CALL(glMultiTexCoordPointerEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glMultiTexCoordPointerEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexCoordPointerEXT);
}

void GLAPIENTRY glMultiTexEnvfEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexEnvfEXT);
    _COUNT(APICall_glMultiTexEnvfEXT);
    CHECKCALL(glMultiTexEnvfEXT);
    DO_REAL_CALL(glMultiTexEnvfEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexEnvfEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexEnvfEXT);
}

void GLAPIENTRY glMultiTexEnvfvEXT(GLenum _p0, GLenum _p1, GLenum _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexEnvfvEXT);
    _COUNT(APICall_glMultiTexEnvfvEXT);
    CHECKCALL(glMultiTexEnvfvEXT);
    DO_REAL_CALL(glMultiTexEnvfvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexEnvfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexEnvfvEXT);
}

void GLAPIENTRY glMultiTexEnviEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexEnviEXT);
    _COUNT(APICall_glMultiTexEnviEXT);
    CHECKCALL(glMultiTexEnviEXT);
    DO_REAL_CALL(glMultiTexEnviEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexEnviEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexEnviEXT);
}

void GLAPIENTRY glMultiTexEnvivEXT(GLenum _p0, GLenum _p1, GLenum _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexEnvivEXT);
    _COUNT(APICall_glMultiTexEnvivEXT);
    CHECKCALL(glMultiTexEnvivEXT);
    DO_REAL_CALL(glMultiTexEnvivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexEnvivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexEnvivEXT);
}

void GLAPIENTRY glMultiTexGendEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLdouble _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexGendEXT);
    _COUNT(APICall_glMultiTexGendEXT);
    CHECKCALL(glMultiTexGendEXT);
    DO_REAL_CALL(glMultiTexGendEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexGendEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexGendEXT);
}

void GLAPIENTRY glMultiTexGendvEXT(GLenum _p0, GLenum _p1, GLenum _p2, const GLdouble *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexGendvEXT);
    _COUNT(APICall_glMultiTexGendvEXT);
    CHECKCALL(glMultiTexGendvEXT);
    DO_REAL_CALL(glMultiTexGendvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexGendvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexGendvEXT);
}

void GLAPIENTRY glMultiTexGenfEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexGenfEXT);
    _COUNT(APICall_glMultiTexGenfEXT);
    CHECKCALL(glMultiTexGenfEXT);
    DO_REAL_CALL(glMultiTexGenfEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexGenfEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexGenfEXT);
}

void GLAPIENTRY glMultiTexGenfvEXT(GLenum _p0, GLenum _p1, GLenum _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexGenfvEXT);
    _COUNT(APICall_glMultiTexGenfvEXT);
    CHECKCALL(glMultiTexGenfvEXT);
    DO_REAL_CALL(glMultiTexGenfvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexGenfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexGenfvEXT);
}

void GLAPIENTRY glMultiTexGeniEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexGeniEXT);
    _COUNT(APICall_glMultiTexGeniEXT);
    CHECKCALL(glMultiTexGeniEXT);
    DO_REAL_CALL(glMultiTexGeniEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexGeniEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexGeniEXT);
}

void GLAPIENTRY glMultiTexGenivEXT(GLenum _p0, GLenum _p1, GLenum _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexGenivEXT);
    _COUNT(APICall_glMultiTexGenivEXT);
    CHECKCALL(glMultiTexGenivEXT);
    DO_REAL_CALL(glMultiTexGenivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexGenivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexGenivEXT);
}

void GLAPIENTRY glMultiTexImage1DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLint _p5, GLenum _p6, GLenum _p7, const GLvoid *_p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexImage1DEXT);
    _COUNT(APICall_glMultiTexImage1DEXT);
    CHECKCALL(glMultiTexImage1DEXT);
    DO_REAL_CALL(glMultiTexImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glMultiTexImage1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.writeEnum(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.writeUnknown(&_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexImage1DEXT);
}

void GLAPIENTRY glMultiTexImage2DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLsizei _p5, GLint _p6, GLenum _p7, GLenum _p8, const GLvoid *_p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexImage2DEXT);
    _COUNT(APICall_glMultiTexImage2DEXT);
    CHECKCALL(glMultiTexImage2DEXT);
    DO_REAL_CALL(glMultiTexImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glMultiTexImage2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.writeUnknown(&_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexImage2DEXT);
}

void GLAPIENTRY glMultiTexImage3DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLsizei _p5, GLsizei _p6, GLint _p7, GLenum _p8, GLenum _p9, const GLvoid *_p10)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexImage3DEXT);
    _COUNT(APICall_glMultiTexImage3DEXT);
    CHECKCALL(glMultiTexImage3DEXT);
    DO_REAL_CALL(glMultiTexImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10));
    _W.writeAPICall(APICall_glMultiTexImage3DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(",");
    _W.writeUnknown(&_p10);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexImage3DEXT);
}

void GLAPIENTRY glMultiTexParameterIivEXT(GLenum _p0, GLenum _p1, GLenum _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexParameterIivEXT);
    _COUNT(APICall_glMultiTexParameterIivEXT);
    CHECKCALL(glMultiTexParameterIivEXT);
    DO_REAL_CALL(glMultiTexParameterIivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexParameterIivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexParameterIivEXT);
}

void GLAPIENTRY glMultiTexParameterIuivEXT(GLenum _p0, GLenum _p1, GLenum _p2, const GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexParameterIuivEXT);
    _COUNT(APICall_glMultiTexParameterIuivEXT);
    CHECKCALL(glMultiTexParameterIuivEXT);
    DO_REAL_CALL(glMultiTexParameterIuivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexParameterIuivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexParameterIuivEXT);
}

void GLAPIENTRY glMultiTexParameterfEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexParameterfEXT);
    _COUNT(APICall_glMultiTexParameterfEXT);
    CHECKCALL(glMultiTexParameterfEXT);
    DO_REAL_CALL(glMultiTexParameterfEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexParameterfEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexParameterfEXT);
}

void GLAPIENTRY glMultiTexParameterfvEXT(GLenum _p0, GLenum _p1, GLenum _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexParameterfvEXT);
    _COUNT(APICall_glMultiTexParameterfvEXT);
    CHECKCALL(glMultiTexParameterfvEXT);
    DO_REAL_CALL(glMultiTexParameterfvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexParameterfvEXT);
}

void GLAPIENTRY glMultiTexParameteriEXT(GLenum _p0, GLenum _p1, GLenum _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexParameteriEXT);
    _COUNT(APICall_glMultiTexParameteriEXT);
    CHECKCALL(glMultiTexParameteriEXT);
    DO_REAL_CALL(glMultiTexParameteriEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexParameteriEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexParameteriEXT);
}

void GLAPIENTRY glMultiTexParameterivEXT(GLenum _p0, GLenum _p1, GLenum _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexParameterivEXT);
    _COUNT(APICall_glMultiTexParameterivEXT);
    CHECKCALL(glMultiTexParameterivEXT);
    DO_REAL_CALL(glMultiTexParameterivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glMultiTexParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexParameterivEXT);
}

void GLAPIENTRY glMultiTexRenderbufferEXT(GLenum _p0, GLenum _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexRenderbufferEXT);
    _COUNT(APICall_glMultiTexRenderbufferEXT);
    CHECKCALL(glMultiTexRenderbufferEXT);
    DO_REAL_CALL(glMultiTexRenderbufferEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glMultiTexRenderbufferEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexRenderbufferEXT);
}

void GLAPIENTRY glMultiTexSubImage1DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLsizei _p4, GLenum _p5, GLenum _p6, const GLvoid *_p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexSubImage1DEXT);
    _COUNT(APICall_glMultiTexSubImage1DEXT);
    CHECKCALL(glMultiTexSubImage1DEXT);
    DO_REAL_CALL(glMultiTexSubImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glMultiTexSubImage1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.writeEnum(_p6);
    _W.writeMark(",");
    _W.writeUnknown(&_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexSubImage1DEXT);
}

void GLAPIENTRY glMultiTexSubImage2DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLsizei _p5, GLsizei _p6, GLenum _p7, GLenum _p8, const GLvoid *_p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexSubImage2DEXT);
    _COUNT(APICall_glMultiTexSubImage2DEXT);
    CHECKCALL(glMultiTexSubImage2DEXT);
    DO_REAL_CALL(glMultiTexSubImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glMultiTexSubImage2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.writeUnknown(&_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexSubImage2DEXT);
}

void GLAPIENTRY glMultiTexSubImage3DEXT(GLenum _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLsizei _p6, GLsizei _p7, GLsizei _p8, GLenum _p9, GLenum _p10, const GLvoid *_p11)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glMultiTexSubImage3DEXT);
    _COUNT(APICall_glMultiTexSubImage3DEXT);
    CHECKCALL(glMultiTexSubImage3DEXT);
    DO_REAL_CALL(glMultiTexSubImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11));
    _W.writeAPICall(APICall_glMultiTexSubImage3DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(",");
    _W.writeEnum(_p10);
    _W.writeMark(",");
    _W.writeUnknown(&_p11);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glMultiTexSubImage3DEXT);
}

void GLAPIENTRY glNamedBufferDataEXT(GLuint _p0, GLsizeiptr _p1, const GLvoid *_p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedBufferDataEXT);
    _COUNT(APICall_glNamedBufferDataEXT);
    CHECKCALL(glNamedBufferDataEXT);
    DO_REAL_CALL(glNamedBufferDataEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNamedBufferDataEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedBufferDataEXT);
}

void GLAPIENTRY glNamedBufferSubDataEXT(GLuint _p0, GLintptr _p1, GLsizeiptr _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedBufferSubDataEXT);
    _COUNT(APICall_glNamedBufferSubDataEXT);
    CHECKCALL(glNamedBufferSubDataEXT);
    DO_REAL_CALL(glNamedBufferSubDataEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNamedBufferSubDataEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedBufferSubDataEXT);
}

void GLAPIENTRY glNamedFramebufferRenderbufferEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedFramebufferRenderbufferEXT);
    _COUNT(APICall_glNamedFramebufferRenderbufferEXT);
    CHECKCALL(glNamedFramebufferRenderbufferEXT);
    DO_REAL_CALL(glNamedFramebufferRenderbufferEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNamedFramebufferRenderbufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedFramebufferRenderbufferEXT);
}

void GLAPIENTRY glNamedFramebufferTexture1DEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLuint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedFramebufferTexture1DEXT);
    _COUNT(APICall_glNamedFramebufferTexture1DEXT);
    CHECKCALL(glNamedFramebufferTexture1DEXT);
    DO_REAL_CALL(glNamedFramebufferTexture1DEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glNamedFramebufferTexture1DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedFramebufferTexture1DEXT);
}

void GLAPIENTRY glNamedFramebufferTexture2DEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLuint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedFramebufferTexture2DEXT);
    _COUNT(APICall_glNamedFramebufferTexture2DEXT);
    CHECKCALL(glNamedFramebufferTexture2DEXT);
    DO_REAL_CALL(glNamedFramebufferTexture2DEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glNamedFramebufferTexture2DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedFramebufferTexture2DEXT);
}

void GLAPIENTRY glNamedFramebufferTexture3DEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLuint _p3, GLint _p4, GLint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedFramebufferTexture3DEXT);
    _COUNT(APICall_glNamedFramebufferTexture3DEXT);
    CHECKCALL(glNamedFramebufferTexture3DEXT);
    DO_REAL_CALL(glNamedFramebufferTexture3DEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glNamedFramebufferTexture3DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedFramebufferTexture3DEXT);
}

void GLAPIENTRY glNamedFramebufferTextureEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedFramebufferTextureEXT);
    _COUNT(APICall_glNamedFramebufferTextureEXT);
    CHECKCALL(glNamedFramebufferTextureEXT);
    DO_REAL_CALL(glNamedFramebufferTextureEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNamedFramebufferTextureEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedFramebufferTextureEXT);
}

void GLAPIENTRY glNamedFramebufferTextureFaceEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLint _p3, GLenum _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedFramebufferTextureFaceEXT);
    _COUNT(APICall_glNamedFramebufferTextureFaceEXT);
    CHECKCALL(glNamedFramebufferTextureFaceEXT);
    DO_REAL_CALL(glNamedFramebufferTextureFaceEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glNamedFramebufferTextureFaceEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedFramebufferTextureFaceEXT);
}

void GLAPIENTRY glNamedFramebufferTextureLayerEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedFramebufferTextureLayerEXT);
    _COUNT(APICall_glNamedFramebufferTextureLayerEXT);
    CHECKCALL(glNamedFramebufferTextureLayerEXT);
    DO_REAL_CALL(glNamedFramebufferTextureLayerEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glNamedFramebufferTextureLayerEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedFramebufferTextureLayerEXT);
}

void GLAPIENTRY glNamedProgramLocalParameter4dEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLdouble _p3, GLdouble _p4, GLdouble _p5, GLdouble _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParameter4dEXT);
    _COUNT(APICall_glNamedProgramLocalParameter4dEXT);
    CHECKCALL(glNamedProgramLocalParameter4dEXT);
    DO_REAL_CALL(glNamedProgramLocalParameter4dEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glNamedProgramLocalParameter4dEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParameter4dEXT);
}

void GLAPIENTRY glNamedProgramLocalParameter4dvEXT(GLuint _p0, GLenum _p1, GLuint _p2, const GLdouble *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParameter4dvEXT);
    _COUNT(APICall_glNamedProgramLocalParameter4dvEXT);
    CHECKCALL(glNamedProgramLocalParameter4dvEXT);
    DO_REAL_CALL(glNamedProgramLocalParameter4dvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNamedProgramLocalParameter4dvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParameter4dvEXT);
}

void GLAPIENTRY glNamedProgramLocalParameter4fEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLfloat _p3, GLfloat _p4, GLfloat _p5, GLfloat _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParameter4fEXT);
    _COUNT(APICall_glNamedProgramLocalParameter4fEXT);
    CHECKCALL(glNamedProgramLocalParameter4fEXT);
    DO_REAL_CALL(glNamedProgramLocalParameter4fEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glNamedProgramLocalParameter4fEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParameter4fEXT);
}

void GLAPIENTRY glNamedProgramLocalParameter4fvEXT(GLuint _p0, GLenum _p1, GLuint _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParameter4fvEXT);
    _COUNT(APICall_glNamedProgramLocalParameter4fvEXT);
    CHECKCALL(glNamedProgramLocalParameter4fvEXT);
    DO_REAL_CALL(glNamedProgramLocalParameter4fvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNamedProgramLocalParameter4fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParameter4fvEXT);
}

void GLAPIENTRY glNamedProgramLocalParameterI4iEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLint _p3, GLint _p4, GLint _p5, GLint _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParameterI4iEXT);
    _COUNT(APICall_glNamedProgramLocalParameterI4iEXT);
    CHECKCALL(glNamedProgramLocalParameterI4iEXT);
    DO_REAL_CALL(glNamedProgramLocalParameterI4iEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glNamedProgramLocalParameterI4iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParameterI4iEXT);
}

void GLAPIENTRY glNamedProgramLocalParameterI4ivEXT(GLuint _p0, GLenum _p1, GLuint _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParameterI4ivEXT);
    _COUNT(APICall_glNamedProgramLocalParameterI4ivEXT);
    CHECKCALL(glNamedProgramLocalParameterI4ivEXT);
    DO_REAL_CALL(glNamedProgramLocalParameterI4ivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNamedProgramLocalParameterI4ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParameterI4ivEXT);
}

void GLAPIENTRY glNamedProgramLocalParameterI4uiEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5, GLuint _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParameterI4uiEXT);
    _COUNT(APICall_glNamedProgramLocalParameterI4uiEXT);
    CHECKCALL(glNamedProgramLocalParameterI4uiEXT);
    DO_REAL_CALL(glNamedProgramLocalParameterI4uiEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glNamedProgramLocalParameterI4uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParameterI4uiEXT);
}

void GLAPIENTRY glNamedProgramLocalParameterI4uivEXT(GLuint _p0, GLenum _p1, GLuint _p2, const GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParameterI4uivEXT);
    _COUNT(APICall_glNamedProgramLocalParameterI4uivEXT);
    CHECKCALL(glNamedProgramLocalParameterI4uivEXT);
    DO_REAL_CALL(glNamedProgramLocalParameterI4uivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNamedProgramLocalParameterI4uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParameterI4uivEXT);
}

void GLAPIENTRY glNamedProgramLocalParameters4fvEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLsizei _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParameters4fvEXT);
    _COUNT(APICall_glNamedProgramLocalParameters4fvEXT);
    CHECKCALL(glNamedProgramLocalParameters4fvEXT);
    DO_REAL_CALL(glNamedProgramLocalParameters4fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glNamedProgramLocalParameters4fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParameters4fvEXT);
}

void GLAPIENTRY glNamedProgramLocalParametersI4ivEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLsizei _p3, const GLint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParametersI4ivEXT);
    _COUNT(APICall_glNamedProgramLocalParametersI4ivEXT);
    CHECKCALL(glNamedProgramLocalParametersI4ivEXT);
    DO_REAL_CALL(glNamedProgramLocalParametersI4ivEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glNamedProgramLocalParametersI4ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParametersI4ivEXT);
}

void GLAPIENTRY glNamedProgramLocalParametersI4uivEXT(GLuint _p0, GLenum _p1, GLuint _p2, GLsizei _p3, const GLuint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramLocalParametersI4uivEXT);
    _COUNT(APICall_glNamedProgramLocalParametersI4uivEXT);
    CHECKCALL(glNamedProgramLocalParametersI4uivEXT);
    DO_REAL_CALL(glNamedProgramLocalParametersI4uivEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glNamedProgramLocalParametersI4uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramLocalParametersI4uivEXT);
}

void GLAPIENTRY glNamedProgramStringEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLsizei _p3, const GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedProgramStringEXT);
    _COUNT(APICall_glNamedProgramStringEXT);
    CHECKCALL(glNamedProgramStringEXT);
    DO_REAL_CALL(glNamedProgramStringEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glNamedProgramStringEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedProgramStringEXT);
}

void GLAPIENTRY glNamedRenderbufferStorageEXT(GLuint _p0, GLenum _p1, GLsizei _p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedRenderbufferStorageEXT);
    _COUNT(APICall_glNamedRenderbufferStorageEXT);
    CHECKCALL(glNamedRenderbufferStorageEXT);
    DO_REAL_CALL(glNamedRenderbufferStorageEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNamedRenderbufferStorageEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedRenderbufferStorageEXT);
}

void GLAPIENTRY glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint _p0, GLsizei _p1, GLsizei _p2, GLenum _p3, GLsizei _p4, GLsizei _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedRenderbufferStorageMultisampleCoverageEXT);
    _COUNT(APICall_glNamedRenderbufferStorageMultisampleCoverageEXT);
    CHECKCALL(glNamedRenderbufferStorageMultisampleCoverageEXT);
    DO_REAL_CALL(glNamedRenderbufferStorageMultisampleCoverageEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glNamedRenderbufferStorageMultisampleCoverageEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedRenderbufferStorageMultisampleCoverageEXT);
}

void GLAPIENTRY glNamedRenderbufferStorageMultisampleEXT(GLuint _p0, GLsizei _p1, GLenum _p2, GLsizei _p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNamedRenderbufferStorageMultisampleEXT);
    _COUNT(APICall_glNamedRenderbufferStorageMultisampleEXT);
    CHECKCALL(glNamedRenderbufferStorageMultisampleEXT);
    DO_REAL_CALL(glNamedRenderbufferStorageMultisampleEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glNamedRenderbufferStorageMultisampleEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNamedRenderbufferStorageMultisampleEXT);
}

void GLAPIENTRY glNewList(GLuint list, GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNewList);
    _COUNT(APICall_glNewList);
    CHECKCALL(glNewList);
    DO_REAL_CALL(glNewList(list,mode));
    _W.writeAPICall(APICall_glNewList);
    _W.writeMark("(");
    _W.write(list);
    _W.writeMark(",");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNewList);
}

GLuint GLAPIENTRY glNewObjectBufferATI(GLsizei _p0, const GLvoid *_p1, GLenum _p2)
{
    GLuint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNewObjectBufferATI);
    _COUNT(APICall_glNewObjectBufferATI);
    CHECKCALL(glNewObjectBufferATI);
    _result = DO_REAL_CALL(glNewObjectBufferATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glNewObjectBufferATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNewObjectBufferATI);
    return _result;
}

void GLAPIENTRY glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3b);
    _COUNT(APICall_glNormal3b);
    CHECKCALL(glNormal3b);
    DO_REAL_CALL(glNormal3b(nx,ny,nz));
    _W.writeAPICall(APICall_glNormal3b);
    _W.writeMark("(");
    _W.write(nx);
    _W.writeMark(",");
    _W.write(ny);
    _W.writeMark(",");
    _W.write(nz);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3b);
}

void GLAPIENTRY glNormal3bv(const GLbyte *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3bv);
    _COUNT(APICall_glNormal3bv);
    CHECKCALL(glNormal3bv);
    DO_REAL_CALL(glNormal3bv(v));
    _W.writeAPICall(APICall_glNormal3bv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3bv);
}

void GLAPIENTRY glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3d);
    _COUNT(APICall_glNormal3d);
    CHECKCALL(glNormal3d);
    DO_REAL_CALL(glNormal3d(nx,ny,nz));
    _W.writeAPICall(APICall_glNormal3d);
    _W.writeMark("(");
    _W.write(nx);
    _W.writeMark(",");
    _W.write(ny);
    _W.writeMark(",");
    _W.write(nz);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3d);
}

void GLAPIENTRY glNormal3dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3dv);
    _COUNT(APICall_glNormal3dv);
    CHECKCALL(glNormal3dv);
    DO_REAL_CALL(glNormal3dv(v));
    _W.writeAPICall(APICall_glNormal3dv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3dv);
}

void GLAPIENTRY glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3f);
    _COUNT(APICall_glNormal3f);
    CHECKCALL(glNormal3f);
    DO_REAL_CALL(glNormal3f(nx,ny,nz));
    _W.writeAPICall(APICall_glNormal3f);
    _W.writeMark("(");
    _W.write(nx);
    _W.writeMark(",");
    _W.write(ny);
    _W.writeMark(",");
    _W.write(nz);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3f);
}

void GLAPIENTRY glNormal3fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3fv);
    _COUNT(APICall_glNormal3fv);
    CHECKCALL(glNormal3fv);
    DO_REAL_CALL(glNormal3fv(v));
    _W.writeAPICall(APICall_glNormal3fv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3fv);
}

void GLAPIENTRY glNormal3hNV(GLhalfNV _p0, GLhalfNV _p1, GLhalfNV _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3hNV);
    _COUNT(APICall_glNormal3hNV);
    CHECKCALL(glNormal3hNV);
    DO_REAL_CALL(glNormal3hNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glNormal3hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3hNV);
}

void GLAPIENTRY glNormal3hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3hvNV);
    _COUNT(APICall_glNormal3hvNV);
    CHECKCALL(glNormal3hvNV);
    DO_REAL_CALL(glNormal3hvNV(_p0));
    _W.writeAPICall(APICall_glNormal3hvNV);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3hvNV);
}

void GLAPIENTRY glNormal3i(GLint nx, GLint ny, GLint nz)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3i);
    _COUNT(APICall_glNormal3i);
    CHECKCALL(glNormal3i);
    DO_REAL_CALL(glNormal3i(nx,ny,nz));
    _W.writeAPICall(APICall_glNormal3i);
    _W.writeMark("(");
    _W.write(nx);
    _W.writeMark(",");
    _W.write(ny);
    _W.writeMark(",");
    _W.write(nz);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3i);
}

void GLAPIENTRY glNormal3iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3iv);
    _COUNT(APICall_glNormal3iv);
    CHECKCALL(glNormal3iv);
    DO_REAL_CALL(glNormal3iv(v));
    _W.writeAPICall(APICall_glNormal3iv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3iv);
}

void GLAPIENTRY glNormal3s(GLshort nx, GLshort ny, GLshort nz)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3s);
    _COUNT(APICall_glNormal3s);
    CHECKCALL(glNormal3s);
    DO_REAL_CALL(glNormal3s(nx,ny,nz));
    _W.writeAPICall(APICall_glNormal3s);
    _W.writeMark("(");
    _W.write(nx);
    _W.writeMark(",");
    _W.write(ny);
    _W.writeMark(",");
    _W.write(nz);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3s);
}

void GLAPIENTRY glNormal3sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormal3sv);
    _COUNT(APICall_glNormal3sv);
    CHECKCALL(glNormal3sv);
    DO_REAL_CALL(glNormal3sv(v));
    _W.writeAPICall(APICall_glNormal3sv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormal3sv);
}

void GLAPIENTRY glNormalPointer(GLenum type, GLsizei stride, const GLvoid *ptr)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalPointer);
    _COUNT(APICall_glNormalPointer);
    CHECKCALL(glNormalPointer);
    DO_REAL_CALL(glNormalPointer(type,stride,ptr));
    _W.writeAPICall(APICall_glNormalPointer);
    _W.writeMark("(");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.write(stride);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glNormalPointer_SPECIFIC(type,stride,ptr);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalPointer);
}

void GLAPIENTRY glNormalPointerEXT(GLenum _p0, GLsizei _p1, GLsizei _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalPointerEXT);
    _COUNT(APICall_glNormalPointerEXT);
    CHECKCALL(glNormalPointerEXT);
    DO_REAL_CALL(glNormalPointerEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNormalPointerEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalPointerEXT);
}

void GLAPIENTRY glNormalPointervINTEL(GLenum _p0, const GLvoid **_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalPointervINTEL);
    _COUNT(APICall_glNormalPointervINTEL);
    CHECKCALL(glNormalPointervINTEL);
    DO_REAL_CALL(glNormalPointervINTEL(_p0,_p1));
    _W.writeAPICall(APICall_glNormalPointervINTEL);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalPointervINTEL);
}

void GLAPIENTRY glNormalStream3bATI(GLenum _p0, GLbyte _p1, GLbyte _p2, GLbyte _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3bATI);
    _COUNT(APICall_glNormalStream3bATI);
    CHECKCALL(glNormalStream3bATI);
    DO_REAL_CALL(glNormalStream3bATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNormalStream3bATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3bATI);
}

void GLAPIENTRY glNormalStream3bvATI(GLenum _p0, const GLbyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3bvATI);
    _COUNT(APICall_glNormalStream3bvATI);
    CHECKCALL(glNormalStream3bvATI);
    DO_REAL_CALL(glNormalStream3bvATI(_p0,_p1));
    _W.writeAPICall(APICall_glNormalStream3bvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3bvATI);
}

void GLAPIENTRY glNormalStream3dATI(GLenum _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3dATI);
    _COUNT(APICall_glNormalStream3dATI);
    CHECKCALL(glNormalStream3dATI);
    DO_REAL_CALL(glNormalStream3dATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNormalStream3dATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3dATI);
}

void GLAPIENTRY glNormalStream3dvATI(GLenum _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3dvATI);
    _COUNT(APICall_glNormalStream3dvATI);
    CHECKCALL(glNormalStream3dvATI);
    DO_REAL_CALL(glNormalStream3dvATI(_p0,_p1));
    _W.writeAPICall(APICall_glNormalStream3dvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3dvATI);
}

void GLAPIENTRY glNormalStream3fATI(GLenum _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3fATI);
    _COUNT(APICall_glNormalStream3fATI);
    CHECKCALL(glNormalStream3fATI);
    DO_REAL_CALL(glNormalStream3fATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNormalStream3fATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3fATI);
}

void GLAPIENTRY glNormalStream3fvATI(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3fvATI);
    _COUNT(APICall_glNormalStream3fvATI);
    CHECKCALL(glNormalStream3fvATI);
    DO_REAL_CALL(glNormalStream3fvATI(_p0,_p1));
    _W.writeAPICall(APICall_glNormalStream3fvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3fvATI);
}

void GLAPIENTRY glNormalStream3iATI(GLenum _p0, GLint _p1, GLint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3iATI);
    _COUNT(APICall_glNormalStream3iATI);
    CHECKCALL(glNormalStream3iATI);
    DO_REAL_CALL(glNormalStream3iATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNormalStream3iATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3iATI);
}

void GLAPIENTRY glNormalStream3ivATI(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3ivATI);
    _COUNT(APICall_glNormalStream3ivATI);
    CHECKCALL(glNormalStream3ivATI);
    DO_REAL_CALL(glNormalStream3ivATI(_p0,_p1));
    _W.writeAPICall(APICall_glNormalStream3ivATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3ivATI);
}

void GLAPIENTRY glNormalStream3sATI(GLenum _p0, GLshort _p1, GLshort _p2, GLshort _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3sATI);
    _COUNT(APICall_glNormalStream3sATI);
    CHECKCALL(glNormalStream3sATI);
    DO_REAL_CALL(glNormalStream3sATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glNormalStream3sATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3sATI);
}

void GLAPIENTRY glNormalStream3svATI(GLenum _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glNormalStream3svATI);
    _COUNT(APICall_glNormalStream3svATI);
    CHECKCALL(glNormalStream3svATI);
    DO_REAL_CALL(glNormalStream3svATI(_p0,_p1));
    _W.writeAPICall(APICall_glNormalStream3svATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glNormalStream3svATI);
}

void GLAPIENTRY glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glOrtho);
    _COUNT(APICall_glOrtho);
    CHECKCALL(glOrtho);
    DO_REAL_CALL(glOrtho(left,right,bottom,top,near_val,far_val));
    _W.writeAPICall(APICall_glOrtho);
    _W.writeMark("(");
    _W.write(left);
    _W.writeMark(",");
    _W.write(right);
    _W.writeMark(",");
    _W.write(bottom);
    _W.writeMark(",");
    _W.write(top);
    _W.writeMark(",");
    _W.write(near_val);
    _W.writeMark(",");
    _W.write(far_val);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glOrtho);
}

void GLAPIENTRY glPNTrianglesfATI(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPNTrianglesfATI);
    _COUNT(APICall_glPNTrianglesfATI);
    CHECKCALL(glPNTrianglesfATI);
    DO_REAL_CALL(glPNTrianglesfATI(_p0,_p1));
    _W.writeAPICall(APICall_glPNTrianglesfATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPNTrianglesfATI);
}

void GLAPIENTRY glPNTrianglesiATI(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPNTrianglesiATI);
    _COUNT(APICall_glPNTrianglesiATI);
    CHECKCALL(glPNTrianglesiATI);
    DO_REAL_CALL(glPNTrianglesiATI(_p0,_p1));
    _W.writeAPICall(APICall_glPNTrianglesiATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPNTrianglesiATI);
}

void GLAPIENTRY glPassTexCoordATI(GLuint _p0, GLuint _p1, GLenum _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPassTexCoordATI);
    _COUNT(APICall_glPassTexCoordATI);
    CHECKCALL(glPassTexCoordATI);
    DO_REAL_CALL(glPassTexCoordATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glPassTexCoordATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPassTexCoordATI);
}

void GLAPIENTRY glPassThrough(GLfloat token)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPassThrough);
    _COUNT(APICall_glPassThrough);
    CHECKCALL(glPassThrough);
    DO_REAL_CALL(glPassThrough(token));
    _W.writeAPICall(APICall_glPassThrough);
    _W.writeMark("(");
    _W.write(token);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPassThrough);
}

void GLAPIENTRY glPauseTransformFeedbackNV()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPauseTransformFeedbackNV);
    _COUNT(APICall_glPauseTransformFeedbackNV);
    CHECKCALL(glPauseTransformFeedbackNV);
    DO_REAL_CALL(glPauseTransformFeedbackNV());
    _W.writeAPICall(APICall_glPauseTransformFeedbackNV);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPauseTransformFeedbackNV);
}

void GLAPIENTRY glPixelDataRangeNV(GLenum _p0, GLsizei _p1, GLvoid *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelDataRangeNV);
    _COUNT(APICall_glPixelDataRangeNV);
    CHECKCALL(glPixelDataRangeNV);
    DO_REAL_CALL(glPixelDataRangeNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glPixelDataRangeNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelDataRangeNV);
}

void GLAPIENTRY glPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat *values)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelMapfv);
    _COUNT(APICall_glPixelMapfv);
    CHECKCALL(glPixelMapfv);
    DO_REAL_CALL(glPixelMapfv(map,mapsize,values));
    _W.writeAPICall(APICall_glPixelMapfv);
    _W.writeMark("(");
    _W.writeEnum(map);
    _W.writeMark(",");
    _W.write(mapsize);
    _W.writeMark(",");
    _W.writeUnknown(&values);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelMapfv);
}

void GLAPIENTRY glPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint *values)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelMapuiv);
    _COUNT(APICall_glPixelMapuiv);
    CHECKCALL(glPixelMapuiv);
    DO_REAL_CALL(glPixelMapuiv(map,mapsize,values));
    _W.writeAPICall(APICall_glPixelMapuiv);
    _W.writeMark("(");
    _W.writeEnum(map);
    _W.writeMark(",");
    _W.write(mapsize);
    _W.writeMark(",");
    _W.writeUnknown(&values);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelMapuiv);
}

void GLAPIENTRY glPixelMapusv(GLenum map, GLsizei mapsize, const GLushort *values)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelMapusv);
    _COUNT(APICall_glPixelMapusv);
    CHECKCALL(glPixelMapusv);
    DO_REAL_CALL(glPixelMapusv(map,mapsize,values));
    _W.writeAPICall(APICall_glPixelMapusv);
    _W.writeMark("(");
    _W.writeEnum(map);
    _W.writeMark(",");
    _W.write(mapsize);
    _W.writeMark(",");
    _W.writeUnknown(&values);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelMapusv);
}

void GLAPIENTRY glPixelStoref(GLenum pname, GLfloat param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelStoref);
    _COUNT(APICall_glPixelStoref);
    CHECKCALL(glPixelStoref);
    DO_REAL_CALL(glPixelStoref(pname,param));
    _W.writeAPICall(APICall_glPixelStoref);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelStoref);
}

void GLAPIENTRY glPixelStorei(GLenum pname, GLint param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelStorei);
    _COUNT(APICall_glPixelStorei);
    CHECKCALL(glPixelStorei);
    DO_REAL_CALL(glPixelStorei(pname,param));
    _W.writeAPICall(APICall_glPixelStorei);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelStorei);
}

void GLAPIENTRY glPixelTexGenParameterfSGIS(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTexGenParameterfSGIS);
    _COUNT(APICall_glPixelTexGenParameterfSGIS);
    CHECKCALL(glPixelTexGenParameterfSGIS);
    DO_REAL_CALL(glPixelTexGenParameterfSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glPixelTexGenParameterfSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTexGenParameterfSGIS);
}

void GLAPIENTRY glPixelTexGenParameterfvSGIS(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTexGenParameterfvSGIS);
    _COUNT(APICall_glPixelTexGenParameterfvSGIS);
    CHECKCALL(glPixelTexGenParameterfvSGIS);
    DO_REAL_CALL(glPixelTexGenParameterfvSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glPixelTexGenParameterfvSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTexGenParameterfvSGIS);
}

void GLAPIENTRY glPixelTexGenParameteriSGIS(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTexGenParameteriSGIS);
    _COUNT(APICall_glPixelTexGenParameteriSGIS);
    CHECKCALL(glPixelTexGenParameteriSGIS);
    DO_REAL_CALL(glPixelTexGenParameteriSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glPixelTexGenParameteriSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTexGenParameteriSGIS);
}

void GLAPIENTRY glPixelTexGenParameterivSGIS(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTexGenParameterivSGIS);
    _COUNT(APICall_glPixelTexGenParameterivSGIS);
    CHECKCALL(glPixelTexGenParameterivSGIS);
    DO_REAL_CALL(glPixelTexGenParameterivSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glPixelTexGenParameterivSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTexGenParameterivSGIS);
}

void GLAPIENTRY glPixelTexGenSGIX(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTexGenSGIX);
    _COUNT(APICall_glPixelTexGenSGIX);
    CHECKCALL(glPixelTexGenSGIX);
    DO_REAL_CALL(glPixelTexGenSGIX(_p0));
    _W.writeAPICall(APICall_glPixelTexGenSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTexGenSGIX);
}

void GLAPIENTRY glPixelTransferf(GLenum pname, GLfloat param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTransferf);
    _COUNT(APICall_glPixelTransferf);
    CHECKCALL(glPixelTransferf);
    DO_REAL_CALL(glPixelTransferf(pname,param));
    _W.writeAPICall(APICall_glPixelTransferf);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTransferf);
}

void GLAPIENTRY glPixelTransferi(GLenum pname, GLint param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTransferi);
    _COUNT(APICall_glPixelTransferi);
    CHECKCALL(glPixelTransferi);
    DO_REAL_CALL(glPixelTransferi(pname,param));
    _W.writeAPICall(APICall_glPixelTransferi);
    _W.writeMark("(");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTransferi);
}

void GLAPIENTRY glPixelTransformParameterfEXT(GLenum _p0, GLenum _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTransformParameterfEXT);
    _COUNT(APICall_glPixelTransformParameterfEXT);
    CHECKCALL(glPixelTransformParameterfEXT);
    DO_REAL_CALL(glPixelTransformParameterfEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glPixelTransformParameterfEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTransformParameterfEXT);
}

void GLAPIENTRY glPixelTransformParameterfvEXT(GLenum _p0, GLenum _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTransformParameterfvEXT);
    _COUNT(APICall_glPixelTransformParameterfvEXT);
    CHECKCALL(glPixelTransformParameterfvEXT);
    DO_REAL_CALL(glPixelTransformParameterfvEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glPixelTransformParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTransformParameterfvEXT);
}

void GLAPIENTRY glPixelTransformParameteriEXT(GLenum _p0, GLenum _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTransformParameteriEXT);
    _COUNT(APICall_glPixelTransformParameteriEXT);
    CHECKCALL(glPixelTransformParameteriEXT);
    DO_REAL_CALL(glPixelTransformParameteriEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glPixelTransformParameteriEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTransformParameteriEXT);
}

void GLAPIENTRY glPixelTransformParameterivEXT(GLenum _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelTransformParameterivEXT);
    _COUNT(APICall_glPixelTransformParameterivEXT);
    CHECKCALL(glPixelTransformParameterivEXT);
    DO_REAL_CALL(glPixelTransformParameterivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glPixelTransformParameterivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelTransformParameterivEXT);
}

void GLAPIENTRY glPixelZoom(GLfloat xfactor, GLfloat yfactor)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPixelZoom);
    _COUNT(APICall_glPixelZoom);
    CHECKCALL(glPixelZoom);
    DO_REAL_CALL(glPixelZoom(xfactor,yfactor));
    _W.writeAPICall(APICall_glPixelZoom);
    _W.writeMark("(");
    _W.write(xfactor);
    _W.writeMark(",");
    _W.write(yfactor);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPixelZoom);
}

void GLAPIENTRY glPointParameterf(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameterf);
    _COUNT(APICall_glPointParameterf);
    CHECKCALL(glPointParameterf);
    DO_REAL_CALL(glPointParameterf(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameterf);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameterf);
}

void GLAPIENTRY glPointParameterfARB(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameterfARB);
    _COUNT(APICall_glPointParameterfARB);
    CHECKCALL(glPointParameterfARB);
    DO_REAL_CALL(glPointParameterfARB(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameterfARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameterfARB);
}

void GLAPIENTRY glPointParameterfEXT(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameterfEXT);
    _COUNT(APICall_glPointParameterfEXT);
    CHECKCALL(glPointParameterfEXT);
    DO_REAL_CALL(glPointParameterfEXT(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameterfEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameterfEXT);
}

void GLAPIENTRY glPointParameterfSGIS(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameterfSGIS);
    _COUNT(APICall_glPointParameterfSGIS);
    CHECKCALL(glPointParameterfSGIS);
    DO_REAL_CALL(glPointParameterfSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameterfSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameterfSGIS);
}

void GLAPIENTRY glPointParameterfv(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameterfv);
    _COUNT(APICall_glPointParameterfv);
    CHECKCALL(glPointParameterfv);
    DO_REAL_CALL(glPointParameterfv(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameterfv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameterfv);
}

void GLAPIENTRY glPointParameterfvARB(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameterfvARB);
    _COUNT(APICall_glPointParameterfvARB);
    CHECKCALL(glPointParameterfvARB);
    DO_REAL_CALL(glPointParameterfvARB(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameterfvARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameterfvARB);
}

void GLAPIENTRY glPointParameterfvEXT(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameterfvEXT);
    _COUNT(APICall_glPointParameterfvEXT);
    CHECKCALL(glPointParameterfvEXT);
    DO_REAL_CALL(glPointParameterfvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameterfvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameterfvEXT);
}

void GLAPIENTRY glPointParameterfvSGIS(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameterfvSGIS);
    _COUNT(APICall_glPointParameterfvSGIS);
    CHECKCALL(glPointParameterfvSGIS);
    DO_REAL_CALL(glPointParameterfvSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameterfvSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameterfvSGIS);
}

void GLAPIENTRY glPointParameteri(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameteri);
    _COUNT(APICall_glPointParameteri);
    CHECKCALL(glPointParameteri);
    DO_REAL_CALL(glPointParameteri(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameteri);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameteri);
}

void GLAPIENTRY glPointParameteriNV(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameteriNV);
    _COUNT(APICall_glPointParameteriNV);
    CHECKCALL(glPointParameteriNV);
    DO_REAL_CALL(glPointParameteriNV(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameteriNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameteriNV);
}

void GLAPIENTRY glPointParameteriv(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameteriv);
    _COUNT(APICall_glPointParameteriv);
    CHECKCALL(glPointParameteriv);
    DO_REAL_CALL(glPointParameteriv(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameteriv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameteriv);
}

void GLAPIENTRY glPointParameterivNV(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointParameterivNV);
    _COUNT(APICall_glPointParameterivNV);
    CHECKCALL(glPointParameterivNV);
    DO_REAL_CALL(glPointParameterivNV(_p0,_p1));
    _W.writeAPICall(APICall_glPointParameterivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointParameterivNV);
}

void GLAPIENTRY glPointSize(GLfloat size)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPointSize);
    _COUNT(APICall_glPointSize);
    CHECKCALL(glPointSize);
    DO_REAL_CALL(glPointSize(size));
    _W.writeAPICall(APICall_glPointSize);
    _W.writeMark("(");
    _W.write(size);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPointSize);
}

GLint GLAPIENTRY glPollAsyncSGIX(GLuint *_p0)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPollAsyncSGIX);
    _COUNT(APICall_glPollAsyncSGIX);
    CHECKCALL(glPollAsyncSGIX);
    _result = DO_REAL_CALL(glPollAsyncSGIX(_p0));
    _W.writeAPICall(APICall_glPollAsyncSGIX);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPollAsyncSGIX);
    return _result;
}

GLint GLAPIENTRY glPollInstrumentsSGIX(GLint *_p0)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPollInstrumentsSGIX);
    _COUNT(APICall_glPollInstrumentsSGIX);
    CHECKCALL(glPollInstrumentsSGIX);
    _result = DO_REAL_CALL(glPollInstrumentsSGIX(_p0));
    _W.writeAPICall(APICall_glPollInstrumentsSGIX);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPollInstrumentsSGIX);
    return _result;
}

void GLAPIENTRY glPolygonMode(GLenum face, GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPolygonMode);
    _COUNT(APICall_glPolygonMode);
    CHECKCALL(glPolygonMode);
    DO_REAL_CALL(glPolygonMode(face,mode));
    _W.writeAPICall(APICall_glPolygonMode);
    _W.writeMark("(");
    _W.writeEnum(face);
    _W.writeMark(",");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPolygonMode);
}

void GLAPIENTRY glPolygonOffset(GLfloat factor, GLfloat units)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPolygonOffset);
    _COUNT(APICall_glPolygonOffset);
    CHECKCALL(glPolygonOffset);
    DO_REAL_CALL(glPolygonOffset(factor,units));
    _W.writeAPICall(APICall_glPolygonOffset);
    _W.writeMark("(");
    _W.write(factor);
    _W.writeMark(",");
    _W.write(units);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPolygonOffset);
}

void GLAPIENTRY glPolygonOffsetEXT(GLfloat _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPolygonOffsetEXT);
    _COUNT(APICall_glPolygonOffsetEXT);
    CHECKCALL(glPolygonOffsetEXT);
    DO_REAL_CALL(glPolygonOffsetEXT(_p0,_p1));
    _W.writeAPICall(APICall_glPolygonOffsetEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPolygonOffsetEXT);
}

void GLAPIENTRY glPolygonStipple(const GLubyte *mask)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPolygonStipple);
    _COUNT(APICall_glPolygonStipple);
    CHECKCALL(glPolygonStipple);
    DO_REAL_CALL(glPolygonStipple(mask));
    _W.writeAPICall(APICall_glPolygonStipple);
    _W.writeMark("(");
    _W.writeUnknown(&mask);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPolygonStipple);
}

void GLAPIENTRY glPopAttrib()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPopAttrib);
    _COUNT(APICall_glPopAttrib);
    CHECKCALL(glPopAttrib);
    DO_REAL_CALL(glPopAttrib());
    _W.writeAPICall(APICall_glPopAttrib);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPopAttrib);
}

void GLAPIENTRY glPopClientAttrib()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPopClientAttrib);
    _COUNT(APICall_glPopClientAttrib);
    CHECKCALL(glPopClientAttrib);
    DO_REAL_CALL(glPopClientAttrib());
    _W.writeAPICall(APICall_glPopClientAttrib);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPopClientAttrib);
}

void GLAPIENTRY glPopMatrix()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPopMatrix);
    _COUNT(APICall_glPopMatrix);
    CHECKCALL(glPopMatrix);
    DO_REAL_CALL(glPopMatrix());
    _W.writeAPICall(APICall_glPopMatrix);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPopMatrix);
}

void GLAPIENTRY glPopName()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPopName);
    _COUNT(APICall_glPopName);
    CHECKCALL(glPopName);
    DO_REAL_CALL(glPopName());
    _W.writeAPICall(APICall_glPopName);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPopName);
}

void GLAPIENTRY glPresentFrameDualFillNV(GLuint _p0, GLuint64EXT _p1, GLuint _p2, GLuint _p3, GLenum _p4, GLenum _p5, GLuint _p6, GLenum _p7, GLuint _p8, GLenum _p9, GLuint _p10, GLenum _p11, GLuint _p12)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPresentFrameDualFillNV);
    _COUNT(APICall_glPresentFrameDualFillNV);
    CHECKCALL(glPresentFrameDualFillNV);
    DO_REAL_CALL(glPresentFrameDualFillNV(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11,_p12));
    _W.writeAPICall(APICall_glPresentFrameDualFillNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(",");
    _W.write(_p10);
    _W.writeMark(",");
    _W.writeEnum(_p11);
    _W.writeMark(",");
    _W.write(_p12);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPresentFrameDualFillNV);
}

void GLAPIENTRY glPresentFrameKeyedNV(GLuint _p0, GLuint64EXT _p1, GLuint _p2, GLuint _p3, GLenum _p4, GLenum _p5, GLuint _p6, GLuint _p7, GLenum _p8, GLuint _p9, GLuint _p10)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPresentFrameKeyedNV);
    _COUNT(APICall_glPresentFrameKeyedNV);
    CHECKCALL(glPresentFrameKeyedNV);
    DO_REAL_CALL(glPresentFrameKeyedNV(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10));
    _W.writeAPICall(APICall_glPresentFrameKeyedNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(",");
    _W.write(_p10);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPresentFrameKeyedNV);
}

void GLAPIENTRY glPrimitiveRestartIndex(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPrimitiveRestartIndex);
    _COUNT(APICall_glPrimitiveRestartIndex);
    CHECKCALL(glPrimitiveRestartIndex);
    DO_REAL_CALL(glPrimitiveRestartIndex(_p0));
    _W.writeAPICall(APICall_glPrimitiveRestartIndex);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPrimitiveRestartIndex);
}

void GLAPIENTRY glPrimitiveRestartIndexNV(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPrimitiveRestartIndexNV);
    _COUNT(APICall_glPrimitiveRestartIndexNV);
    CHECKCALL(glPrimitiveRestartIndexNV);
    DO_REAL_CALL(glPrimitiveRestartIndexNV(_p0));
    _W.writeAPICall(APICall_glPrimitiveRestartIndexNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPrimitiveRestartIndexNV);
}

void GLAPIENTRY glPrimitiveRestartNV()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPrimitiveRestartNV);
    _COUNT(APICall_glPrimitiveRestartNV);
    CHECKCALL(glPrimitiveRestartNV);
    DO_REAL_CALL(glPrimitiveRestartNV());
    _W.writeAPICall(APICall_glPrimitiveRestartNV);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPrimitiveRestartNV);
}

void GLAPIENTRY glPrioritizeTextures(GLsizei n, const GLuint *textures, const GLclampf *priorities)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPrioritizeTextures);
    _COUNT(APICall_glPrioritizeTextures);
    CHECKCALL(glPrioritizeTextures);
    DO_REAL_CALL(glPrioritizeTextures(n,textures,priorities));
    _W.writeAPICall(APICall_glPrioritizeTextures);
    _W.writeMark("(");
    _W.write(n);
    _W.writeMark(",");
    _W.writeUnknown(&textures);
    _W.writeMark(",");
    _W.writeUnknown(&priorities);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPrioritizeTextures);
}

void GLAPIENTRY glPrioritizeTexturesEXT(GLsizei _p0, const GLuint *_p1, const GLclampf *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPrioritizeTexturesEXT);
    _COUNT(APICall_glPrioritizeTexturesEXT);
    CHECKCALL(glPrioritizeTexturesEXT);
    DO_REAL_CALL(glPrioritizeTexturesEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glPrioritizeTexturesEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPrioritizeTexturesEXT);
}

void GLAPIENTRY glProgramBufferParametersIivNV(GLenum _p0, GLuint _p1, GLuint _p2, GLsizei _p3, const GLint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramBufferParametersIivNV);
    _COUNT(APICall_glProgramBufferParametersIivNV);
    CHECKCALL(glProgramBufferParametersIivNV);
    DO_REAL_CALL(glProgramBufferParametersIivNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramBufferParametersIivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramBufferParametersIivNV);
}

void GLAPIENTRY glProgramBufferParametersIuivNV(GLenum _p0, GLuint _p1, GLuint _p2, GLsizei _p3, const GLuint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramBufferParametersIuivNV);
    _COUNT(APICall_glProgramBufferParametersIuivNV);
    CHECKCALL(glProgramBufferParametersIuivNV);
    DO_REAL_CALL(glProgramBufferParametersIuivNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramBufferParametersIuivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramBufferParametersIuivNV);
}

void GLAPIENTRY glProgramBufferParametersfvNV(GLenum _p0, GLuint _p1, GLuint _p2, GLsizei _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramBufferParametersfvNV);
    _COUNT(APICall_glProgramBufferParametersfvNV);
    CHECKCALL(glProgramBufferParametersfvNV);
    DO_REAL_CALL(glProgramBufferParametersfvNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramBufferParametersfvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramBufferParametersfvNV);
}

void GLAPIENTRY glProgramEnvParameter4dARB(GLenum _p0, GLuint _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4, GLdouble _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParameter4dARB);
    _COUNT(APICall_glProgramEnvParameter4dARB);
    CHECKCALL(glProgramEnvParameter4dARB);
    DO_REAL_CALL(glProgramEnvParameter4dARB(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramEnvParameter4dARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParameter4dARB);
}

void GLAPIENTRY glProgramEnvParameter4dvARB(GLenum _p0, GLuint _p1, const GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParameter4dvARB);
    _COUNT(APICall_glProgramEnvParameter4dvARB);
    CHECKCALL(glProgramEnvParameter4dvARB);
    DO_REAL_CALL(glProgramEnvParameter4dvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramEnvParameter4dvARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParameter4dvARB);
}

void GLAPIENTRY glProgramEnvParameter4fARB(GLenum _p0, GLuint _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4, GLfloat _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParameter4fARB);
    _COUNT(APICall_glProgramEnvParameter4fARB);
    CHECKCALL(glProgramEnvParameter4fARB);
    DO_REAL_CALL(glProgramEnvParameter4fARB(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramEnvParameter4fARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParameter4fARB);
}

void GLAPIENTRY glProgramEnvParameter4fvARB(GLenum _p0, GLuint _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParameter4fvARB);
    _COUNT(APICall_glProgramEnvParameter4fvARB);
    CHECKCALL(glProgramEnvParameter4fvARB);
    DO_REAL_CALL(glProgramEnvParameter4fvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramEnvParameter4fvARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParameter4fvARB);
}

void GLAPIENTRY glProgramEnvParameterI4iNV(GLenum _p0, GLuint _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParameterI4iNV);
    _COUNT(APICall_glProgramEnvParameterI4iNV);
    CHECKCALL(glProgramEnvParameterI4iNV);
    DO_REAL_CALL(glProgramEnvParameterI4iNV(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramEnvParameterI4iNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParameterI4iNV);
}

void GLAPIENTRY glProgramEnvParameterI4ivNV(GLenum _p0, GLuint _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParameterI4ivNV);
    _COUNT(APICall_glProgramEnvParameterI4ivNV);
    CHECKCALL(glProgramEnvParameterI4ivNV);
    DO_REAL_CALL(glProgramEnvParameterI4ivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramEnvParameterI4ivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParameterI4ivNV);
}

void GLAPIENTRY glProgramEnvParameterI4uiNV(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParameterI4uiNV);
    _COUNT(APICall_glProgramEnvParameterI4uiNV);
    CHECKCALL(glProgramEnvParameterI4uiNV);
    DO_REAL_CALL(glProgramEnvParameterI4uiNV(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramEnvParameterI4uiNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParameterI4uiNV);
}

void GLAPIENTRY glProgramEnvParameterI4uivNV(GLenum _p0, GLuint _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParameterI4uivNV);
    _COUNT(APICall_glProgramEnvParameterI4uivNV);
    CHECKCALL(glProgramEnvParameterI4uivNV);
    DO_REAL_CALL(glProgramEnvParameterI4uivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramEnvParameterI4uivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParameterI4uivNV);
}

void GLAPIENTRY glProgramEnvParameters4fvEXT(GLenum _p0, GLuint _p1, GLsizei _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParameters4fvEXT);
    _COUNT(APICall_glProgramEnvParameters4fvEXT);
    CHECKCALL(glProgramEnvParameters4fvEXT);
    DO_REAL_CALL(glProgramEnvParameters4fvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramEnvParameters4fvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glProgramEnvParameters4fvEXT_SPECIFIC(_p0,_p1,_p2,_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParameters4fvEXT);
}

void GLAPIENTRY glProgramEnvParametersI4ivNV(GLenum _p0, GLuint _p1, GLsizei _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParametersI4ivNV);
    _COUNT(APICall_glProgramEnvParametersI4ivNV);
    CHECKCALL(glProgramEnvParametersI4ivNV);
    DO_REAL_CALL(glProgramEnvParametersI4ivNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramEnvParametersI4ivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParametersI4ivNV);
}

void GLAPIENTRY glProgramEnvParametersI4uivNV(GLenum _p0, GLuint _p1, GLsizei _p2, const GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramEnvParametersI4uivNV);
    _COUNT(APICall_glProgramEnvParametersI4uivNV);
    CHECKCALL(glProgramEnvParametersI4uivNV);
    DO_REAL_CALL(glProgramEnvParametersI4uivNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramEnvParametersI4uivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramEnvParametersI4uivNV);
}

void GLAPIENTRY glProgramLocalParameter4dARB(GLenum _p0, GLuint _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4, GLdouble _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParameter4dARB);
    _COUNT(APICall_glProgramLocalParameter4dARB);
    CHECKCALL(glProgramLocalParameter4dARB);
    DO_REAL_CALL(glProgramLocalParameter4dARB(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramLocalParameter4dARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParameter4dARB);
}

void GLAPIENTRY glProgramLocalParameter4dvARB(GLenum _p0, GLuint _p1, const GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParameter4dvARB);
    _COUNT(APICall_glProgramLocalParameter4dvARB);
    CHECKCALL(glProgramLocalParameter4dvARB);
    DO_REAL_CALL(glProgramLocalParameter4dvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramLocalParameter4dvARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParameter4dvARB);
}

void GLAPIENTRY glProgramLocalParameter4fARB(GLenum _p0, GLuint _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4, GLfloat _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParameter4fARB);
    _COUNT(APICall_glProgramLocalParameter4fARB);
    CHECKCALL(glProgramLocalParameter4fARB);
    DO_REAL_CALL(glProgramLocalParameter4fARB(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramLocalParameter4fARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParameter4fARB);
}

void GLAPIENTRY glProgramLocalParameter4fvARB(GLenum _p0, GLuint _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParameter4fvARB);
    _COUNT(APICall_glProgramLocalParameter4fvARB);
    CHECKCALL(glProgramLocalParameter4fvARB);
    DO_REAL_CALL(glProgramLocalParameter4fvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramLocalParameter4fvARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParameter4fvARB);
}

void GLAPIENTRY glProgramLocalParameterI4iNV(GLenum _p0, GLuint _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParameterI4iNV);
    _COUNT(APICall_glProgramLocalParameterI4iNV);
    CHECKCALL(glProgramLocalParameterI4iNV);
    DO_REAL_CALL(glProgramLocalParameterI4iNV(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramLocalParameterI4iNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParameterI4iNV);
}

void GLAPIENTRY glProgramLocalParameterI4ivNV(GLenum _p0, GLuint _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParameterI4ivNV);
    _COUNT(APICall_glProgramLocalParameterI4ivNV);
    CHECKCALL(glProgramLocalParameterI4ivNV);
    DO_REAL_CALL(glProgramLocalParameterI4ivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramLocalParameterI4ivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParameterI4ivNV);
}

void GLAPIENTRY glProgramLocalParameterI4uiNV(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParameterI4uiNV);
    _COUNT(APICall_glProgramLocalParameterI4uiNV);
    CHECKCALL(glProgramLocalParameterI4uiNV);
    DO_REAL_CALL(glProgramLocalParameterI4uiNV(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramLocalParameterI4uiNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParameterI4uiNV);
}

void GLAPIENTRY glProgramLocalParameterI4uivNV(GLenum _p0, GLuint _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParameterI4uivNV);
    _COUNT(APICall_glProgramLocalParameterI4uivNV);
    CHECKCALL(glProgramLocalParameterI4uivNV);
    DO_REAL_CALL(glProgramLocalParameterI4uivNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramLocalParameterI4uivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParameterI4uivNV);
}

void GLAPIENTRY glProgramLocalParameters4fvEXT(GLenum _p0, GLuint _p1, GLsizei _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParameters4fvEXT);
    _COUNT(APICall_glProgramLocalParameters4fvEXT);
    CHECKCALL(glProgramLocalParameters4fvEXT);
    DO_REAL_CALL(glProgramLocalParameters4fvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramLocalParameters4fvEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glProgramLocalParameters4fvEXT_SPECIFIC(_p0,_p1,_p2,_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParameters4fvEXT);
}

void GLAPIENTRY glProgramLocalParametersI4ivNV(GLenum _p0, GLuint _p1, GLsizei _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParametersI4ivNV);
    _COUNT(APICall_glProgramLocalParametersI4ivNV);
    CHECKCALL(glProgramLocalParametersI4ivNV);
    DO_REAL_CALL(glProgramLocalParametersI4ivNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramLocalParametersI4ivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParametersI4ivNV);
}

void GLAPIENTRY glProgramLocalParametersI4uivNV(GLenum _p0, GLuint _p1, GLsizei _p2, const GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramLocalParametersI4uivNV);
    _COUNT(APICall_glProgramLocalParametersI4uivNV);
    CHECKCALL(glProgramLocalParametersI4uivNV);
    DO_REAL_CALL(glProgramLocalParametersI4uivNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramLocalParametersI4uivNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramLocalParametersI4uivNV);
}

void GLAPIENTRY glProgramNamedParameter4dNV(GLuint _p0, GLsizei _p1, const GLubyte *_p2, GLdouble _p3, GLdouble _p4, GLdouble _p5, GLdouble _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramNamedParameter4dNV);
    _COUNT(APICall_glProgramNamedParameter4dNV);
    CHECKCALL(glProgramNamedParameter4dNV);
    DO_REAL_CALL(glProgramNamedParameter4dNV(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glProgramNamedParameter4dNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramNamedParameter4dNV);
}

void GLAPIENTRY glProgramNamedParameter4dvNV(GLuint _p0, GLsizei _p1, const GLubyte *_p2, const GLdouble *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramNamedParameter4dvNV);
    _COUNT(APICall_glProgramNamedParameter4dvNV);
    CHECKCALL(glProgramNamedParameter4dvNV);
    DO_REAL_CALL(glProgramNamedParameter4dvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramNamedParameter4dvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramNamedParameter4dvNV);
}

void GLAPIENTRY glProgramNamedParameter4fNV(GLuint _p0, GLsizei _p1, const GLubyte *_p2, GLfloat _p3, GLfloat _p4, GLfloat _p5, GLfloat _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramNamedParameter4fNV);
    _COUNT(APICall_glProgramNamedParameter4fNV);
    CHECKCALL(glProgramNamedParameter4fNV);
    DO_REAL_CALL(glProgramNamedParameter4fNV(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glProgramNamedParameter4fNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramNamedParameter4fNV);
}

void GLAPIENTRY glProgramNamedParameter4fvNV(GLuint _p0, GLsizei _p1, const GLubyte *_p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramNamedParameter4fvNV);
    _COUNT(APICall_glProgramNamedParameter4fvNV);
    CHECKCALL(glProgramNamedParameter4fvNV);
    DO_REAL_CALL(glProgramNamedParameter4fvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramNamedParameter4fvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramNamedParameter4fvNV);
}

void GLAPIENTRY glProgramParameter4dNV(GLenum _p0, GLuint _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4, GLdouble _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramParameter4dNV);
    _COUNT(APICall_glProgramParameter4dNV);
    CHECKCALL(glProgramParameter4dNV);
    DO_REAL_CALL(glProgramParameter4dNV(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramParameter4dNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramParameter4dNV);
}

void GLAPIENTRY glProgramParameter4dvNV(GLenum _p0, GLuint _p1, const GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramParameter4dvNV);
    _COUNT(APICall_glProgramParameter4dvNV);
    CHECKCALL(glProgramParameter4dvNV);
    DO_REAL_CALL(glProgramParameter4dvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramParameter4dvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramParameter4dvNV);
}

void GLAPIENTRY glProgramParameter4fNV(GLenum _p0, GLuint _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4, GLfloat _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramParameter4fNV);
    _COUNT(APICall_glProgramParameter4fNV);
    CHECKCALL(glProgramParameter4fNV);
    DO_REAL_CALL(glProgramParameter4fNV(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramParameter4fNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramParameter4fNV);
}

void GLAPIENTRY glProgramParameter4fvNV(GLenum _p0, GLuint _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramParameter4fvNV);
    _COUNT(APICall_glProgramParameter4fvNV);
    CHECKCALL(glProgramParameter4fvNV);
    DO_REAL_CALL(glProgramParameter4fvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramParameter4fvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramParameter4fvNV);
}

void GLAPIENTRY glProgramParameteriARB(GLuint _p0, GLenum _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramParameteriARB);
    _COUNT(APICall_glProgramParameteriARB);
    CHECKCALL(glProgramParameteriARB);
    DO_REAL_CALL(glProgramParameteriARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramParameteriARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramParameteriARB);
}

void GLAPIENTRY glProgramParameteriEXT(GLuint _p0, GLenum _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramParameteriEXT);
    _COUNT(APICall_glProgramParameteriEXT);
    CHECKCALL(glProgramParameteriEXT);
    DO_REAL_CALL(glProgramParameteriEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramParameteriEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramParameteriEXT);
}

void GLAPIENTRY glProgramParameters4dvNV(GLenum _p0, GLuint _p1, GLuint _p2, const GLdouble *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramParameters4dvNV);
    _COUNT(APICall_glProgramParameters4dvNV);
    CHECKCALL(glProgramParameters4dvNV);
    DO_REAL_CALL(glProgramParameters4dvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramParameters4dvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramParameters4dvNV);
}

void GLAPIENTRY glProgramParameters4fvNV(GLenum _p0, GLuint _p1, GLuint _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramParameters4fvNV);
    _COUNT(APICall_glProgramParameters4fvNV);
    CHECKCALL(glProgramParameters4fvNV);
    DO_REAL_CALL(glProgramParameters4fvNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramParameters4fvNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramParameters4fvNV);
}

void GLAPIENTRY glProgramStringARB(GLenum _p0, GLenum _p1, GLsizei _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramStringARB);
    // Specific stats code
    glProgramStringARB_STAT(_p0,_p1,_p2,_p3);
    _COUNT(APICall_glProgramStringARB);
    CHECKCALL(glProgramStringARB);
    DO_REAL_CALL(glProgramStringARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramStringARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glProgramStringARB_SPECIFIC(_p0,_p1,_p2,_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramStringARB);
}

void GLAPIENTRY glProgramUniform1fEXT(GLuint _p0, GLint _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform1fEXT);
    _COUNT(APICall_glProgramUniform1fEXT);
    CHECKCALL(glProgramUniform1fEXT);
    DO_REAL_CALL(glProgramUniform1fEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramUniform1fEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform1fEXT);
}

void GLAPIENTRY glProgramUniform1fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform1fvEXT);
    _COUNT(APICall_glProgramUniform1fvEXT);
    CHECKCALL(glProgramUniform1fvEXT);
    DO_REAL_CALL(glProgramUniform1fvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform1fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform1fvEXT);
}

void GLAPIENTRY glProgramUniform1iEXT(GLuint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform1iEXT);
    _COUNT(APICall_glProgramUniform1iEXT);
    CHECKCALL(glProgramUniform1iEXT);
    DO_REAL_CALL(glProgramUniform1iEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramUniform1iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform1iEXT);
}

void GLAPIENTRY glProgramUniform1ivEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform1ivEXT);
    _COUNT(APICall_glProgramUniform1ivEXT);
    CHECKCALL(glProgramUniform1ivEXT);
    DO_REAL_CALL(glProgramUniform1ivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform1ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform1ivEXT);
}

void GLAPIENTRY glProgramUniform1uiEXT(GLuint _p0, GLint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform1uiEXT);
    _COUNT(APICall_glProgramUniform1uiEXT);
    CHECKCALL(glProgramUniform1uiEXT);
    DO_REAL_CALL(glProgramUniform1uiEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glProgramUniform1uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform1uiEXT);
}

void GLAPIENTRY glProgramUniform1uivEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform1uivEXT);
    _COUNT(APICall_glProgramUniform1uivEXT);
    CHECKCALL(glProgramUniform1uivEXT);
    DO_REAL_CALL(glProgramUniform1uivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform1uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform1uivEXT);
}

void GLAPIENTRY glProgramUniform2fEXT(GLuint _p0, GLint _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform2fEXT);
    _COUNT(APICall_glProgramUniform2fEXT);
    CHECKCALL(glProgramUniform2fEXT);
    DO_REAL_CALL(glProgramUniform2fEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform2fEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform2fEXT);
}

void GLAPIENTRY glProgramUniform2fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform2fvEXT);
    _COUNT(APICall_glProgramUniform2fvEXT);
    CHECKCALL(glProgramUniform2fvEXT);
    DO_REAL_CALL(glProgramUniform2fvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform2fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform2fvEXT);
}

void GLAPIENTRY glProgramUniform2iEXT(GLuint _p0, GLint _p1, GLint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform2iEXT);
    _COUNT(APICall_glProgramUniform2iEXT);
    CHECKCALL(glProgramUniform2iEXT);
    DO_REAL_CALL(glProgramUniform2iEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform2iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform2iEXT);
}

void GLAPIENTRY glProgramUniform2ivEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform2ivEXT);
    _COUNT(APICall_glProgramUniform2ivEXT);
    CHECKCALL(glProgramUniform2ivEXT);
    DO_REAL_CALL(glProgramUniform2ivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform2ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform2ivEXT);
}

void GLAPIENTRY glProgramUniform2uiEXT(GLuint _p0, GLint _p1, GLuint _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform2uiEXT);
    _COUNT(APICall_glProgramUniform2uiEXT);
    CHECKCALL(glProgramUniform2uiEXT);
    DO_REAL_CALL(glProgramUniform2uiEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform2uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform2uiEXT);
}

void GLAPIENTRY glProgramUniform2uivEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform2uivEXT);
    _COUNT(APICall_glProgramUniform2uivEXT);
    CHECKCALL(glProgramUniform2uivEXT);
    DO_REAL_CALL(glProgramUniform2uivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform2uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform2uivEXT);
}

void GLAPIENTRY glProgramUniform3fEXT(GLuint _p0, GLint _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform3fEXT);
    _COUNT(APICall_glProgramUniform3fEXT);
    CHECKCALL(glProgramUniform3fEXT);
    DO_REAL_CALL(glProgramUniform3fEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniform3fEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform3fEXT);
}

void GLAPIENTRY glProgramUniform3fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform3fvEXT);
    _COUNT(APICall_glProgramUniform3fvEXT);
    CHECKCALL(glProgramUniform3fvEXT);
    DO_REAL_CALL(glProgramUniform3fvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform3fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform3fvEXT);
}

void GLAPIENTRY glProgramUniform3iEXT(GLuint _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform3iEXT);
    _COUNT(APICall_glProgramUniform3iEXT);
    CHECKCALL(glProgramUniform3iEXT);
    DO_REAL_CALL(glProgramUniform3iEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniform3iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform3iEXT);
}

void GLAPIENTRY glProgramUniform3ivEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform3ivEXT);
    _COUNT(APICall_glProgramUniform3ivEXT);
    CHECKCALL(glProgramUniform3ivEXT);
    DO_REAL_CALL(glProgramUniform3ivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform3ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform3ivEXT);
}

void GLAPIENTRY glProgramUniform3uiEXT(GLuint _p0, GLint _p1, GLuint _p2, GLuint _p3, GLuint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform3uiEXT);
    _COUNT(APICall_glProgramUniform3uiEXT);
    CHECKCALL(glProgramUniform3uiEXT);
    DO_REAL_CALL(glProgramUniform3uiEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniform3uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform3uiEXT);
}

void GLAPIENTRY glProgramUniform3uivEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform3uivEXT);
    _COUNT(APICall_glProgramUniform3uivEXT);
    CHECKCALL(glProgramUniform3uivEXT);
    DO_REAL_CALL(glProgramUniform3uivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform3uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform3uivEXT);
}

void GLAPIENTRY glProgramUniform4fEXT(GLuint _p0, GLint _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4, GLfloat _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform4fEXT);
    _COUNT(APICall_glProgramUniform4fEXT);
    CHECKCALL(glProgramUniform4fEXT);
    DO_REAL_CALL(glProgramUniform4fEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramUniform4fEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform4fEXT);
}

void GLAPIENTRY glProgramUniform4fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform4fvEXT);
    _COUNT(APICall_glProgramUniform4fvEXT);
    CHECKCALL(glProgramUniform4fvEXT);
    DO_REAL_CALL(glProgramUniform4fvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform4fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform4fvEXT);
}

void GLAPIENTRY glProgramUniform4iEXT(GLuint _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform4iEXT);
    _COUNT(APICall_glProgramUniform4iEXT);
    CHECKCALL(glProgramUniform4iEXT);
    DO_REAL_CALL(glProgramUniform4iEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramUniform4iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform4iEXT);
}

void GLAPIENTRY glProgramUniform4ivEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform4ivEXT);
    _COUNT(APICall_glProgramUniform4ivEXT);
    CHECKCALL(glProgramUniform4ivEXT);
    DO_REAL_CALL(glProgramUniform4ivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform4ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform4ivEXT);
}

void GLAPIENTRY glProgramUniform4uiEXT(GLuint _p0, GLint _p1, GLuint _p2, GLuint _p3, GLuint _p4, GLuint _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform4uiEXT);
    _COUNT(APICall_glProgramUniform4uiEXT);
    CHECKCALL(glProgramUniform4uiEXT);
    DO_REAL_CALL(glProgramUniform4uiEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glProgramUniform4uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform4uiEXT);
}

void GLAPIENTRY glProgramUniform4uivEXT(GLuint _p0, GLint _p1, GLsizei _p2, const GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniform4uivEXT);
    _COUNT(APICall_glProgramUniform4uivEXT);
    CHECKCALL(glProgramUniform4uivEXT);
    DO_REAL_CALL(glProgramUniform4uivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glProgramUniform4uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniform4uivEXT);
}

void GLAPIENTRY glProgramUniformMatrix2fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, GLboolean _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniformMatrix2fvEXT);
    _COUNT(APICall_glProgramUniformMatrix2fvEXT);
    CHECKCALL(glProgramUniformMatrix2fvEXT);
    DO_REAL_CALL(glProgramUniformMatrix2fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniformMatrix2fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniformMatrix2fvEXT);
}

void GLAPIENTRY glProgramUniformMatrix2x3fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, GLboolean _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniformMatrix2x3fvEXT);
    _COUNT(APICall_glProgramUniformMatrix2x3fvEXT);
    CHECKCALL(glProgramUniformMatrix2x3fvEXT);
    DO_REAL_CALL(glProgramUniformMatrix2x3fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniformMatrix2x3fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniformMatrix2x3fvEXT);
}

void GLAPIENTRY glProgramUniformMatrix2x4fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, GLboolean _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniformMatrix2x4fvEXT);
    _COUNT(APICall_glProgramUniformMatrix2x4fvEXT);
    CHECKCALL(glProgramUniformMatrix2x4fvEXT);
    DO_REAL_CALL(glProgramUniformMatrix2x4fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniformMatrix2x4fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniformMatrix2x4fvEXT);
}

void GLAPIENTRY glProgramUniformMatrix3fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, GLboolean _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniformMatrix3fvEXT);
    _COUNT(APICall_glProgramUniformMatrix3fvEXT);
    CHECKCALL(glProgramUniformMatrix3fvEXT);
    DO_REAL_CALL(glProgramUniformMatrix3fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniformMatrix3fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniformMatrix3fvEXT);
}

void GLAPIENTRY glProgramUniformMatrix3x2fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, GLboolean _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniformMatrix3x2fvEXT);
    _COUNT(APICall_glProgramUniformMatrix3x2fvEXT);
    CHECKCALL(glProgramUniformMatrix3x2fvEXT);
    DO_REAL_CALL(glProgramUniformMatrix3x2fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniformMatrix3x2fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniformMatrix3x2fvEXT);
}

void GLAPIENTRY glProgramUniformMatrix3x4fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, GLboolean _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniformMatrix3x4fvEXT);
    _COUNT(APICall_glProgramUniformMatrix3x4fvEXT);
    CHECKCALL(glProgramUniformMatrix3x4fvEXT);
    DO_REAL_CALL(glProgramUniformMatrix3x4fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniformMatrix3x4fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniformMatrix3x4fvEXT);
}

void GLAPIENTRY glProgramUniformMatrix4fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, GLboolean _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniformMatrix4fvEXT);
    _COUNT(APICall_glProgramUniformMatrix4fvEXT);
    CHECKCALL(glProgramUniformMatrix4fvEXT);
    DO_REAL_CALL(glProgramUniformMatrix4fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniformMatrix4fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniformMatrix4fvEXT);
}

void GLAPIENTRY glProgramUniformMatrix4x2fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, GLboolean _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniformMatrix4x2fvEXT);
    _COUNT(APICall_glProgramUniformMatrix4x2fvEXT);
    CHECKCALL(glProgramUniformMatrix4x2fvEXT);
    DO_REAL_CALL(glProgramUniformMatrix4x2fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniformMatrix4x2fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniformMatrix4x2fvEXT);
}

void GLAPIENTRY glProgramUniformMatrix4x3fvEXT(GLuint _p0, GLint _p1, GLsizei _p2, GLboolean _p3, const GLfloat *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramUniformMatrix4x3fvEXT);
    _COUNT(APICall_glProgramUniformMatrix4x3fvEXT);
    CHECKCALL(glProgramUniformMatrix4x3fvEXT);
    DO_REAL_CALL(glProgramUniformMatrix4x3fvEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glProgramUniformMatrix4x3fvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramUniformMatrix4x3fvEXT);
}

void GLAPIENTRY glProgramVertexLimitNV(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProgramVertexLimitNV);
    _COUNT(APICall_glProgramVertexLimitNV);
    CHECKCALL(glProgramVertexLimitNV);
    DO_REAL_CALL(glProgramVertexLimitNV(_p0,_p1));
    _W.writeAPICall(APICall_glProgramVertexLimitNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProgramVertexLimitNV);
}

void GLAPIENTRY glProvokingVertexEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glProvokingVertexEXT);
    _COUNT(APICall_glProvokingVertexEXT);
    CHECKCALL(glProvokingVertexEXT);
    DO_REAL_CALL(glProvokingVertexEXT(_p0));
    _W.writeAPICall(APICall_glProvokingVertexEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glProvokingVertexEXT);
}

void GLAPIENTRY glPushAttrib(GLbitfield mask)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPushAttrib);
    _COUNT(APICall_glPushAttrib);
    CHECKCALL(glPushAttrib);
    DO_REAL_CALL(glPushAttrib(mask));
    _W.writeAPICall(APICall_glPushAttrib);
    _W.writeMark("(");
    _W.writeOring(mask);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPushAttrib);
}

void GLAPIENTRY glPushClientAttrib(GLbitfield mask)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPushClientAttrib);
    _COUNT(APICall_glPushClientAttrib);
    CHECKCALL(glPushClientAttrib);
    DO_REAL_CALL(glPushClientAttrib(mask));
    _W.writeAPICall(APICall_glPushClientAttrib);
    _W.writeMark("(");
    _W.writeOring(mask);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPushClientAttrib);
}

void GLAPIENTRY glPushClientAttribDefaultEXT(GLbitfield _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPushClientAttribDefaultEXT);
    _COUNT(APICall_glPushClientAttribDefaultEXT);
    CHECKCALL(glPushClientAttribDefaultEXT);
    DO_REAL_CALL(glPushClientAttribDefaultEXT(_p0));
    _W.writeAPICall(APICall_glPushClientAttribDefaultEXT);
    _W.writeMark("(");
    _W.writeOring(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPushClientAttribDefaultEXT);
}

void GLAPIENTRY glPushMatrix()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPushMatrix);
    _COUNT(APICall_glPushMatrix);
    CHECKCALL(glPushMatrix);
    DO_REAL_CALL(glPushMatrix());
    _W.writeAPICall(APICall_glPushMatrix);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPushMatrix);
}

void GLAPIENTRY glPushName(GLuint name)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glPushName);
    _COUNT(APICall_glPushName);
    CHECKCALL(glPushName);
    DO_REAL_CALL(glPushName(name));
    _W.writeAPICall(APICall_glPushName);
    _W.writeMark("(");
    _W.write(name);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glPushName);
}

void GLAPIENTRY glRasterPos2d(GLdouble x, GLdouble y)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos2d);
    _COUNT(APICall_glRasterPos2d);
    CHECKCALL(glRasterPos2d);
    DO_REAL_CALL(glRasterPos2d(x,y));
    _W.writeAPICall(APICall_glRasterPos2d);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos2d);
}

void GLAPIENTRY glRasterPos2dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos2dv);
    _COUNT(APICall_glRasterPos2dv);
    CHECKCALL(glRasterPos2dv);
    DO_REAL_CALL(glRasterPos2dv(v));
    _W.writeAPICall(APICall_glRasterPos2dv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos2dv);
}

void GLAPIENTRY glRasterPos2f(GLfloat x, GLfloat y)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos2f);
    _COUNT(APICall_glRasterPos2f);
    CHECKCALL(glRasterPos2f);
    DO_REAL_CALL(glRasterPos2f(x,y));
    _W.writeAPICall(APICall_glRasterPos2f);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos2f);
}

void GLAPIENTRY glRasterPos2fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos2fv);
    _COUNT(APICall_glRasterPos2fv);
    CHECKCALL(glRasterPos2fv);
    DO_REAL_CALL(glRasterPos2fv(v));
    _W.writeAPICall(APICall_glRasterPos2fv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos2fv);
}

void GLAPIENTRY glRasterPos2i(GLint x, GLint y)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos2i);
    _COUNT(APICall_glRasterPos2i);
    CHECKCALL(glRasterPos2i);
    DO_REAL_CALL(glRasterPos2i(x,y));
    _W.writeAPICall(APICall_glRasterPos2i);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos2i);
}

void GLAPIENTRY glRasterPos2iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos2iv);
    _COUNT(APICall_glRasterPos2iv);
    CHECKCALL(glRasterPos2iv);
    DO_REAL_CALL(glRasterPos2iv(v));
    _W.writeAPICall(APICall_glRasterPos2iv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos2iv);
}

void GLAPIENTRY glRasterPos2s(GLshort x, GLshort y)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos2s);
    _COUNT(APICall_glRasterPos2s);
    CHECKCALL(glRasterPos2s);
    DO_REAL_CALL(glRasterPos2s(x,y));
    _W.writeAPICall(APICall_glRasterPos2s);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos2s);
}

void GLAPIENTRY glRasterPos2sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos2sv);
    _COUNT(APICall_glRasterPos2sv);
    CHECKCALL(glRasterPos2sv);
    DO_REAL_CALL(glRasterPos2sv(v));
    _W.writeAPICall(APICall_glRasterPos2sv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos2sv);
}

void GLAPIENTRY glRasterPos3d(GLdouble x, GLdouble y, GLdouble z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos3d);
    _COUNT(APICall_glRasterPos3d);
    CHECKCALL(glRasterPos3d);
    DO_REAL_CALL(glRasterPos3d(x,y,z));
    _W.writeAPICall(APICall_glRasterPos3d);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos3d);
}

void GLAPIENTRY glRasterPos3dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos3dv);
    _COUNT(APICall_glRasterPos3dv);
    CHECKCALL(glRasterPos3dv);
    DO_REAL_CALL(glRasterPos3dv(v));
    _W.writeAPICall(APICall_glRasterPos3dv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos3dv);
}

void GLAPIENTRY glRasterPos3f(GLfloat x, GLfloat y, GLfloat z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos3f);
    _COUNT(APICall_glRasterPos3f);
    CHECKCALL(glRasterPos3f);
    DO_REAL_CALL(glRasterPos3f(x,y,z));
    _W.writeAPICall(APICall_glRasterPos3f);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos3f);
}

void GLAPIENTRY glRasterPos3fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos3fv);
    _COUNT(APICall_glRasterPos3fv);
    CHECKCALL(glRasterPos3fv);
    DO_REAL_CALL(glRasterPos3fv(v));
    _W.writeAPICall(APICall_glRasterPos3fv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos3fv);
}

void GLAPIENTRY glRasterPos3i(GLint x, GLint y, GLint z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos3i);
    _COUNT(APICall_glRasterPos3i);
    CHECKCALL(glRasterPos3i);
    DO_REAL_CALL(glRasterPos3i(x,y,z));
    _W.writeAPICall(APICall_glRasterPos3i);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos3i);
}

void GLAPIENTRY glRasterPos3iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos3iv);
    _COUNT(APICall_glRasterPos3iv);
    CHECKCALL(glRasterPos3iv);
    DO_REAL_CALL(glRasterPos3iv(v));
    _W.writeAPICall(APICall_glRasterPos3iv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos3iv);
}

void GLAPIENTRY glRasterPos3s(GLshort x, GLshort y, GLshort z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos3s);
    _COUNT(APICall_glRasterPos3s);
    CHECKCALL(glRasterPos3s);
    DO_REAL_CALL(glRasterPos3s(x,y,z));
    _W.writeAPICall(APICall_glRasterPos3s);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos3s);
}

void GLAPIENTRY glRasterPos3sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos3sv);
    _COUNT(APICall_glRasterPos3sv);
    CHECKCALL(glRasterPos3sv);
    DO_REAL_CALL(glRasterPos3sv(v));
    _W.writeAPICall(APICall_glRasterPos3sv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos3sv);
}

void GLAPIENTRY glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos4d);
    _COUNT(APICall_glRasterPos4d);
    CHECKCALL(glRasterPos4d);
    DO_REAL_CALL(glRasterPos4d(x,y,z,w));
    _W.writeAPICall(APICall_glRasterPos4d);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(",");
    _W.write(w);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos4d);
}

void GLAPIENTRY glRasterPos4dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos4dv);
    _COUNT(APICall_glRasterPos4dv);
    CHECKCALL(glRasterPos4dv);
    DO_REAL_CALL(glRasterPos4dv(v));
    _W.writeAPICall(APICall_glRasterPos4dv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos4dv);
}

void GLAPIENTRY glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos4f);
    _COUNT(APICall_glRasterPos4f);
    CHECKCALL(glRasterPos4f);
    DO_REAL_CALL(glRasterPos4f(x,y,z,w));
    _W.writeAPICall(APICall_glRasterPos4f);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(",");
    _W.write(w);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos4f);
}

void GLAPIENTRY glRasterPos4fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos4fv);
    _COUNT(APICall_glRasterPos4fv);
    CHECKCALL(glRasterPos4fv);
    DO_REAL_CALL(glRasterPos4fv(v));
    _W.writeAPICall(APICall_glRasterPos4fv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos4fv);
}

void GLAPIENTRY glRasterPos4i(GLint x, GLint y, GLint z, GLint w)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos4i);
    _COUNT(APICall_glRasterPos4i);
    CHECKCALL(glRasterPos4i);
    DO_REAL_CALL(glRasterPos4i(x,y,z,w));
    _W.writeAPICall(APICall_glRasterPos4i);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(",");
    _W.write(w);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos4i);
}

void GLAPIENTRY glRasterPos4iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos4iv);
    _COUNT(APICall_glRasterPos4iv);
    CHECKCALL(glRasterPos4iv);
    DO_REAL_CALL(glRasterPos4iv(v));
    _W.writeAPICall(APICall_glRasterPos4iv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos4iv);
}

void GLAPIENTRY glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos4s);
    _COUNT(APICall_glRasterPos4s);
    CHECKCALL(glRasterPos4s);
    DO_REAL_CALL(glRasterPos4s(x,y,z,w));
    _W.writeAPICall(APICall_glRasterPos4s);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(",");
    _W.write(w);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos4s);
}

void GLAPIENTRY glRasterPos4sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRasterPos4sv);
    _COUNT(APICall_glRasterPos4sv);
    CHECKCALL(glRasterPos4sv);
    DO_REAL_CALL(glRasterPos4sv(v));
    _W.writeAPICall(APICall_glRasterPos4sv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRasterPos4sv);
}

void GLAPIENTRY glReadBuffer(GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glReadBuffer);
    _COUNT(APICall_glReadBuffer);
    CHECKCALL(glReadBuffer);
    DO_REAL_CALL(glReadBuffer(mode));
    _W.writeAPICall(APICall_glReadBuffer);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glReadBuffer);
}

void GLAPIENTRY glReadInstrumentsSGIX(GLint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glReadInstrumentsSGIX);
    _COUNT(APICall_glReadInstrumentsSGIX);
    CHECKCALL(glReadInstrumentsSGIX);
    DO_REAL_CALL(glReadInstrumentsSGIX(_p0));
    _W.writeAPICall(APICall_glReadInstrumentsSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glReadInstrumentsSGIX);
}

void GLAPIENTRY glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glReadPixels);
    _COUNT(APICall_glReadPixels);
    CHECKCALL(glReadPixels);
    DO_REAL_CALL(glReadPixels(x,y,width,height,format,type,pixels));
    _W.writeAPICall(APICall_glReadPixels);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glReadPixels_SPECIFIC(x,y,width,height,format,type,pixels);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glReadPixels);
}

void GLAPIENTRY glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRectd);
    _COUNT(APICall_glRectd);
    CHECKCALL(glRectd);
    DO_REAL_CALL(glRectd(x1,y1,x2,y2));
    _W.writeAPICall(APICall_glRectd);
    _W.writeMark("(");
    _W.write(x1);
    _W.writeMark(",");
    _W.write(y1);
    _W.writeMark(",");
    _W.write(x2);
    _W.writeMark(",");
    _W.write(y2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRectd);
}

void GLAPIENTRY glRectdv(const GLdouble *v1, const GLdouble *v2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRectdv);
    _COUNT(APICall_glRectdv);
    CHECKCALL(glRectdv);
    DO_REAL_CALL(glRectdv(v1,v2));
    _W.writeAPICall(APICall_glRectdv);
    _W.writeMark("(");
    _W.writeUnknown(&v1);
    _W.writeMark(",");
    _W.writeUnknown(&v2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRectdv);
}

void GLAPIENTRY glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRectf);
    _COUNT(APICall_glRectf);
    CHECKCALL(glRectf);
    DO_REAL_CALL(glRectf(x1,y1,x2,y2));
    _W.writeAPICall(APICall_glRectf);
    _W.writeMark("(");
    _W.write(x1);
    _W.writeMark(",");
    _W.write(y1);
    _W.writeMark(",");
    _W.write(x2);
    _W.writeMark(",");
    _W.write(y2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRectf);
}

void GLAPIENTRY glRectfv(const GLfloat *v1, const GLfloat *v2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRectfv);
    _COUNT(APICall_glRectfv);
    CHECKCALL(glRectfv);
    DO_REAL_CALL(glRectfv(v1,v2));
    _W.writeAPICall(APICall_glRectfv);
    _W.writeMark("(");
    _W.writeUnknown(&v1);
    _W.writeMark(",");
    _W.writeUnknown(&v2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRectfv);
}

void GLAPIENTRY glRecti(GLint x1, GLint y1, GLint x2, GLint y2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRecti);
    _COUNT(APICall_glRecti);
    CHECKCALL(glRecti);
    DO_REAL_CALL(glRecti(x1,y1,x2,y2));
    _W.writeAPICall(APICall_glRecti);
    _W.writeMark("(");
    _W.write(x1);
    _W.writeMark(",");
    _W.write(y1);
    _W.writeMark(",");
    _W.write(x2);
    _W.writeMark(",");
    _W.write(y2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRecti);
}

void GLAPIENTRY glRectiv(const GLint *v1, const GLint *v2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRectiv);
    _COUNT(APICall_glRectiv);
    CHECKCALL(glRectiv);
    DO_REAL_CALL(glRectiv(v1,v2));
    _W.writeAPICall(APICall_glRectiv);
    _W.writeMark("(");
    _W.writeUnknown(&v1);
    _W.writeMark(",");
    _W.writeUnknown(&v2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRectiv);
}

void GLAPIENTRY glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRects);
    _COUNT(APICall_glRects);
    CHECKCALL(glRects);
    DO_REAL_CALL(glRects(x1,y1,x2,y2));
    _W.writeAPICall(APICall_glRects);
    _W.writeMark("(");
    _W.write(x1);
    _W.writeMark(",");
    _W.write(y1);
    _W.writeMark(",");
    _W.write(x2);
    _W.writeMark(",");
    _W.write(y2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRects);
}

void GLAPIENTRY glRectsv(const GLshort *v1, const GLshort *v2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRectsv);
    _COUNT(APICall_glRectsv);
    CHECKCALL(glRectsv);
    DO_REAL_CALL(glRectsv(v1,v2));
    _W.writeAPICall(APICall_glRectsv);
    _W.writeMark("(");
    _W.writeUnknown(&v1);
    _W.writeMark(",");
    _W.writeUnknown(&v2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRectsv);
}

void GLAPIENTRY glReferencePlaneSGIX(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glReferencePlaneSGIX);
    _COUNT(APICall_glReferencePlaneSGIX);
    CHECKCALL(glReferencePlaneSGIX);
    DO_REAL_CALL(glReferencePlaneSGIX(_p0));
    _W.writeAPICall(APICall_glReferencePlaneSGIX);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glReferencePlaneSGIX);
}

GLint GLAPIENTRY glRenderMode(GLenum mode)
{
    GLint _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRenderMode);
    _COUNT(APICall_glRenderMode);
    CHECKCALL(glRenderMode);
    _result = DO_REAL_CALL(glRenderMode(mode));
    _W.writeAPICall(APICall_glRenderMode);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRenderMode);
    return _result;
}

void GLAPIENTRY glRenderbufferStorage(GLenum _p0, GLenum _p1, GLsizei _p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRenderbufferStorage);
    _COUNT(APICall_glRenderbufferStorage);
    CHECKCALL(glRenderbufferStorage);
    DO_REAL_CALL(glRenderbufferStorage(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glRenderbufferStorage);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRenderbufferStorage);
}

void GLAPIENTRY glRenderbufferStorageEXT(GLenum _p0, GLenum _p1, GLsizei _p2, GLsizei _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRenderbufferStorageEXT);
    _COUNT(APICall_glRenderbufferStorageEXT);
    CHECKCALL(glRenderbufferStorageEXT);
    DO_REAL_CALL(glRenderbufferStorageEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glRenderbufferStorageEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRenderbufferStorageEXT);
}

void GLAPIENTRY glRenderbufferStorageMultisample(GLenum _p0, GLsizei _p1, GLenum _p2, GLsizei _p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRenderbufferStorageMultisample);
    _COUNT(APICall_glRenderbufferStorageMultisample);
    CHECKCALL(glRenderbufferStorageMultisample);
    DO_REAL_CALL(glRenderbufferStorageMultisample(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glRenderbufferStorageMultisample);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRenderbufferStorageMultisample);
}

void GLAPIENTRY glRenderbufferStorageMultisampleCoverageNV(GLenum _p0, GLsizei _p1, GLsizei _p2, GLenum _p3, GLsizei _p4, GLsizei _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRenderbufferStorageMultisampleCoverageNV);
    _COUNT(APICall_glRenderbufferStorageMultisampleCoverageNV);
    CHECKCALL(glRenderbufferStorageMultisampleCoverageNV);
    DO_REAL_CALL(glRenderbufferStorageMultisampleCoverageNV(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glRenderbufferStorageMultisampleCoverageNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRenderbufferStorageMultisampleCoverageNV);
}

void GLAPIENTRY glRenderbufferStorageMultisampleEXT(GLenum _p0, GLsizei _p1, GLenum _p2, GLsizei _p3, GLsizei _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRenderbufferStorageMultisampleEXT);
    _COUNT(APICall_glRenderbufferStorageMultisampleEXT);
    CHECKCALL(glRenderbufferStorageMultisampleEXT);
    DO_REAL_CALL(glRenderbufferStorageMultisampleEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glRenderbufferStorageMultisampleEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRenderbufferStorageMultisampleEXT);
}

void GLAPIENTRY glRequestResidentProgramsNV(GLsizei _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRequestResidentProgramsNV);
    _COUNT(APICall_glRequestResidentProgramsNV);
    CHECKCALL(glRequestResidentProgramsNV);
    DO_REAL_CALL(glRequestResidentProgramsNV(_p0,_p1));
    _W.writeAPICall(APICall_glRequestResidentProgramsNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRequestResidentProgramsNV);
}

void GLAPIENTRY glResetHistogram(GLenum target)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glResetHistogram);
    _COUNT(APICall_glResetHistogram);
    CHECKCALL(glResetHistogram);
    DO_REAL_CALL(glResetHistogram(target));
    _W.writeAPICall(APICall_glResetHistogram);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glResetHistogram);
}

void GLAPIENTRY glResetHistogramEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glResetHistogramEXT);
    _COUNT(APICall_glResetHistogramEXT);
    CHECKCALL(glResetHistogramEXT);
    DO_REAL_CALL(glResetHistogramEXT(_p0));
    _W.writeAPICall(APICall_glResetHistogramEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glResetHistogramEXT);
}

void GLAPIENTRY glResetMinmax(GLenum target)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glResetMinmax);
    _COUNT(APICall_glResetMinmax);
    CHECKCALL(glResetMinmax);
    DO_REAL_CALL(glResetMinmax(target));
    _W.writeAPICall(APICall_glResetMinmax);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glResetMinmax);
}

void GLAPIENTRY glResetMinmaxEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glResetMinmaxEXT);
    _COUNT(APICall_glResetMinmaxEXT);
    CHECKCALL(glResetMinmaxEXT);
    DO_REAL_CALL(glResetMinmaxEXT(_p0));
    _W.writeAPICall(APICall_glResetMinmaxEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glResetMinmaxEXT);
}

void GLAPIENTRY glResumeTransformFeedbackNV()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glResumeTransformFeedbackNV);
    _COUNT(APICall_glResumeTransformFeedbackNV);
    CHECKCALL(glResumeTransformFeedbackNV);
    DO_REAL_CALL(glResumeTransformFeedbackNV());
    _W.writeAPICall(APICall_glResumeTransformFeedbackNV);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glResumeTransformFeedbackNV);
}

void GLAPIENTRY glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRotated);
    _COUNT(APICall_glRotated);
    CHECKCALL(glRotated);
    DO_REAL_CALL(glRotated(angle,x,y,z));
    _W.writeAPICall(APICall_glRotated);
    _W.writeMark("(");
    _W.write(angle);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRotated);
}

void GLAPIENTRY glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glRotatef);
    _COUNT(APICall_glRotatef);
    CHECKCALL(glRotatef);
    DO_REAL_CALL(glRotatef(angle,x,y,z));
    _W.writeAPICall(APICall_glRotatef);
    _W.writeMark("(");
    _W.write(angle);
    _W.writeMark(",");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glRotatef);
}

void GLAPIENTRY glSampleCoverage(GLclampf value, GLboolean invert)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSampleCoverage);
    _COUNT(APICall_glSampleCoverage);
    CHECKCALL(glSampleCoverage);
    DO_REAL_CALL(glSampleCoverage(value,invert));
    _W.writeAPICall(APICall_glSampleCoverage);
    _W.writeMark("(");
    _W.write(value);
    _W.writeMark(",");
    _W.write(invert);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSampleCoverage);
}

void GLAPIENTRY glSampleCoverageARB(GLclampf _p0, GLboolean _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSampleCoverageARB);
    _COUNT(APICall_glSampleCoverageARB);
    CHECKCALL(glSampleCoverageARB);
    DO_REAL_CALL(glSampleCoverageARB(_p0,_p1));
    _W.writeAPICall(APICall_glSampleCoverageARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSampleCoverageARB);
}

void GLAPIENTRY glSampleMapATI(GLuint _p0, GLuint _p1, GLenum _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSampleMapATI);
    _COUNT(APICall_glSampleMapATI);
    CHECKCALL(glSampleMapATI);
    DO_REAL_CALL(glSampleMapATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSampleMapATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSampleMapATI);
}

void GLAPIENTRY glSampleMaskEXT(GLclampf _p0, GLboolean _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSampleMaskEXT);
    _COUNT(APICall_glSampleMaskEXT);
    CHECKCALL(glSampleMaskEXT);
    DO_REAL_CALL(glSampleMaskEXT(_p0,_p1));
    _W.writeAPICall(APICall_glSampleMaskEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSampleMaskEXT);
}

void GLAPIENTRY glSampleMaskIndexedNV(GLuint _p0, GLbitfield _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSampleMaskIndexedNV);
    _COUNT(APICall_glSampleMaskIndexedNV);
    CHECKCALL(glSampleMaskIndexedNV);
    DO_REAL_CALL(glSampleMaskIndexedNV(_p0,_p1));
    _W.writeAPICall(APICall_glSampleMaskIndexedNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeOring(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSampleMaskIndexedNV);
}

void GLAPIENTRY glSampleMaskSGIS(GLclampf _p0, GLboolean _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSampleMaskSGIS);
    _COUNT(APICall_glSampleMaskSGIS);
    CHECKCALL(glSampleMaskSGIS);
    DO_REAL_CALL(glSampleMaskSGIS(_p0,_p1));
    _W.writeAPICall(APICall_glSampleMaskSGIS);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSampleMaskSGIS);
}

void GLAPIENTRY glSamplePatternEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSamplePatternEXT);
    _COUNT(APICall_glSamplePatternEXT);
    CHECKCALL(glSamplePatternEXT);
    DO_REAL_CALL(glSamplePatternEXT(_p0));
    _W.writeAPICall(APICall_glSamplePatternEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSamplePatternEXT);
}

void GLAPIENTRY glSamplePatternSGIS(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSamplePatternSGIS);
    _COUNT(APICall_glSamplePatternSGIS);
    CHECKCALL(glSamplePatternSGIS);
    DO_REAL_CALL(glSamplePatternSGIS(_p0));
    _W.writeAPICall(APICall_glSamplePatternSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSamplePatternSGIS);
}

void GLAPIENTRY glScaled(GLdouble x, GLdouble y, GLdouble z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glScaled);
    _COUNT(APICall_glScaled);
    CHECKCALL(glScaled);
    DO_REAL_CALL(glScaled(x,y,z));
    _W.writeAPICall(APICall_glScaled);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glScaled);
}

void GLAPIENTRY glScalef(GLfloat x, GLfloat y, GLfloat z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glScalef);
    _COUNT(APICall_glScalef);
    CHECKCALL(glScalef);
    DO_REAL_CALL(glScalef(x,y,z));
    _W.writeAPICall(APICall_glScalef);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glScalef);
}

void GLAPIENTRY glScissor(GLint x, GLint y, GLsizei width, GLsizei height)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glScissor);
    _COUNT(APICall_glScissor);
    CHECKCALL(glScissor);
    DO_REAL_CALL(glScissor(x,y,width,height));
    _W.writeAPICall(APICall_glScissor);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glScissor);
}

void GLAPIENTRY glSecondaryColor3b(GLbyte _p0, GLbyte _p1, GLbyte _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3b);
    _COUNT(APICall_glSecondaryColor3b);
    CHECKCALL(glSecondaryColor3b);
    DO_REAL_CALL(glSecondaryColor3b(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3b);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3b);
}

void GLAPIENTRY glSecondaryColor3bEXT(GLbyte _p0, GLbyte _p1, GLbyte _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3bEXT);
    _COUNT(APICall_glSecondaryColor3bEXT);
    CHECKCALL(glSecondaryColor3bEXT);
    DO_REAL_CALL(glSecondaryColor3bEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3bEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3bEXT);
}

void GLAPIENTRY glSecondaryColor3bv(const GLbyte *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3bv);
    _COUNT(APICall_glSecondaryColor3bv);
    CHECKCALL(glSecondaryColor3bv);
    DO_REAL_CALL(glSecondaryColor3bv(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3bv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3bv);
}

void GLAPIENTRY glSecondaryColor3bvEXT(const GLbyte *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3bvEXT);
    _COUNT(APICall_glSecondaryColor3bvEXT);
    CHECKCALL(glSecondaryColor3bvEXT);
    DO_REAL_CALL(glSecondaryColor3bvEXT(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3bvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3bvEXT);
}

void GLAPIENTRY glSecondaryColor3d(GLdouble _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3d);
    _COUNT(APICall_glSecondaryColor3d);
    CHECKCALL(glSecondaryColor3d);
    DO_REAL_CALL(glSecondaryColor3d(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3d);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3d);
}

void GLAPIENTRY glSecondaryColor3dEXT(GLdouble _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3dEXT);
    _COUNT(APICall_glSecondaryColor3dEXT);
    CHECKCALL(glSecondaryColor3dEXT);
    DO_REAL_CALL(glSecondaryColor3dEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3dEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3dEXT);
}

void GLAPIENTRY glSecondaryColor3dv(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3dv);
    _COUNT(APICall_glSecondaryColor3dv);
    CHECKCALL(glSecondaryColor3dv);
    DO_REAL_CALL(glSecondaryColor3dv(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3dv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3dv);
}

void GLAPIENTRY glSecondaryColor3dvEXT(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3dvEXT);
    _COUNT(APICall_glSecondaryColor3dvEXT);
    CHECKCALL(glSecondaryColor3dvEXT);
    DO_REAL_CALL(glSecondaryColor3dvEXT(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3dvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3dvEXT);
}

void GLAPIENTRY glSecondaryColor3f(GLfloat _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3f);
    _COUNT(APICall_glSecondaryColor3f);
    CHECKCALL(glSecondaryColor3f);
    DO_REAL_CALL(glSecondaryColor3f(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3f);
}

void GLAPIENTRY glSecondaryColor3fEXT(GLfloat _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3fEXT);
    _COUNT(APICall_glSecondaryColor3fEXT);
    CHECKCALL(glSecondaryColor3fEXT);
    DO_REAL_CALL(glSecondaryColor3fEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3fEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3fEXT);
}

void GLAPIENTRY glSecondaryColor3fv(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3fv);
    _COUNT(APICall_glSecondaryColor3fv);
    CHECKCALL(glSecondaryColor3fv);
    DO_REAL_CALL(glSecondaryColor3fv(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3fv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3fv);
}

void GLAPIENTRY glSecondaryColor3fvEXT(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3fvEXT);
    _COUNT(APICall_glSecondaryColor3fvEXT);
    CHECKCALL(glSecondaryColor3fvEXT);
    DO_REAL_CALL(glSecondaryColor3fvEXT(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3fvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3fvEXT);
}

void GLAPIENTRY glSecondaryColor3hNV(GLhalfNV _p0, GLhalfNV _p1, GLhalfNV _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3hNV);
    _COUNT(APICall_glSecondaryColor3hNV);
    CHECKCALL(glSecondaryColor3hNV);
    DO_REAL_CALL(glSecondaryColor3hNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3hNV);
}

void GLAPIENTRY glSecondaryColor3hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3hvNV);
    _COUNT(APICall_glSecondaryColor3hvNV);
    CHECKCALL(glSecondaryColor3hvNV);
    DO_REAL_CALL(glSecondaryColor3hvNV(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3hvNV);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3hvNV);
}

void GLAPIENTRY glSecondaryColor3i(GLint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3i);
    _COUNT(APICall_glSecondaryColor3i);
    CHECKCALL(glSecondaryColor3i);
    DO_REAL_CALL(glSecondaryColor3i(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3i);
}

void GLAPIENTRY glSecondaryColor3iEXT(GLint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3iEXT);
    _COUNT(APICall_glSecondaryColor3iEXT);
    CHECKCALL(glSecondaryColor3iEXT);
    DO_REAL_CALL(glSecondaryColor3iEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3iEXT);
}

void GLAPIENTRY glSecondaryColor3iv(const GLint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3iv);
    _COUNT(APICall_glSecondaryColor3iv);
    CHECKCALL(glSecondaryColor3iv);
    DO_REAL_CALL(glSecondaryColor3iv(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3iv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3iv);
}

void GLAPIENTRY glSecondaryColor3ivEXT(const GLint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3ivEXT);
    _COUNT(APICall_glSecondaryColor3ivEXT);
    CHECKCALL(glSecondaryColor3ivEXT);
    DO_REAL_CALL(glSecondaryColor3ivEXT(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3ivEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3ivEXT);
}

void GLAPIENTRY glSecondaryColor3s(GLshort _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3s);
    _COUNT(APICall_glSecondaryColor3s);
    CHECKCALL(glSecondaryColor3s);
    DO_REAL_CALL(glSecondaryColor3s(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3s);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3s);
}

void GLAPIENTRY glSecondaryColor3sEXT(GLshort _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3sEXT);
    _COUNT(APICall_glSecondaryColor3sEXT);
    CHECKCALL(glSecondaryColor3sEXT);
    DO_REAL_CALL(glSecondaryColor3sEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3sEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3sEXT);
}

void GLAPIENTRY glSecondaryColor3sv(const GLshort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3sv);
    _COUNT(APICall_glSecondaryColor3sv);
    CHECKCALL(glSecondaryColor3sv);
    DO_REAL_CALL(glSecondaryColor3sv(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3sv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3sv);
}

void GLAPIENTRY glSecondaryColor3svEXT(const GLshort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3svEXT);
    _COUNT(APICall_glSecondaryColor3svEXT);
    CHECKCALL(glSecondaryColor3svEXT);
    DO_REAL_CALL(glSecondaryColor3svEXT(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3svEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3svEXT);
}

void GLAPIENTRY glSecondaryColor3ub(GLubyte _p0, GLubyte _p1, GLubyte _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3ub);
    _COUNT(APICall_glSecondaryColor3ub);
    CHECKCALL(glSecondaryColor3ub);
    DO_REAL_CALL(glSecondaryColor3ub(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3ub);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3ub);
}

void GLAPIENTRY glSecondaryColor3ubEXT(GLubyte _p0, GLubyte _p1, GLubyte _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3ubEXT);
    _COUNT(APICall_glSecondaryColor3ubEXT);
    CHECKCALL(glSecondaryColor3ubEXT);
    DO_REAL_CALL(glSecondaryColor3ubEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3ubEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3ubEXT);
}

void GLAPIENTRY glSecondaryColor3ubv(const GLubyte *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3ubv);
    _COUNT(APICall_glSecondaryColor3ubv);
    CHECKCALL(glSecondaryColor3ubv);
    DO_REAL_CALL(glSecondaryColor3ubv(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3ubv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3ubv);
}

void GLAPIENTRY glSecondaryColor3ubvEXT(const GLubyte *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3ubvEXT);
    _COUNT(APICall_glSecondaryColor3ubvEXT);
    CHECKCALL(glSecondaryColor3ubvEXT);
    DO_REAL_CALL(glSecondaryColor3ubvEXT(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3ubvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3ubvEXT);
}

void GLAPIENTRY glSecondaryColor3ui(GLuint _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3ui);
    _COUNT(APICall_glSecondaryColor3ui);
    CHECKCALL(glSecondaryColor3ui);
    DO_REAL_CALL(glSecondaryColor3ui(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3ui);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3ui);
}

void GLAPIENTRY glSecondaryColor3uiEXT(GLuint _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3uiEXT);
    _COUNT(APICall_glSecondaryColor3uiEXT);
    CHECKCALL(glSecondaryColor3uiEXT);
    DO_REAL_CALL(glSecondaryColor3uiEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3uiEXT);
}

void GLAPIENTRY glSecondaryColor3uiv(const GLuint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3uiv);
    _COUNT(APICall_glSecondaryColor3uiv);
    CHECKCALL(glSecondaryColor3uiv);
    DO_REAL_CALL(glSecondaryColor3uiv(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3uiv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3uiv);
}

void GLAPIENTRY glSecondaryColor3uivEXT(const GLuint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3uivEXT);
    _COUNT(APICall_glSecondaryColor3uivEXT);
    CHECKCALL(glSecondaryColor3uivEXT);
    DO_REAL_CALL(glSecondaryColor3uivEXT(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3uivEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3uivEXT);
}

void GLAPIENTRY glSecondaryColor3us(GLushort _p0, GLushort _p1, GLushort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3us);
    _COUNT(APICall_glSecondaryColor3us);
    CHECKCALL(glSecondaryColor3us);
    DO_REAL_CALL(glSecondaryColor3us(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3us);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3us);
}

void GLAPIENTRY glSecondaryColor3usEXT(GLushort _p0, GLushort _p1, GLushort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3usEXT);
    _COUNT(APICall_glSecondaryColor3usEXT);
    CHECKCALL(glSecondaryColor3usEXT);
    DO_REAL_CALL(glSecondaryColor3usEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSecondaryColor3usEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3usEXT);
}

void GLAPIENTRY glSecondaryColor3usv(const GLushort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3usv);
    _COUNT(APICall_glSecondaryColor3usv);
    CHECKCALL(glSecondaryColor3usv);
    DO_REAL_CALL(glSecondaryColor3usv(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3usv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3usv);
}

void GLAPIENTRY glSecondaryColor3usvEXT(const GLushort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColor3usvEXT);
    _COUNT(APICall_glSecondaryColor3usvEXT);
    CHECKCALL(glSecondaryColor3usvEXT);
    DO_REAL_CALL(glSecondaryColor3usvEXT(_p0));
    _W.writeAPICall(APICall_glSecondaryColor3usvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColor3usvEXT);
}

void GLAPIENTRY glSecondaryColorPointer(GLint _p0, GLenum _p1, GLsizei _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColorPointer);
    _COUNT(APICall_glSecondaryColorPointer);
    CHECKCALL(glSecondaryColorPointer);
    DO_REAL_CALL(glSecondaryColorPointer(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glSecondaryColorPointer);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColorPointer);
}

void GLAPIENTRY glSecondaryColorPointerEXT(GLint _p0, GLenum _p1, GLsizei _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSecondaryColorPointerEXT);
    _COUNT(APICall_glSecondaryColorPointerEXT);
    CHECKCALL(glSecondaryColorPointerEXT);
    DO_REAL_CALL(glSecondaryColorPointerEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glSecondaryColorPointerEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSecondaryColorPointerEXT);
}

void GLAPIENTRY glSelectBuffer(GLsizei size, GLuint *buffer)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSelectBuffer);
    _COUNT(APICall_glSelectBuffer);
    CHECKCALL(glSelectBuffer);
    DO_REAL_CALL(glSelectBuffer(size,buffer));
    _W.writeAPICall(APICall_glSelectBuffer);
    _W.writeMark("(");
    _W.write(size);
    _W.writeMark(",");
    _W.writeUnknown(&buffer);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSelectBuffer);
}

void GLAPIENTRY glSelectPerfMonitorCountersAMD(GLuint _p0, GLboolean _p1, GLuint _p2, GLint _p3, GLuint *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSelectPerfMonitorCountersAMD);
    _COUNT(APICall_glSelectPerfMonitorCountersAMD);
    CHECKCALL(glSelectPerfMonitorCountersAMD);
    DO_REAL_CALL(glSelectPerfMonitorCountersAMD(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glSelectPerfMonitorCountersAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSelectPerfMonitorCountersAMD);
}

void GLAPIENTRY glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSeparableFilter2D);
    _COUNT(APICall_glSeparableFilter2D);
    CHECKCALL(glSeparableFilter2D);
    DO_REAL_CALL(glSeparableFilter2D(target,internalformat,width,height,format,type,row,column));
    _W.writeAPICall(APICall_glSeparableFilter2D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(internalformat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&row);
    _W.writeMark(",");
    _W.writeUnknown(&column);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSeparableFilter2D);
}

void GLAPIENTRY glSeparableFilter2DEXT(GLenum _p0, GLenum _p1, GLsizei _p2, GLsizei _p3, GLenum _p4, GLenum _p5, const GLvoid *_p6, const GLvoid *_p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSeparableFilter2DEXT);
    _COUNT(APICall_glSeparableFilter2DEXT);
    CHECKCALL(glSeparableFilter2DEXT);
    DO_REAL_CALL(glSeparableFilter2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glSeparableFilter2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(",");
    _W.writeUnknown(&_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSeparableFilter2DEXT);
}

void GLAPIENTRY glSetFenceAPPLE(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSetFenceAPPLE);
    _COUNT(APICall_glSetFenceAPPLE);
    CHECKCALL(glSetFenceAPPLE);
    DO_REAL_CALL(glSetFenceAPPLE(_p0));
    _W.writeAPICall(APICall_glSetFenceAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSetFenceAPPLE);
}

void GLAPIENTRY glSetFenceNV(GLuint _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSetFenceNV);
    _COUNT(APICall_glSetFenceNV);
    CHECKCALL(glSetFenceNV);
    DO_REAL_CALL(glSetFenceNV(_p0,_p1));
    _W.writeAPICall(APICall_glSetFenceNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSetFenceNV);
}

void GLAPIENTRY glSetFragmentShaderConstantATI(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSetFragmentShaderConstantATI);
    _COUNT(APICall_glSetFragmentShaderConstantATI);
    CHECKCALL(glSetFragmentShaderConstantATI);
    DO_REAL_CALL(glSetFragmentShaderConstantATI(_p0,_p1));
    _W.writeAPICall(APICall_glSetFragmentShaderConstantATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glSetFragmentShaderConstantATI_SPECIFIC(_p0,_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSetFragmentShaderConstantATI);
}

void GLAPIENTRY glSetInvariantEXT(GLuint _p0, GLenum _p1, const GLvoid *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSetInvariantEXT);
    _COUNT(APICall_glSetInvariantEXT);
    CHECKCALL(glSetInvariantEXT);
    DO_REAL_CALL(glSetInvariantEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSetInvariantEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSetInvariantEXT);
}

void GLAPIENTRY glSetLocalConstantEXT(GLuint _p0, GLenum _p1, const GLvoid *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSetLocalConstantEXT);
    _COUNT(APICall_glSetLocalConstantEXT);
    CHECKCALL(glSetLocalConstantEXT);
    DO_REAL_CALL(glSetLocalConstantEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSetLocalConstantEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSetLocalConstantEXT);
}

void GLAPIENTRY glShadeModel(GLenum mode)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glShadeModel);
    _COUNT(APICall_glShadeModel);
    CHECKCALL(glShadeModel);
    DO_REAL_CALL(glShadeModel(mode));
    _W.writeAPICall(APICall_glShadeModel);
    _W.writeMark("(");
    _W.writeEnum(mode);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glShadeModel);
}

void GLAPIENTRY glShaderOp1EXT(GLenum _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glShaderOp1EXT);
    _COUNT(APICall_glShaderOp1EXT);
    CHECKCALL(glShaderOp1EXT);
    DO_REAL_CALL(glShaderOp1EXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glShaderOp1EXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glShaderOp1EXT);
}

void GLAPIENTRY glShaderOp2EXT(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glShaderOp2EXT);
    _COUNT(APICall_glShaderOp2EXT);
    CHECKCALL(glShaderOp2EXT);
    DO_REAL_CALL(glShaderOp2EXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glShaderOp2EXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glShaderOp2EXT);
}

void GLAPIENTRY glShaderOp3EXT(GLenum _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glShaderOp3EXT);
    _COUNT(APICall_glShaderOp3EXT);
    CHECKCALL(glShaderOp3EXT);
    DO_REAL_CALL(glShaderOp3EXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glShaderOp3EXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glShaderOp3EXT);
}

void GLAPIENTRY glShaderSource(GLuint _p0, GLsizei _p1, const GLchar **_p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glShaderSource);
    _COUNT(APICall_glShaderSource);
    CHECKCALL(glShaderSource);
    DO_REAL_CALL(glShaderSource(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glShaderSource);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glShaderSource);
}

void GLAPIENTRY glShaderSourceARB(GLhandleARB _p0, GLsizei _p1, const GLcharARB **_p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glShaderSourceARB);
    _COUNT(APICall_glShaderSourceARB);
    CHECKCALL(glShaderSourceARB);
    DO_REAL_CALL(glShaderSourceARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glShaderSourceARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glShaderSourceARB_SPECIFIC(_p0,_p1,_p2,_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glShaderSourceARB);
}

void GLAPIENTRY glSharpenTexFuncSGIS(GLenum _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSharpenTexFuncSGIS);
    _COUNT(APICall_glSharpenTexFuncSGIS);
    CHECKCALL(glSharpenTexFuncSGIS);
    DO_REAL_CALL(glSharpenTexFuncSGIS(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glSharpenTexFuncSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSharpenTexFuncSGIS);
}

void GLAPIENTRY glSpriteParameterfSGIX(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSpriteParameterfSGIX);
    _COUNT(APICall_glSpriteParameterfSGIX);
    CHECKCALL(glSpriteParameterfSGIX);
    DO_REAL_CALL(glSpriteParameterfSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glSpriteParameterfSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSpriteParameterfSGIX);
}

void GLAPIENTRY glSpriteParameterfvSGIX(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSpriteParameterfvSGIX);
    _COUNT(APICall_glSpriteParameterfvSGIX);
    CHECKCALL(glSpriteParameterfvSGIX);
    DO_REAL_CALL(glSpriteParameterfvSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glSpriteParameterfvSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSpriteParameterfvSGIX);
}

void GLAPIENTRY glSpriteParameteriSGIX(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSpriteParameteriSGIX);
    _COUNT(APICall_glSpriteParameteriSGIX);
    CHECKCALL(glSpriteParameteriSGIX);
    DO_REAL_CALL(glSpriteParameteriSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glSpriteParameteriSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSpriteParameteriSGIX);
}

void GLAPIENTRY glSpriteParameterivSGIX(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSpriteParameterivSGIX);
    _COUNT(APICall_glSpriteParameterivSGIX);
    CHECKCALL(glSpriteParameterivSGIX);
    DO_REAL_CALL(glSpriteParameterivSGIX(_p0,_p1));
    _W.writeAPICall(APICall_glSpriteParameterivSGIX);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSpriteParameterivSGIX);
}

void GLAPIENTRY glStartInstrumentsSGIX()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStartInstrumentsSGIX);
    _COUNT(APICall_glStartInstrumentsSGIX);
    CHECKCALL(glStartInstrumentsSGIX);
    DO_REAL_CALL(glStartInstrumentsSGIX());
    _W.writeAPICall(APICall_glStartInstrumentsSGIX);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStartInstrumentsSGIX);
}

void GLAPIENTRY glStencilClearTagEXT(GLsizei _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStencilClearTagEXT);
    _COUNT(APICall_glStencilClearTagEXT);
    CHECKCALL(glStencilClearTagEXT);
    DO_REAL_CALL(glStencilClearTagEXT(_p0,_p1));
    _W.writeAPICall(APICall_glStencilClearTagEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStencilClearTagEXT);
}

void GLAPIENTRY glStencilFunc(GLenum func, GLint ref, GLuint mask)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStencilFunc);
    _COUNT(APICall_glStencilFunc);
    CHECKCALL(glStencilFunc);
    DO_REAL_CALL(glStencilFunc(func,ref,mask));
    _W.writeAPICall(APICall_glStencilFunc);
    _W.writeMark("(");
    _W.writeEnum(func);
    _W.writeMark(",");
    _W.write(ref);
    _W.writeMark(",");
    _W.write(mask);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStencilFunc);
}

void GLAPIENTRY glStencilFuncSeparate(GLenum _p0, GLenum _p1, GLint _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStencilFuncSeparate);
    _COUNT(APICall_glStencilFuncSeparate);
    CHECKCALL(glStencilFuncSeparate);
    DO_REAL_CALL(glStencilFuncSeparate(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glStencilFuncSeparate);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStencilFuncSeparate);
}

void GLAPIENTRY glStencilFuncSeparateATI(GLenum _p0, GLenum _p1, GLint _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStencilFuncSeparateATI);
    _COUNT(APICall_glStencilFuncSeparateATI);
    CHECKCALL(glStencilFuncSeparateATI);
    DO_REAL_CALL(glStencilFuncSeparateATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glStencilFuncSeparateATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStencilFuncSeparateATI);
}

void GLAPIENTRY glStencilMask(GLuint mask)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStencilMask);
    _COUNT(APICall_glStencilMask);
    CHECKCALL(glStencilMask);
    DO_REAL_CALL(glStencilMask(mask));
    _W.writeAPICall(APICall_glStencilMask);
    _W.writeMark("(");
    _W.write(mask);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStencilMask);
}

void GLAPIENTRY glStencilMaskSeparate(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStencilMaskSeparate);
    _COUNT(APICall_glStencilMaskSeparate);
    CHECKCALL(glStencilMaskSeparate);
    DO_REAL_CALL(glStencilMaskSeparate(_p0,_p1));
    _W.writeAPICall(APICall_glStencilMaskSeparate);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStencilMaskSeparate);
}

void GLAPIENTRY glStencilOp(GLenum fail, GLenum zfail, GLenum zpass)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStencilOp);
    _COUNT(APICall_glStencilOp);
    CHECKCALL(glStencilOp);
    DO_REAL_CALL(glStencilOp(fail,zfail,zpass));
    _W.writeAPICall(APICall_glStencilOp);
    _W.writeMark("(");
    _W.writeEnum(fail);
    _W.writeMark(",");
    _W.writeEnum(zfail);
    _W.writeMark(",");
    _W.writeEnum(zpass);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStencilOp);
}

void GLAPIENTRY glStencilOpSeparate(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStencilOpSeparate);
    _COUNT(APICall_glStencilOpSeparate);
    CHECKCALL(glStencilOpSeparate);
    DO_REAL_CALL(glStencilOpSeparate(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glStencilOpSeparate);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStencilOpSeparate);
}

void GLAPIENTRY glStencilOpSeparateATI(GLenum _p0, GLenum _p1, GLenum _p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStencilOpSeparateATI);
    _COUNT(APICall_glStencilOpSeparateATI);
    CHECKCALL(glStencilOpSeparateATI);
    DO_REAL_CALL(glStencilOpSeparateATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glStencilOpSeparateATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStencilOpSeparateATI);
}

void GLAPIENTRY glStopInstrumentsSGIX(GLint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStopInstrumentsSGIX);
    _COUNT(APICall_glStopInstrumentsSGIX);
    CHECKCALL(glStopInstrumentsSGIX);
    DO_REAL_CALL(glStopInstrumentsSGIX(_p0));
    _W.writeAPICall(APICall_glStopInstrumentsSGIX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStopInstrumentsSGIX);
}

void GLAPIENTRY glStringMarkerGREMEDY(GLsizei _p0, const GLvoid *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glStringMarkerGREMEDY);
    _COUNT(APICall_glStringMarkerGREMEDY);
    CHECKCALL(glStringMarkerGREMEDY);
    DO_REAL_CALL(glStringMarkerGREMEDY(_p0,_p1));
    _W.writeAPICall(APICall_glStringMarkerGREMEDY);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glStringMarkerGREMEDY);
}

void GLAPIENTRY glSwizzleEXT(GLuint _p0, GLuint _p1, GLenum _p2, GLenum _p3, GLenum _p4, GLenum _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glSwizzleEXT);
    _COUNT(APICall_glSwizzleEXT);
    CHECKCALL(glSwizzleEXT);
    DO_REAL_CALL(glSwizzleEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glSwizzleEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glSwizzleEXT);
}

void GLAPIENTRY glTagSampleBufferSGIX()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTagSampleBufferSGIX);
    _COUNT(APICall_glTagSampleBufferSGIX);
    CHECKCALL(glTagSampleBufferSGIX);
    DO_REAL_CALL(glTagSampleBufferSGIX());
    _W.writeAPICall(APICall_glTagSampleBufferSGIX);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTagSampleBufferSGIX);
}

void GLAPIENTRY glTangent3bEXT(GLbyte _p0, GLbyte _p1, GLbyte _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3bEXT);
    _COUNT(APICall_glTangent3bEXT);
    CHECKCALL(glTangent3bEXT);
    DO_REAL_CALL(glTangent3bEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTangent3bEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3bEXT);
}

void GLAPIENTRY glTangent3bvEXT(const GLbyte *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3bvEXT);
    _COUNT(APICall_glTangent3bvEXT);
    CHECKCALL(glTangent3bvEXT);
    DO_REAL_CALL(glTangent3bvEXT(_p0));
    _W.writeAPICall(APICall_glTangent3bvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3bvEXT);
}

void GLAPIENTRY glTangent3dEXT(GLdouble _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3dEXT);
    _COUNT(APICall_glTangent3dEXT);
    CHECKCALL(glTangent3dEXT);
    DO_REAL_CALL(glTangent3dEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTangent3dEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3dEXT);
}

void GLAPIENTRY glTangent3dvEXT(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3dvEXT);
    _COUNT(APICall_glTangent3dvEXT);
    CHECKCALL(glTangent3dvEXT);
    DO_REAL_CALL(glTangent3dvEXT(_p0));
    _W.writeAPICall(APICall_glTangent3dvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3dvEXT);
}

void GLAPIENTRY glTangent3fEXT(GLfloat _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3fEXT);
    _COUNT(APICall_glTangent3fEXT);
    CHECKCALL(glTangent3fEXT);
    DO_REAL_CALL(glTangent3fEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTangent3fEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3fEXT);
}

void GLAPIENTRY glTangent3fvEXT(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3fvEXT);
    _COUNT(APICall_glTangent3fvEXT);
    CHECKCALL(glTangent3fvEXT);
    DO_REAL_CALL(glTangent3fvEXT(_p0));
    _W.writeAPICall(APICall_glTangent3fvEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3fvEXT);
}

void GLAPIENTRY glTangent3iEXT(GLint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3iEXT);
    _COUNT(APICall_glTangent3iEXT);
    CHECKCALL(glTangent3iEXT);
    DO_REAL_CALL(glTangent3iEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTangent3iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3iEXT);
}

void GLAPIENTRY glTangent3ivEXT(const GLint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3ivEXT);
    _COUNT(APICall_glTangent3ivEXT);
    CHECKCALL(glTangent3ivEXT);
    DO_REAL_CALL(glTangent3ivEXT(_p0));
    _W.writeAPICall(APICall_glTangent3ivEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3ivEXT);
}

void GLAPIENTRY glTangent3sEXT(GLshort _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3sEXT);
    _COUNT(APICall_glTangent3sEXT);
    CHECKCALL(glTangent3sEXT);
    DO_REAL_CALL(glTangent3sEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTangent3sEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3sEXT);
}

void GLAPIENTRY glTangent3svEXT(const GLshort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangent3svEXT);
    _COUNT(APICall_glTangent3svEXT);
    CHECKCALL(glTangent3svEXT);
    DO_REAL_CALL(glTangent3svEXT(_p0));
    _W.writeAPICall(APICall_glTangent3svEXT);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangent3svEXT);
}

void GLAPIENTRY glTangentPointerEXT(GLenum _p0, GLsizei _p1, const GLvoid *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTangentPointerEXT);
    _COUNT(APICall_glTangentPointerEXT);
    CHECKCALL(glTangentPointerEXT);
    DO_REAL_CALL(glTangentPointerEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTangentPointerEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTangentPointerEXT);
}

void GLAPIENTRY glTbufferMask3DFX(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTbufferMask3DFX);
    _COUNT(APICall_glTbufferMask3DFX);
    CHECKCALL(glTbufferMask3DFX);
    DO_REAL_CALL(glTbufferMask3DFX(_p0));
    _W.writeAPICall(APICall_glTbufferMask3DFX);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTbufferMask3DFX);
}

void GLAPIENTRY glTessellationFactorAMD(GLfloat _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTessellationFactorAMD);
    _COUNT(APICall_glTessellationFactorAMD);
    CHECKCALL(glTessellationFactorAMD);
    DO_REAL_CALL(glTessellationFactorAMD(_p0));
    _W.writeAPICall(APICall_glTessellationFactorAMD);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTessellationFactorAMD);
}

void GLAPIENTRY glTessellationModeAMD(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTessellationModeAMD);
    _COUNT(APICall_glTessellationModeAMD);
    CHECKCALL(glTessellationModeAMD);
    DO_REAL_CALL(glTessellationModeAMD(_p0));
    _W.writeAPICall(APICall_glTessellationModeAMD);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTessellationModeAMD);
}

GLboolean GLAPIENTRY glTestFenceAPPLE(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTestFenceAPPLE);
    _COUNT(APICall_glTestFenceAPPLE);
    CHECKCALL(glTestFenceAPPLE);
    _result = DO_REAL_CALL(glTestFenceAPPLE(_p0));
    _W.writeAPICall(APICall_glTestFenceAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTestFenceAPPLE);
    return _result;
}

GLboolean GLAPIENTRY glTestFenceNV(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTestFenceNV);
    _COUNT(APICall_glTestFenceNV);
    CHECKCALL(glTestFenceNV);
    _result = DO_REAL_CALL(glTestFenceNV(_p0));
    _W.writeAPICall(APICall_glTestFenceNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTestFenceNV);
    return _result;
}

GLboolean GLAPIENTRY glTestObjectAPPLE(GLenum _p0, GLuint _p1)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTestObjectAPPLE);
    _COUNT(APICall_glTestObjectAPPLE);
    CHECKCALL(glTestObjectAPPLE);
    _result = DO_REAL_CALL(glTestObjectAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glTestObjectAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTestObjectAPPLE);
    return _result;
}

void GLAPIENTRY glTexBuffer(GLenum _p0, GLenum _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexBuffer);
    _COUNT(APICall_glTexBuffer);
    CHECKCALL(glTexBuffer);
    DO_REAL_CALL(glTexBuffer(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTexBuffer);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexBuffer);
}

void GLAPIENTRY glTexBufferARB(GLenum _p0, GLenum _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexBufferARB);
    _COUNT(APICall_glTexBufferARB);
    CHECKCALL(glTexBufferARB);
    DO_REAL_CALL(glTexBufferARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTexBufferARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexBufferARB);
}

void GLAPIENTRY glTexBufferEXT(GLenum _p0, GLenum _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexBufferEXT);
    _COUNT(APICall_glTexBufferEXT);
    CHECKCALL(glTexBufferEXT);
    DO_REAL_CALL(glTexBufferEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTexBufferEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexBufferEXT);
}

void GLAPIENTRY glTexBumpParameterfvATI(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexBumpParameterfvATI);
    _COUNT(APICall_glTexBumpParameterfvATI);
    CHECKCALL(glTexBumpParameterfvATI);
    DO_REAL_CALL(glTexBumpParameterfvATI(_p0,_p1));
    _W.writeAPICall(APICall_glTexBumpParameterfvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexBumpParameterfvATI);
}

void GLAPIENTRY glTexBumpParameterivATI(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexBumpParameterivATI);
    _COUNT(APICall_glTexBumpParameterivATI);
    CHECKCALL(glTexBumpParameterivATI);
    DO_REAL_CALL(glTexBumpParameterivATI(_p0,_p1));
    _W.writeAPICall(APICall_glTexBumpParameterivATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexBumpParameterivATI);
}

void GLAPIENTRY glTexCoord1d(GLdouble s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1d);
    _COUNT(APICall_glTexCoord1d);
    CHECKCALL(glTexCoord1d);
    DO_REAL_CALL(glTexCoord1d(s));
    _W.writeAPICall(APICall_glTexCoord1d);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1d);
}

void GLAPIENTRY glTexCoord1dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1dv);
    _COUNT(APICall_glTexCoord1dv);
    CHECKCALL(glTexCoord1dv);
    DO_REAL_CALL(glTexCoord1dv(v));
    _W.writeAPICall(APICall_glTexCoord1dv);
    _W.writeMark("(");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1dv);
}

void GLAPIENTRY glTexCoord1f(GLfloat s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1f);
    _COUNT(APICall_glTexCoord1f);
    CHECKCALL(glTexCoord1f);
    DO_REAL_CALL(glTexCoord1f(s));
    _W.writeAPICall(APICall_glTexCoord1f);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1f);
}

void GLAPIENTRY glTexCoord1fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1fv);
    _COUNT(APICall_glTexCoord1fv);
    CHECKCALL(glTexCoord1fv);
    DO_REAL_CALL(glTexCoord1fv(v));
    _W.writeAPICall(APICall_glTexCoord1fv);
    _W.writeMark("(");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1fv);
}

void GLAPIENTRY glTexCoord1hNV(GLhalfNV _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1hNV);
    _COUNT(APICall_glTexCoord1hNV);
    CHECKCALL(glTexCoord1hNV);
    DO_REAL_CALL(glTexCoord1hNV(_p0));
    _W.writeAPICall(APICall_glTexCoord1hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1hNV);
}

void GLAPIENTRY glTexCoord1hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1hvNV);
    _COUNT(APICall_glTexCoord1hvNV);
    CHECKCALL(glTexCoord1hvNV);
    DO_REAL_CALL(glTexCoord1hvNV(_p0));
    _W.writeAPICall(APICall_glTexCoord1hvNV);
    _W.writeMark("(");
    _W.write(_p0, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1hvNV);
}

void GLAPIENTRY glTexCoord1i(GLint s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1i);
    _COUNT(APICall_glTexCoord1i);
    CHECKCALL(glTexCoord1i);
    DO_REAL_CALL(glTexCoord1i(s));
    _W.writeAPICall(APICall_glTexCoord1i);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1i);
}

void GLAPIENTRY glTexCoord1iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1iv);
    _COUNT(APICall_glTexCoord1iv);
    CHECKCALL(glTexCoord1iv);
    DO_REAL_CALL(glTexCoord1iv(v));
    _W.writeAPICall(APICall_glTexCoord1iv);
    _W.writeMark("(");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1iv);
}

void GLAPIENTRY glTexCoord1s(GLshort s)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1s);
    _COUNT(APICall_glTexCoord1s);
    CHECKCALL(glTexCoord1s);
    DO_REAL_CALL(glTexCoord1s(s));
    _W.writeAPICall(APICall_glTexCoord1s);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1s);
}

void GLAPIENTRY glTexCoord1sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord1sv);
    _COUNT(APICall_glTexCoord1sv);
    CHECKCALL(glTexCoord1sv);
    DO_REAL_CALL(glTexCoord1sv(v));
    _W.writeAPICall(APICall_glTexCoord1sv);
    _W.writeMark("(");
    _W.write(v, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord1sv);
}

void GLAPIENTRY glTexCoord2d(GLdouble s, GLdouble t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2d);
    _COUNT(APICall_glTexCoord2d);
    CHECKCALL(glTexCoord2d);
    DO_REAL_CALL(glTexCoord2d(s,t));
    _W.writeAPICall(APICall_glTexCoord2d);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2d);
}

void GLAPIENTRY glTexCoord2dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2dv);
    _COUNT(APICall_glTexCoord2dv);
    CHECKCALL(glTexCoord2dv);
    DO_REAL_CALL(glTexCoord2dv(v));
    _W.writeAPICall(APICall_glTexCoord2dv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2dv);
}

void GLAPIENTRY glTexCoord2f(GLfloat s, GLfloat t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2f);
    _COUNT(APICall_glTexCoord2f);
    CHECKCALL(glTexCoord2f);
    DO_REAL_CALL(glTexCoord2f(s,t));
    _W.writeAPICall(APICall_glTexCoord2f);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2f);
}

void GLAPIENTRY glTexCoord2fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2fv);
    _COUNT(APICall_glTexCoord2fv);
    CHECKCALL(glTexCoord2fv);
    DO_REAL_CALL(glTexCoord2fv(v));
    _W.writeAPICall(APICall_glTexCoord2fv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2fv);
}

void GLAPIENTRY glTexCoord2hNV(GLhalfNV _p0, GLhalfNV _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2hNV);
    _COUNT(APICall_glTexCoord2hNV);
    CHECKCALL(glTexCoord2hNV);
    DO_REAL_CALL(glTexCoord2hNV(_p0,_p1));
    _W.writeAPICall(APICall_glTexCoord2hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2hNV);
}

void GLAPIENTRY glTexCoord2hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2hvNV);
    _COUNT(APICall_glTexCoord2hvNV);
    CHECKCALL(glTexCoord2hvNV);
    DO_REAL_CALL(glTexCoord2hvNV(_p0));
    _W.writeAPICall(APICall_glTexCoord2hvNV);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2hvNV);
}

void GLAPIENTRY glTexCoord2i(GLint s, GLint t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2i);
    _COUNT(APICall_glTexCoord2i);
    CHECKCALL(glTexCoord2i);
    DO_REAL_CALL(glTexCoord2i(s,t));
    _W.writeAPICall(APICall_glTexCoord2i);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2i);
}

void GLAPIENTRY glTexCoord2iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2iv);
    _COUNT(APICall_glTexCoord2iv);
    CHECKCALL(glTexCoord2iv);
    DO_REAL_CALL(glTexCoord2iv(v));
    _W.writeAPICall(APICall_glTexCoord2iv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2iv);
}

void GLAPIENTRY glTexCoord2s(GLshort s, GLshort t)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2s);
    _COUNT(APICall_glTexCoord2s);
    CHECKCALL(glTexCoord2s);
    DO_REAL_CALL(glTexCoord2s(s,t));
    _W.writeAPICall(APICall_glTexCoord2s);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2s);
}

void GLAPIENTRY glTexCoord2sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord2sv);
    _COUNT(APICall_glTexCoord2sv);
    CHECKCALL(glTexCoord2sv);
    DO_REAL_CALL(glTexCoord2sv(v));
    _W.writeAPICall(APICall_glTexCoord2sv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord2sv);
}

void GLAPIENTRY glTexCoord3d(GLdouble s, GLdouble t, GLdouble r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3d);
    _COUNT(APICall_glTexCoord3d);
    CHECKCALL(glTexCoord3d);
    DO_REAL_CALL(glTexCoord3d(s,t,r));
    _W.writeAPICall(APICall_glTexCoord3d);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3d);
}

void GLAPIENTRY glTexCoord3dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3dv);
    _COUNT(APICall_glTexCoord3dv);
    CHECKCALL(glTexCoord3dv);
    DO_REAL_CALL(glTexCoord3dv(v));
    _W.writeAPICall(APICall_glTexCoord3dv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3dv);
}

void GLAPIENTRY glTexCoord3f(GLfloat s, GLfloat t, GLfloat r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3f);
    _COUNT(APICall_glTexCoord3f);
    CHECKCALL(glTexCoord3f);
    DO_REAL_CALL(glTexCoord3f(s,t,r));
    _W.writeAPICall(APICall_glTexCoord3f);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3f);
}

void GLAPIENTRY glTexCoord3fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3fv);
    _COUNT(APICall_glTexCoord3fv);
    CHECKCALL(glTexCoord3fv);
    DO_REAL_CALL(glTexCoord3fv(v));
    _W.writeAPICall(APICall_glTexCoord3fv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3fv);
}

void GLAPIENTRY glTexCoord3hNV(GLhalfNV _p0, GLhalfNV _p1, GLhalfNV _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3hNV);
    _COUNT(APICall_glTexCoord3hNV);
    CHECKCALL(glTexCoord3hNV);
    DO_REAL_CALL(glTexCoord3hNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTexCoord3hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3hNV);
}

void GLAPIENTRY glTexCoord3hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3hvNV);
    _COUNT(APICall_glTexCoord3hvNV);
    CHECKCALL(glTexCoord3hvNV);
    DO_REAL_CALL(glTexCoord3hvNV(_p0));
    _W.writeAPICall(APICall_glTexCoord3hvNV);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3hvNV);
}

void GLAPIENTRY glTexCoord3i(GLint s, GLint t, GLint r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3i);
    _COUNT(APICall_glTexCoord3i);
    CHECKCALL(glTexCoord3i);
    DO_REAL_CALL(glTexCoord3i(s,t,r));
    _W.writeAPICall(APICall_glTexCoord3i);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3i);
}

void GLAPIENTRY glTexCoord3iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3iv);
    _COUNT(APICall_glTexCoord3iv);
    CHECKCALL(glTexCoord3iv);
    DO_REAL_CALL(glTexCoord3iv(v));
    _W.writeAPICall(APICall_glTexCoord3iv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3iv);
}

void GLAPIENTRY glTexCoord3s(GLshort s, GLshort t, GLshort r)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3s);
    _COUNT(APICall_glTexCoord3s);
    CHECKCALL(glTexCoord3s);
    DO_REAL_CALL(glTexCoord3s(s,t,r));
    _W.writeAPICall(APICall_glTexCoord3s);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3s);
}

void GLAPIENTRY glTexCoord3sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord3sv);
    _COUNT(APICall_glTexCoord3sv);
    CHECKCALL(glTexCoord3sv);
    DO_REAL_CALL(glTexCoord3sv(v));
    _W.writeAPICall(APICall_glTexCoord3sv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord3sv);
}

void GLAPIENTRY glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4d);
    _COUNT(APICall_glTexCoord4d);
    CHECKCALL(glTexCoord4d);
    DO_REAL_CALL(glTexCoord4d(s,t,r,q));
    _W.writeAPICall(APICall_glTexCoord4d);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4d);
}

void GLAPIENTRY glTexCoord4dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4dv);
    _COUNT(APICall_glTexCoord4dv);
    CHECKCALL(glTexCoord4dv);
    DO_REAL_CALL(glTexCoord4dv(v));
    _W.writeAPICall(APICall_glTexCoord4dv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4dv);
}

void GLAPIENTRY glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4f);
    _COUNT(APICall_glTexCoord4f);
    CHECKCALL(glTexCoord4f);
    DO_REAL_CALL(glTexCoord4f(s,t,r,q));
    _W.writeAPICall(APICall_glTexCoord4f);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4f);
}

void GLAPIENTRY glTexCoord4fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4fv);
    _COUNT(APICall_glTexCoord4fv);
    CHECKCALL(glTexCoord4fv);
    DO_REAL_CALL(glTexCoord4fv(v));
    _W.writeAPICall(APICall_glTexCoord4fv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4fv);
}

void GLAPIENTRY glTexCoord4hNV(GLhalfNV _p0, GLhalfNV _p1, GLhalfNV _p2, GLhalfNV _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4hNV);
    _COUNT(APICall_glTexCoord4hNV);
    CHECKCALL(glTexCoord4hNV);
    DO_REAL_CALL(glTexCoord4hNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTexCoord4hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4hNV);
}

void GLAPIENTRY glTexCoord4hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4hvNV);
    _COUNT(APICall_glTexCoord4hvNV);
    CHECKCALL(glTexCoord4hvNV);
    DO_REAL_CALL(glTexCoord4hvNV(_p0));
    _W.writeAPICall(APICall_glTexCoord4hvNV);
    _W.writeMark("(");
    _W.write(_p0, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4hvNV);
}

void GLAPIENTRY glTexCoord4i(GLint s, GLint t, GLint r, GLint q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4i);
    _COUNT(APICall_glTexCoord4i);
    CHECKCALL(glTexCoord4i);
    DO_REAL_CALL(glTexCoord4i(s,t,r,q));
    _W.writeAPICall(APICall_glTexCoord4i);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4i);
}

void GLAPIENTRY glTexCoord4iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4iv);
    _COUNT(APICall_glTexCoord4iv);
    CHECKCALL(glTexCoord4iv);
    DO_REAL_CALL(glTexCoord4iv(v));
    _W.writeAPICall(APICall_glTexCoord4iv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4iv);
}

void GLAPIENTRY glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4s);
    _COUNT(APICall_glTexCoord4s);
    CHECKCALL(glTexCoord4s);
    DO_REAL_CALL(glTexCoord4s(s,t,r,q));
    _W.writeAPICall(APICall_glTexCoord4s);
    _W.writeMark("(");
    _W.write(s);
    _W.writeMark(",");
    _W.write(t);
    _W.writeMark(",");
    _W.write(r);
    _W.writeMark(",");
    _W.write(q);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4s);
}

void GLAPIENTRY glTexCoord4sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoord4sv);
    _COUNT(APICall_glTexCoord4sv);
    CHECKCALL(glTexCoord4sv);
    DO_REAL_CALL(glTexCoord4sv(v));
    _W.writeAPICall(APICall_glTexCoord4sv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoord4sv);
}

void GLAPIENTRY glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *ptr)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoordPointer);
    _COUNT(APICall_glTexCoordPointer);
    CHECKCALL(glTexCoordPointer);
    DO_REAL_CALL(glTexCoordPointer(size,type,stride,ptr));
    _W.writeAPICall(APICall_glTexCoordPointer);
    _W.writeMark("(");
    _W.write(size);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.write(stride);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glTexCoordPointer_SPECIFIC(size,type,stride,ptr);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoordPointer);
}

void GLAPIENTRY glTexCoordPointerEXT(GLint _p0, GLenum _p1, GLsizei _p2, GLsizei _p3, const GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoordPointerEXT);
    _COUNT(APICall_glTexCoordPointerEXT);
    CHECKCALL(glTexCoordPointerEXT);
    DO_REAL_CALL(glTexCoordPointerEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glTexCoordPointerEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoordPointerEXT);
}

void GLAPIENTRY glTexCoordPointervINTEL(GLint _p0, GLenum _p1, const GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexCoordPointervINTEL);
    _COUNT(APICall_glTexCoordPointervINTEL);
    CHECKCALL(glTexCoordPointervINTEL);
    DO_REAL_CALL(glTexCoordPointervINTEL(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTexCoordPointervINTEL);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexCoordPointervINTEL);
}

void GLAPIENTRY glTexEnvf(GLenum target, GLenum pname, GLfloat param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexEnvf);
    _COUNT(APICall_glTexEnvf);
    CHECKCALL(glTexEnvf);
    DO_REAL_CALL(glTexEnvf(target,pname,param));
    _W.writeAPICall(APICall_glTexEnvf);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexEnvf);
}

void GLAPIENTRY glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexEnvfv);
    _COUNT(APICall_glTexEnvfv);
    CHECKCALL(glTexEnvfv);
    DO_REAL_CALL(glTexEnvfv(target,pname,params));
    _W.writeAPICall(APICall_glTexEnvfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glTexEnvfv_SPECIFIC(target,pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexEnvfv);
}

void GLAPIENTRY glTexEnvi(GLenum target, GLenum pname, GLint param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexEnvi);
    _COUNT(APICall_glTexEnvi);
    CHECKCALL(glTexEnvi);
    DO_REAL_CALL(glTexEnvi(target,pname,param));
    _W.writeAPICall(APICall_glTexEnvi);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexEnvi);
}

void GLAPIENTRY glTexEnviv(GLenum target, GLenum pname, const GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexEnviv);
    _COUNT(APICall_glTexEnviv);
    CHECKCALL(glTexEnviv);
    DO_REAL_CALL(glTexEnviv(target,pname,params));
    _W.writeAPICall(APICall_glTexEnviv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexEnviv);
}

void GLAPIENTRY glTexFilterFuncSGIS(GLenum _p0, GLenum _p1, GLsizei _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexFilterFuncSGIS);
    _COUNT(APICall_glTexFilterFuncSGIS);
    CHECKCALL(glTexFilterFuncSGIS);
    DO_REAL_CALL(glTexFilterFuncSGIS(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTexFilterFuncSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexFilterFuncSGIS);
}

void GLAPIENTRY glTexGend(GLenum coord, GLenum pname, GLdouble param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexGend);
    _COUNT(APICall_glTexGend);
    CHECKCALL(glTexGend);
    DO_REAL_CALL(glTexGend(coord,pname,param));
    _W.writeAPICall(APICall_glTexGend);
    _W.writeMark("(");
    _W.writeEnum(coord);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexGend);
}

void GLAPIENTRY glTexGendv(GLenum coord, GLenum pname, const GLdouble *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexGendv);
    _COUNT(APICall_glTexGendv);
    CHECKCALL(glTexGendv);
    DO_REAL_CALL(glTexGendv(coord,pname,params));
    _W.writeAPICall(APICall_glTexGendv);
    _W.writeMark("(");
    _W.writeEnum(coord);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexGendv);
}

void GLAPIENTRY glTexGenf(GLenum coord, GLenum pname, GLfloat param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexGenf);
    _COUNT(APICall_glTexGenf);
    CHECKCALL(glTexGenf);
    DO_REAL_CALL(glTexGenf(coord,pname,param));
    _W.writeAPICall(APICall_glTexGenf);
    _W.writeMark("(");
    _W.writeEnum(coord);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexGenf);
}

void GLAPIENTRY glTexGenfv(GLenum coord, GLenum pname, const GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexGenfv);
    _COUNT(APICall_glTexGenfv);
    CHECKCALL(glTexGenfv);
    DO_REAL_CALL(glTexGenfv(coord,pname,params));
    _W.writeAPICall(APICall_glTexGenfv);
    _W.writeMark("(");
    _W.writeEnum(coord);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glTexGenfv_SPECIFIC(coord,pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexGenfv);
}

void GLAPIENTRY glTexGeni(GLenum coord, GLenum pname, GLint param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexGeni);
    _COUNT(APICall_glTexGeni);
    CHECKCALL(glTexGeni);
    DO_REAL_CALL(glTexGeni(coord,pname,param));
    _W.writeAPICall(APICall_glTexGeni);
    _W.writeMark("(");
    _W.writeEnum(coord);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexGeni);
}

void GLAPIENTRY glTexGeniv(GLenum coord, GLenum pname, const GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexGeniv);
    _COUNT(APICall_glTexGeniv);
    CHECKCALL(glTexGeniv);
    DO_REAL_CALL(glTexGeniv(coord,pname,params));
    _W.writeAPICall(APICall_glTexGeniv);
    _W.writeMark("(");
    _W.writeEnum(coord);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexGeniv);
}

void GLAPIENTRY glTexImage1D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexImage1D);
    _COUNT(APICall_glTexImage1D);
    CHECKCALL(glTexImage1D);
    DO_REAL_CALL(glTexImage1D(target,level,internalFormat,width,border,format,type,pixels));
    _W.writeAPICall(APICall_glTexImage1D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(internalFormat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(border);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&pixels);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexImage1D);
}

void GLAPIENTRY glTexImage2D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexImage2D);
    _COUNT(APICall_glTexImage2D);
    CHECKCALL(glTexImage2D);
    DO_REAL_CALL(glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels));
    _W.writeAPICall(APICall_glTexImage2D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(internalFormat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.write(border);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glTexImage2D_SPECIFIC(target,level,internalFormat,width,height,border,format,type,pixels);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexImage2D);
}

void GLAPIENTRY glTexImage3D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexImage3D);
    _COUNT(APICall_glTexImage3D);
    CHECKCALL(glTexImage3D);
    DO_REAL_CALL(glTexImage3D(target,level,internalFormat,width,height,depth,border,format,type,pixels));
    _W.writeAPICall(APICall_glTexImage3D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(internalFormat);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.write(depth);
    _W.writeMark(",");
    _W.write(border);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glTexImage3D_SPECIFIC(target,level,internalFormat,width,height,depth,border,format,type,pixels);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexImage3D);
}

void GLAPIENTRY glTexImage3DEXT(GLenum _p0, GLint _p1, GLenum _p2, GLsizei _p3, GLsizei _p4, GLsizei _p5, GLint _p6, GLenum _p7, GLenum _p8, const GLvoid *_p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexImage3DEXT);
    _COUNT(APICall_glTexImage3DEXT);
    CHECKCALL(glTexImage3DEXT);
    DO_REAL_CALL(glTexImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glTexImage3DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.writeUnknown(&_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexImage3DEXT);
}

void GLAPIENTRY glTexImage4DSGIS(GLenum _p0, GLint _p1, GLenum _p2, GLsizei _p3, GLsizei _p4, GLsizei _p5, GLsizei _p6, GLint _p7, GLenum _p8, GLenum _p9, const GLvoid *_p10)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexImage4DSGIS);
    _COUNT(APICall_glTexImage4DSGIS);
    CHECKCALL(glTexImage4DSGIS);
    DO_REAL_CALL(glTexImage4DSGIS(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10));
    _W.writeAPICall(APICall_glTexImage4DSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(",");
    _W.writeUnknown(&_p10);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexImage4DSGIS);
}

void GLAPIENTRY glTexParameterIiv(GLenum _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexParameterIiv);
    _COUNT(APICall_glTexParameterIiv);
    CHECKCALL(glTexParameterIiv);
    DO_REAL_CALL(glTexParameterIiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTexParameterIiv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexParameterIiv);
}

void GLAPIENTRY glTexParameterIivEXT(GLenum _p0, GLenum _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexParameterIivEXT);
    _COUNT(APICall_glTexParameterIivEXT);
    CHECKCALL(glTexParameterIivEXT);
    DO_REAL_CALL(glTexParameterIivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTexParameterIivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexParameterIivEXT);
}

void GLAPIENTRY glTexParameterIuiv(GLenum _p0, GLenum _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexParameterIuiv);
    _COUNT(APICall_glTexParameterIuiv);
    CHECKCALL(glTexParameterIuiv);
    DO_REAL_CALL(glTexParameterIuiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTexParameterIuiv);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexParameterIuiv);
}

void GLAPIENTRY glTexParameterIuivEXT(GLenum _p0, GLenum _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexParameterIuivEXT);
    _COUNT(APICall_glTexParameterIuivEXT);
    CHECKCALL(glTexParameterIuivEXT);
    DO_REAL_CALL(glTexParameterIuivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTexParameterIuivEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexParameterIuivEXT);
}

void GLAPIENTRY glTexParameterf(GLenum target, GLenum pname, GLfloat param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexParameterf);
    _COUNT(APICall_glTexParameterf);
    CHECKCALL(glTexParameterf);
    DO_REAL_CALL(glTexParameterf(target,pname,param));
    _W.writeAPICall(APICall_glTexParameterf);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexParameterf);
}

void GLAPIENTRY glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexParameterfv);
    _COUNT(APICall_glTexParameterfv);
    CHECKCALL(glTexParameterfv);
    DO_REAL_CALL(glTexParameterfv(target,pname,params));
    _W.writeAPICall(APICall_glTexParameterfv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glTexParameterfv_SPECIFIC(target,pname,params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexParameterfv);
}

void GLAPIENTRY glTexParameteri(GLenum target, GLenum pname, GLint param)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexParameteri);
    _COUNT(APICall_glTexParameteri);
    CHECKCALL(glTexParameteri);
    DO_REAL_CALL(glTexParameteri(target,pname,param));
    _W.writeAPICall(APICall_glTexParameteri);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.write(param);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexParameteri);
}

void GLAPIENTRY glTexParameteriv(GLenum target, GLenum pname, const GLint *params)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexParameteriv);
    _COUNT(APICall_glTexParameteriv);
    CHECKCALL(glTexParameteriv);
    DO_REAL_CALL(glTexParameteriv(target,pname,params));
    _W.writeAPICall(APICall_glTexParameteriv);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.writeEnum(pname);
    _W.writeMark(",");
    _W.writeUnknown(&params);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexParameteriv);
}

void GLAPIENTRY glTexRenderbufferNV(GLenum _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexRenderbufferNV);
    _COUNT(APICall_glTexRenderbufferNV);
    CHECKCALL(glTexRenderbufferNV);
    DO_REAL_CALL(glTexRenderbufferNV(_p0,_p1));
    _W.writeAPICall(APICall_glTexRenderbufferNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexRenderbufferNV);
}

void GLAPIENTRY glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexSubImage1D);
    _COUNT(APICall_glTexSubImage1D);
    CHECKCALL(glTexSubImage1D);
    DO_REAL_CALL(glTexSubImage1D(target,level,xoffset,width,format,type,pixels));
    _W.writeAPICall(APICall_glTexSubImage1D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(xoffset);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&pixels);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexSubImage1D);
}

void GLAPIENTRY glTexSubImage1DEXT(GLenum _p0, GLint _p1, GLint _p2, GLsizei _p3, GLenum _p4, GLenum _p5, const GLvoid *_p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexSubImage1DEXT);
    _COUNT(APICall_glTexSubImage1DEXT);
    CHECKCALL(glTexSubImage1DEXT);
    DO_REAL_CALL(glTexSubImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glTexSubImage1DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexSubImage1DEXT);
}

void GLAPIENTRY glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexSubImage2D);
    _COUNT(APICall_glTexSubImage2D);
    CHECKCALL(glTexSubImage2D);
    DO_REAL_CALL(glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels));
    _W.writeAPICall(APICall_glTexSubImage2D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(xoffset);
    _W.writeMark(",");
    _W.write(yoffset);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glTexSubImage2D_SPECIFIC(target,level,xoffset,yoffset,width,height,format,type,pixels);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexSubImage2D);
}

void GLAPIENTRY glTexSubImage2DEXT(GLenum _p0, GLint _p1, GLint _p2, GLint _p3, GLsizei _p4, GLsizei _p5, GLenum _p6, GLenum _p7, const GLvoid *_p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexSubImage2DEXT);
    _COUNT(APICall_glTexSubImage2DEXT);
    CHECKCALL(glTexSubImage2DEXT);
    DO_REAL_CALL(glTexSubImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glTexSubImage2DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.writeEnum(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.writeUnknown(&_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexSubImage2DEXT);
}

void GLAPIENTRY glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexSubImage3D);
    _COUNT(APICall_glTexSubImage3D);
    CHECKCALL(glTexSubImage3D);
    DO_REAL_CALL(glTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels));
    _W.writeAPICall(APICall_glTexSubImage3D);
    _W.writeMark("(");
    _W.writeEnum(target);
    _W.writeMark(",");
    _W.write(level);
    _W.writeMark(",");
    _W.write(xoffset);
    _W.writeMark(",");
    _W.write(yoffset);
    _W.writeMark(",");
    _W.write(zoffset);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(",");
    _W.write(depth);
    _W.writeMark(",");
    _W.writeEnum(format);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.writeUnknown(&pixels);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexSubImage3D);
}

void GLAPIENTRY glTexSubImage3DEXT(GLenum _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4, GLsizei _p5, GLsizei _p6, GLsizei _p7, GLenum _p8, GLenum _p9, const GLvoid *_p10)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexSubImage3DEXT);
    _COUNT(APICall_glTexSubImage3DEXT);
    CHECKCALL(glTexSubImage3DEXT);
    DO_REAL_CALL(glTexSubImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10));
    _W.writeAPICall(APICall_glTexSubImage3DEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(",");
    _W.writeUnknown(&_p10);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexSubImage3DEXT);
}

void GLAPIENTRY glTexSubImage4DSGIS(GLenum _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLsizei _p6, GLsizei _p7, GLsizei _p8, GLsizei _p9, GLenum _p10, GLenum _p11, const GLvoid *_p12)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTexSubImage4DSGIS);
    _COUNT(APICall_glTexSubImage4DSGIS);
    CHECKCALL(glTexSubImage4DSGIS);
    DO_REAL_CALL(glTexSubImage4DSGIS(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11,_p12));
    _W.writeAPICall(APICall_glTexSubImage4DSGIS);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.write(_p9);
    _W.writeMark(",");
    _W.writeEnum(_p10);
    _W.writeMark(",");
    _W.writeEnum(_p11);
    _W.writeMark(",");
    _W.writeUnknown(&_p12);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTexSubImage4DSGIS);
}

void GLAPIENTRY glTextureBufferEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureBufferEXT);
    _COUNT(APICall_glTextureBufferEXT);
    CHECKCALL(glTextureBufferEXT);
    DO_REAL_CALL(glTextureBufferEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTextureBufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureBufferEXT);
}

void GLAPIENTRY glTextureColorMaskSGIS(GLboolean _p0, GLboolean _p1, GLboolean _p2, GLboolean _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureColorMaskSGIS);
    _COUNT(APICall_glTextureColorMaskSGIS);
    CHECKCALL(glTextureColorMaskSGIS);
    DO_REAL_CALL(glTextureColorMaskSGIS(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTextureColorMaskSGIS);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureColorMaskSGIS);
}

void GLAPIENTRY glTextureImage1DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLint _p5, GLenum _p6, GLenum _p7, const GLvoid *_p8)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureImage1DEXT);
    _COUNT(APICall_glTextureImage1DEXT);
    CHECKCALL(glTextureImage1DEXT);
    DO_REAL_CALL(glTextureImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8));
    _W.writeAPICall(APICall_glTextureImage1DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.writeEnum(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.writeUnknown(&_p8);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureImage1DEXT);
}

void GLAPIENTRY glTextureImage2DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLsizei _p5, GLint _p6, GLenum _p7, GLenum _p8, const GLvoid *_p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureImage2DEXT);
    _COUNT(APICall_glTextureImage2DEXT);
    CHECKCALL(glTextureImage2DEXT);
    DO_REAL_CALL(glTextureImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glTextureImage2DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.writeUnknown(&_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureImage2DEXT);
}

void GLAPIENTRY glTextureImage3DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLenum _p3, GLsizei _p4, GLsizei _p5, GLsizei _p6, GLint _p7, GLenum _p8, GLenum _p9, const GLvoid *_p10)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureImage3DEXT);
    _COUNT(APICall_glTextureImage3DEXT);
    CHECKCALL(glTextureImage3DEXT);
    DO_REAL_CALL(glTextureImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10));
    _W.writeAPICall(APICall_glTextureImage3DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(",");
    _W.writeUnknown(&_p10);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureImage3DEXT);
}

void GLAPIENTRY glTextureLightEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureLightEXT);
    _COUNT(APICall_glTextureLightEXT);
    CHECKCALL(glTextureLightEXT);
    DO_REAL_CALL(glTextureLightEXT(_p0));
    _W.writeAPICall(APICall_glTextureLightEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureLightEXT);
}

void GLAPIENTRY glTextureMaterialEXT(GLenum _p0, GLenum _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureMaterialEXT);
    _COUNT(APICall_glTextureMaterialEXT);
    CHECKCALL(glTextureMaterialEXT);
    DO_REAL_CALL(glTextureMaterialEXT(_p0,_p1));
    _W.writeAPICall(APICall_glTextureMaterialEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureMaterialEXT);
}

void GLAPIENTRY glTextureNormalEXT(GLenum _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureNormalEXT);
    _COUNT(APICall_glTextureNormalEXT);
    CHECKCALL(glTextureNormalEXT);
    DO_REAL_CALL(glTextureNormalEXT(_p0));
    _W.writeAPICall(APICall_glTextureNormalEXT);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureNormalEXT);
}

void GLAPIENTRY glTextureParameterIivEXT(GLuint _p0, GLenum _p1, GLenum _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureParameterIivEXT);
    _COUNT(APICall_glTextureParameterIivEXT);
    CHECKCALL(glTextureParameterIivEXT);
    DO_REAL_CALL(glTextureParameterIivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTextureParameterIivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureParameterIivEXT);
}

void GLAPIENTRY glTextureParameterIuivEXT(GLuint _p0, GLenum _p1, GLenum _p2, const GLuint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureParameterIuivEXT);
    _COUNT(APICall_glTextureParameterIuivEXT);
    CHECKCALL(glTextureParameterIuivEXT);
    DO_REAL_CALL(glTextureParameterIuivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTextureParameterIuivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureParameterIuivEXT);
}

void GLAPIENTRY glTextureParameterfEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureParameterfEXT);
    _COUNT(APICall_glTextureParameterfEXT);
    CHECKCALL(glTextureParameterfEXT);
    DO_REAL_CALL(glTextureParameterfEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTextureParameterfEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureParameterfEXT);
}

void GLAPIENTRY glTextureParameterfvEXT(GLuint _p0, GLenum _p1, GLenum _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureParameterfvEXT);
    _COUNT(APICall_glTextureParameterfvEXT);
    CHECKCALL(glTextureParameterfvEXT);
    DO_REAL_CALL(glTextureParameterfvEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTextureParameterfvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureParameterfvEXT);
}

void GLAPIENTRY glTextureParameteriEXT(GLuint _p0, GLenum _p1, GLenum _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureParameteriEXT);
    _COUNT(APICall_glTextureParameteriEXT);
    CHECKCALL(glTextureParameteriEXT);
    DO_REAL_CALL(glTextureParameteriEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTextureParameteriEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureParameteriEXT);
}

void GLAPIENTRY glTextureParameterivEXT(GLuint _p0, GLenum _p1, GLenum _p2, const GLint *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureParameterivEXT);
    _COUNT(APICall_glTextureParameterivEXT);
    CHECKCALL(glTextureParameterivEXT);
    DO_REAL_CALL(glTextureParameterivEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTextureParameterivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureParameterivEXT);
}

void GLAPIENTRY glTextureRenderbufferEXT(GLuint _p0, GLenum _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureRenderbufferEXT);
    _COUNT(APICall_glTextureRenderbufferEXT);
    CHECKCALL(glTextureRenderbufferEXT);
    DO_REAL_CALL(glTextureRenderbufferEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTextureRenderbufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureRenderbufferEXT);
}

void GLAPIENTRY glTextureSubImage1DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLint _p3, GLsizei _p4, GLenum _p5, GLenum _p6, const GLvoid *_p7)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureSubImage1DEXT);
    _COUNT(APICall_glTextureSubImage1DEXT);
    CHECKCALL(glTextureSubImage1DEXT);
    DO_REAL_CALL(glTextureSubImage1DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_glTextureSubImage1DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(",");
    _W.writeEnum(_p6);
    _W.writeMark(",");
    _W.writeUnknown(&_p7);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureSubImage1DEXT);
}

void GLAPIENTRY glTextureSubImage2DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLsizei _p5, GLsizei _p6, GLenum _p7, GLenum _p8, const GLvoid *_p9)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureSubImage2DEXT);
    _COUNT(APICall_glTextureSubImage2DEXT);
    CHECKCALL(glTextureSubImage2DEXT);
    DO_REAL_CALL(glTextureSubImage2DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9));
    _W.writeAPICall(APICall_glTextureSubImage2DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeEnum(_p7);
    _W.writeMark(",");
    _W.writeEnum(_p8);
    _W.writeMark(",");
    _W.writeUnknown(&_p9);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureSubImage2DEXT);
}

void GLAPIENTRY glTextureSubImage3DEXT(GLuint _p0, GLenum _p1, GLint _p2, GLint _p3, GLint _p4, GLint _p5, GLsizei _p6, GLsizei _p7, GLsizei _p8, GLenum _p9, GLenum _p10, const GLvoid *_p11)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTextureSubImage3DEXT);
    _COUNT(APICall_glTextureSubImage3DEXT);
    CHECKCALL(glTextureSubImage3DEXT);
    DO_REAL_CALL(glTextureSubImage3DEXT(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p9,_p10,_p11));
    _W.writeAPICall(APICall_glTextureSubImage3DEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.write(_p7);
    _W.writeMark(",");
    _W.write(_p8);
    _W.writeMark(",");
    _W.writeEnum(_p9);
    _W.writeMark(",");
    _W.writeEnum(_p10);
    _W.writeMark(",");
    _W.writeUnknown(&_p11);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTextureSubImage3DEXT);
}

void GLAPIENTRY glTrackMatrixNV(GLenum _p0, GLuint _p1, GLenum _p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTrackMatrixNV);
    _COUNT(APICall_glTrackMatrixNV);
    CHECKCALL(glTrackMatrixNV);
    DO_REAL_CALL(glTrackMatrixNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTrackMatrixNV);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTrackMatrixNV);
}

void GLAPIENTRY glTransformFeedbackAttribsNV(GLuint _p0, const GLint *_p1, GLenum _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTransformFeedbackAttribsNV);
    _COUNT(APICall_glTransformFeedbackAttribsNV);
    CHECKCALL(glTransformFeedbackAttribsNV);
    DO_REAL_CALL(glTransformFeedbackAttribsNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glTransformFeedbackAttribsNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTransformFeedbackAttribsNV);
}

void GLAPIENTRY glTransformFeedbackVaryings(GLuint _p0, GLsizei _p1, const GLchar **_p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTransformFeedbackVaryings);
    _COUNT(APICall_glTransformFeedbackVaryings);
    CHECKCALL(glTransformFeedbackVaryings);
    DO_REAL_CALL(glTransformFeedbackVaryings(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTransformFeedbackVaryings);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTransformFeedbackVaryings);
}

void GLAPIENTRY glTransformFeedbackVaryingsEXT(GLuint _p0, GLsizei _p1, const GLchar **_p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTransformFeedbackVaryingsEXT);
    _COUNT(APICall_glTransformFeedbackVaryingsEXT);
    CHECKCALL(glTransformFeedbackVaryingsEXT);
    DO_REAL_CALL(glTransformFeedbackVaryingsEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTransformFeedbackVaryingsEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTransformFeedbackVaryingsEXT);
}

void GLAPIENTRY glTransformFeedbackVaryingsNV(GLuint _p0, GLsizei _p1, const GLint *_p2, GLenum _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTransformFeedbackVaryingsNV);
    _COUNT(APICall_glTransformFeedbackVaryingsNV);
    CHECKCALL(glTransformFeedbackVaryingsNV);
    DO_REAL_CALL(glTransformFeedbackVaryingsNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glTransformFeedbackVaryingsNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTransformFeedbackVaryingsNV);
}

void GLAPIENTRY glTranslated(GLdouble x, GLdouble y, GLdouble z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTranslated);
    _COUNT(APICall_glTranslated);
    CHECKCALL(glTranslated);
    DO_REAL_CALL(glTranslated(x,y,z));
    _W.writeAPICall(APICall_glTranslated);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTranslated);
}

void GLAPIENTRY glTranslatef(GLfloat x, GLfloat y, GLfloat z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glTranslatef);
    _COUNT(APICall_glTranslatef);
    CHECKCALL(glTranslatef);
    DO_REAL_CALL(glTranslatef(x,y,z));
    _W.writeAPICall(APICall_glTranslatef);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glTranslatef);
}

void GLAPIENTRY glUniform1f(GLint _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1f);
    _COUNT(APICall_glUniform1f);
    CHECKCALL(glUniform1f);
    DO_REAL_CALL(glUniform1f(_p0,_p1));
    _W.writeAPICall(APICall_glUniform1f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1f);
}

void GLAPIENTRY glUniform1fARB(GLint _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1fARB);
    _COUNT(APICall_glUniform1fARB);
    CHECKCALL(glUniform1fARB);
    DO_REAL_CALL(glUniform1fARB(_p0,_p1));
    _W.writeAPICall(APICall_glUniform1fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1fARB);
}

void GLAPIENTRY glUniform1fv(GLint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1fv);
    _COUNT(APICall_glUniform1fv);
    CHECKCALL(glUniform1fv);
    DO_REAL_CALL(glUniform1fv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform1fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1fv);
}

void GLAPIENTRY glUniform1fvARB(GLint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1fvARB);
    _COUNT(APICall_glUniform1fvARB);
    CHECKCALL(glUniform1fvARB);
    DO_REAL_CALL(glUniform1fvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform1fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1fvARB);
}

void GLAPIENTRY glUniform1i(GLint _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1i);
    _COUNT(APICall_glUniform1i);
    CHECKCALL(glUniform1i);
    DO_REAL_CALL(glUniform1i(_p0,_p1));
    _W.writeAPICall(APICall_glUniform1i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1i);
}

void GLAPIENTRY glUniform1iARB(GLint _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1iARB);
    _COUNT(APICall_glUniform1iARB);
    CHECKCALL(glUniform1iARB);
    DO_REAL_CALL(glUniform1iARB(_p0,_p1));
    _W.writeAPICall(APICall_glUniform1iARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1iARB);
}

void GLAPIENTRY glUniform1iv(GLint _p0, GLsizei _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1iv);
    _COUNT(APICall_glUniform1iv);
    CHECKCALL(glUniform1iv);
    DO_REAL_CALL(glUniform1iv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform1iv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1iv);
}

void GLAPIENTRY glUniform1ivARB(GLint _p0, GLsizei _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1ivARB);
    _COUNT(APICall_glUniform1ivARB);
    CHECKCALL(glUniform1ivARB);
    DO_REAL_CALL(glUniform1ivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform1ivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1ivARB);
}

void GLAPIENTRY glUniform1ui(GLint _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1ui);
    _COUNT(APICall_glUniform1ui);
    CHECKCALL(glUniform1ui);
    DO_REAL_CALL(glUniform1ui(_p0,_p1));
    _W.writeAPICall(APICall_glUniform1ui);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1ui);
}

void GLAPIENTRY glUniform1uiEXT(GLint _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1uiEXT);
    _COUNT(APICall_glUniform1uiEXT);
    CHECKCALL(glUniform1uiEXT);
    DO_REAL_CALL(glUniform1uiEXT(_p0,_p1));
    _W.writeAPICall(APICall_glUniform1uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1uiEXT);
}

void GLAPIENTRY glUniform1uiv(GLint _p0, GLsizei _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1uiv);
    _COUNT(APICall_glUniform1uiv);
    CHECKCALL(glUniform1uiv);
    DO_REAL_CALL(glUniform1uiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform1uiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1uiv);
}

void GLAPIENTRY glUniform1uivEXT(GLint _p0, GLsizei _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform1uivEXT);
    _COUNT(APICall_glUniform1uivEXT);
    CHECKCALL(glUniform1uivEXT);
    DO_REAL_CALL(glUniform1uivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform1uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform1uivEXT);
}

void GLAPIENTRY glUniform2f(GLint _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2f);
    _COUNT(APICall_glUniform2f);
    CHECKCALL(glUniform2f);
    DO_REAL_CALL(glUniform2f(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2f);
}

void GLAPIENTRY glUniform2fARB(GLint _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2fARB);
    _COUNT(APICall_glUniform2fARB);
    CHECKCALL(glUniform2fARB);
    DO_REAL_CALL(glUniform2fARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2fARB);
}

void GLAPIENTRY glUniform2fv(GLint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2fv);
    _COUNT(APICall_glUniform2fv);
    CHECKCALL(glUniform2fv);
    DO_REAL_CALL(glUniform2fv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2fv);
}

void GLAPIENTRY glUniform2fvARB(GLint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2fvARB);
    _COUNT(APICall_glUniform2fvARB);
    CHECKCALL(glUniform2fvARB);
    DO_REAL_CALL(glUniform2fvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2fvARB);
}

void GLAPIENTRY glUniform2i(GLint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2i);
    _COUNT(APICall_glUniform2i);
    CHECKCALL(glUniform2i);
    DO_REAL_CALL(glUniform2i(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2i);
}

void GLAPIENTRY glUniform2iARB(GLint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2iARB);
    _COUNT(APICall_glUniform2iARB);
    CHECKCALL(glUniform2iARB);
    DO_REAL_CALL(glUniform2iARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2iARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2iARB);
}

void GLAPIENTRY glUniform2iv(GLint _p0, GLsizei _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2iv);
    _COUNT(APICall_glUniform2iv);
    CHECKCALL(glUniform2iv);
    DO_REAL_CALL(glUniform2iv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2iv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2iv);
}

void GLAPIENTRY glUniform2ivARB(GLint _p0, GLsizei _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2ivARB);
    _COUNT(APICall_glUniform2ivARB);
    CHECKCALL(glUniform2ivARB);
    DO_REAL_CALL(glUniform2ivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2ivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2ivARB);
}

void GLAPIENTRY glUniform2ui(GLint _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2ui);
    _COUNT(APICall_glUniform2ui);
    CHECKCALL(glUniform2ui);
    DO_REAL_CALL(glUniform2ui(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2ui);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2ui);
}

void GLAPIENTRY glUniform2uiEXT(GLint _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2uiEXT);
    _COUNT(APICall_glUniform2uiEXT);
    CHECKCALL(glUniform2uiEXT);
    DO_REAL_CALL(glUniform2uiEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2uiEXT);
}

void GLAPIENTRY glUniform2uiv(GLint _p0, GLsizei _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2uiv);
    _COUNT(APICall_glUniform2uiv);
    CHECKCALL(glUniform2uiv);
    DO_REAL_CALL(glUniform2uiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2uiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2uiv);
}

void GLAPIENTRY glUniform2uivEXT(GLint _p0, GLsizei _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform2uivEXT);
    _COUNT(APICall_glUniform2uivEXT);
    CHECKCALL(glUniform2uivEXT);
    DO_REAL_CALL(glUniform2uivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform2uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform2uivEXT);
}

void GLAPIENTRY glUniform3f(GLint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3f);
    _COUNT(APICall_glUniform3f);
    CHECKCALL(glUniform3f);
    DO_REAL_CALL(glUniform3f(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniform3f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3f);
}

void GLAPIENTRY glUniform3fARB(GLint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3fARB);
    _COUNT(APICall_glUniform3fARB);
    CHECKCALL(glUniform3fARB);
    DO_REAL_CALL(glUniform3fARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniform3fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3fARB);
}

void GLAPIENTRY glUniform3fv(GLint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3fv);
    _COUNT(APICall_glUniform3fv);
    CHECKCALL(glUniform3fv);
    DO_REAL_CALL(glUniform3fv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform3fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3fv);
}

void GLAPIENTRY glUniform3fvARB(GLint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3fvARB);
    _COUNT(APICall_glUniform3fvARB);
    CHECKCALL(glUniform3fvARB);
    DO_REAL_CALL(glUniform3fvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform3fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3fvARB);
}

void GLAPIENTRY glUniform3i(GLint _p0, GLint _p1, GLint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3i);
    _COUNT(APICall_glUniform3i);
    CHECKCALL(glUniform3i);
    DO_REAL_CALL(glUniform3i(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniform3i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3i);
}

void GLAPIENTRY glUniform3iARB(GLint _p0, GLint _p1, GLint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3iARB);
    _COUNT(APICall_glUniform3iARB);
    CHECKCALL(glUniform3iARB);
    DO_REAL_CALL(glUniform3iARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniform3iARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3iARB);
}

void GLAPIENTRY glUniform3iv(GLint _p0, GLsizei _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3iv);
    _COUNT(APICall_glUniform3iv);
    CHECKCALL(glUniform3iv);
    DO_REAL_CALL(glUniform3iv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform3iv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3iv);
}

void GLAPIENTRY glUniform3ivARB(GLint _p0, GLsizei _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3ivARB);
    _COUNT(APICall_glUniform3ivARB);
    CHECKCALL(glUniform3ivARB);
    DO_REAL_CALL(glUniform3ivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform3ivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3ivARB);
}

void GLAPIENTRY glUniform3ui(GLint _p0, GLuint _p1, GLuint _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3ui);
    _COUNT(APICall_glUniform3ui);
    CHECKCALL(glUniform3ui);
    DO_REAL_CALL(glUniform3ui(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniform3ui);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3ui);
}

void GLAPIENTRY glUniform3uiEXT(GLint _p0, GLuint _p1, GLuint _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3uiEXT);
    _COUNT(APICall_glUniform3uiEXT);
    CHECKCALL(glUniform3uiEXT);
    DO_REAL_CALL(glUniform3uiEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniform3uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3uiEXT);
}

void GLAPIENTRY glUniform3uiv(GLint _p0, GLsizei _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3uiv);
    _COUNT(APICall_glUniform3uiv);
    CHECKCALL(glUniform3uiv);
    DO_REAL_CALL(glUniform3uiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform3uiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3uiv);
}

void GLAPIENTRY glUniform3uivEXT(GLint _p0, GLsizei _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform3uivEXT);
    _COUNT(APICall_glUniform3uivEXT);
    CHECKCALL(glUniform3uivEXT);
    DO_REAL_CALL(glUniform3uivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform3uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform3uivEXT);
}

void GLAPIENTRY glUniform4f(GLint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4f);
    _COUNT(APICall_glUniform4f);
    CHECKCALL(glUniform4f);
    DO_REAL_CALL(glUniform4f(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glUniform4f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4f);
}

void GLAPIENTRY glUniform4fARB(GLint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4fARB);
    _COUNT(APICall_glUniform4fARB);
    CHECKCALL(glUniform4fARB);
    DO_REAL_CALL(glUniform4fARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glUniform4fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4fARB);
}

void GLAPIENTRY glUniform4fv(GLint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4fv);
    _COUNT(APICall_glUniform4fv);
    CHECKCALL(glUniform4fv);
    DO_REAL_CALL(glUniform4fv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform4fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4fv);
}

void GLAPIENTRY glUniform4fvARB(GLint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4fvARB);
    _COUNT(APICall_glUniform4fvARB);
    CHECKCALL(glUniform4fvARB);
    DO_REAL_CALL(glUniform4fvARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform4fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4fvARB);
}

void GLAPIENTRY glUniform4i(GLint _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4i);
    _COUNT(APICall_glUniform4i);
    CHECKCALL(glUniform4i);
    DO_REAL_CALL(glUniform4i(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glUniform4i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4i);
}

void GLAPIENTRY glUniform4iARB(GLint _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4iARB);
    _COUNT(APICall_glUniform4iARB);
    CHECKCALL(glUniform4iARB);
    DO_REAL_CALL(glUniform4iARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glUniform4iARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4iARB);
}

void GLAPIENTRY glUniform4iv(GLint _p0, GLsizei _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4iv);
    _COUNT(APICall_glUniform4iv);
    CHECKCALL(glUniform4iv);
    DO_REAL_CALL(glUniform4iv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform4iv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4iv);
}

void GLAPIENTRY glUniform4ivARB(GLint _p0, GLsizei _p1, const GLint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4ivARB);
    _COUNT(APICall_glUniform4ivARB);
    CHECKCALL(glUniform4ivARB);
    DO_REAL_CALL(glUniform4ivARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform4ivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4ivARB);
}

void GLAPIENTRY glUniform4ui(GLint _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4ui);
    _COUNT(APICall_glUniform4ui);
    CHECKCALL(glUniform4ui);
    DO_REAL_CALL(glUniform4ui(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glUniform4ui);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4ui);
}

void GLAPIENTRY glUniform4uiEXT(GLint _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4uiEXT);
    _COUNT(APICall_glUniform4uiEXT);
    CHECKCALL(glUniform4uiEXT);
    DO_REAL_CALL(glUniform4uiEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glUniform4uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4uiEXT);
}

void GLAPIENTRY glUniform4uiv(GLint _p0, GLsizei _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4uiv);
    _COUNT(APICall_glUniform4uiv);
    CHECKCALL(glUniform4uiv);
    DO_REAL_CALL(glUniform4uiv(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform4uiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4uiv);
}

void GLAPIENTRY glUniform4uivEXT(GLint _p0, GLsizei _p1, const GLuint *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniform4uivEXT);
    _COUNT(APICall_glUniform4uivEXT);
    CHECKCALL(glUniform4uivEXT);
    DO_REAL_CALL(glUniform4uivEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniform4uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniform4uivEXT);
}

void GLAPIENTRY glUniformBlockBinding(GLuint _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformBlockBinding);
    _COUNT(APICall_glUniformBlockBinding);
    CHECKCALL(glUniformBlockBinding);
    DO_REAL_CALL(glUniformBlockBinding(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniformBlockBinding);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformBlockBinding);
}

void GLAPIENTRY glUniformBufferEXT(GLuint _p0, GLint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformBufferEXT);
    _COUNT(APICall_glUniformBufferEXT);
    CHECKCALL(glUniformBufferEXT);
    DO_REAL_CALL(glUniformBufferEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glUniformBufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformBufferEXT);
}

void GLAPIENTRY glUniformMatrix2fv(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix2fv);
    _COUNT(APICall_glUniformMatrix2fv);
    CHECKCALL(glUniformMatrix2fv);
    DO_REAL_CALL(glUniformMatrix2fv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix2fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix2fv);
}

void GLAPIENTRY glUniformMatrix2fvARB(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix2fvARB);
    _COUNT(APICall_glUniformMatrix2fvARB);
    CHECKCALL(glUniformMatrix2fvARB);
    DO_REAL_CALL(glUniformMatrix2fvARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix2fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix2fvARB);
}

void GLAPIENTRY glUniformMatrix2x3fv(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix2x3fv);
    _COUNT(APICall_glUniformMatrix2x3fv);
    CHECKCALL(glUniformMatrix2x3fv);
    DO_REAL_CALL(glUniformMatrix2x3fv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix2x3fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix2x3fv);
}

void GLAPIENTRY glUniformMatrix2x4fv(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix2x4fv);
    _COUNT(APICall_glUniformMatrix2x4fv);
    CHECKCALL(glUniformMatrix2x4fv);
    DO_REAL_CALL(glUniformMatrix2x4fv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix2x4fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix2x4fv);
}

void GLAPIENTRY glUniformMatrix3fv(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix3fv);
    _COUNT(APICall_glUniformMatrix3fv);
    CHECKCALL(glUniformMatrix3fv);
    DO_REAL_CALL(glUniformMatrix3fv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix3fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix3fv);
}

void GLAPIENTRY glUniformMatrix3fvARB(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix3fvARB);
    _COUNT(APICall_glUniformMatrix3fvARB);
    CHECKCALL(glUniformMatrix3fvARB);
    DO_REAL_CALL(glUniformMatrix3fvARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix3fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix3fvARB);
}

void GLAPIENTRY glUniformMatrix3x2fv(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix3x2fv);
    _COUNT(APICall_glUniformMatrix3x2fv);
    CHECKCALL(glUniformMatrix3x2fv);
    DO_REAL_CALL(glUniformMatrix3x2fv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix3x2fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix3x2fv);
}

void GLAPIENTRY glUniformMatrix3x4fv(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix3x4fv);
    _COUNT(APICall_glUniformMatrix3x4fv);
    CHECKCALL(glUniformMatrix3x4fv);
    DO_REAL_CALL(glUniformMatrix3x4fv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix3x4fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix3x4fv);
}

void GLAPIENTRY glUniformMatrix4fv(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix4fv);
    _COUNT(APICall_glUniformMatrix4fv);
    CHECKCALL(glUniformMatrix4fv);
    DO_REAL_CALL(glUniformMatrix4fv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix4fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix4fv);
}

void GLAPIENTRY glUniformMatrix4fvARB(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix4fvARB);
    _COUNT(APICall_glUniformMatrix4fvARB);
    CHECKCALL(glUniformMatrix4fvARB);
    DO_REAL_CALL(glUniformMatrix4fvARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix4fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix4fvARB);
}

void GLAPIENTRY glUniformMatrix4x2fv(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix4x2fv);
    _COUNT(APICall_glUniformMatrix4x2fv);
    CHECKCALL(glUniformMatrix4x2fv);
    DO_REAL_CALL(glUniformMatrix4x2fv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix4x2fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix4x2fv);
}

void GLAPIENTRY glUniformMatrix4x3fv(GLint _p0, GLsizei _p1, GLboolean _p2, const GLfloat *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUniformMatrix4x3fv);
    _COUNT(APICall_glUniformMatrix4x3fv);
    CHECKCALL(glUniformMatrix4x3fv);
    DO_REAL_CALL(glUniformMatrix4x3fv(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glUniformMatrix4x3fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUniformMatrix4x3fv);
}

void GLAPIENTRY glUnlockArraysEXT()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUnlockArraysEXT);
    _COUNT(APICall_glUnlockArraysEXT);
    CHECKCALL(glUnlockArraysEXT);
    DO_REAL_CALL(glUnlockArraysEXT());
    _W.writeAPICall(APICall_glUnlockArraysEXT);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUnlockArraysEXT);
}

GLboolean GLAPIENTRY glUnmapBuffer(GLenum _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUnmapBuffer);
    _COUNT(APICall_glUnmapBuffer);
    CHECKCALL(glUnmapBuffer);
    _result = DO_REAL_CALL(glUnmapBuffer(_p0));
    _W.writeAPICall(APICall_glUnmapBuffer);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUnmapBuffer);
    return _result;
}

GLboolean GLAPIENTRY glUnmapBufferARB(GLenum _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUnmapBufferARB);
    _COUNT(APICall_glUnmapBufferARB);
    // [GEN-CODE info: Specific user call]
    glUnmapBufferARB_SPECIFIC(_p0);
    CHECKCALL(glUnmapBufferARB);
    _result = DO_REAL_CALL(glUnmapBufferARB(_p0));
    _W.writeAPICall(APICall_glUnmapBufferARB);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUnmapBufferARB);
    return _result;
}

GLboolean GLAPIENTRY glUnmapNamedBufferEXT(GLuint _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUnmapNamedBufferEXT);
    _COUNT(APICall_glUnmapNamedBufferEXT);
    CHECKCALL(glUnmapNamedBufferEXT);
    _result = DO_REAL_CALL(glUnmapNamedBufferEXT(_p0));
    _W.writeAPICall(APICall_glUnmapNamedBufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUnmapNamedBufferEXT);
    return _result;
}

void GLAPIENTRY glUnmapObjectBufferATI(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUnmapObjectBufferATI);
    _COUNT(APICall_glUnmapObjectBufferATI);
    CHECKCALL(glUnmapObjectBufferATI);
    DO_REAL_CALL(glUnmapObjectBufferATI(_p0));
    _W.writeAPICall(APICall_glUnmapObjectBufferATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUnmapObjectBufferATI);
}

void GLAPIENTRY glUpdateObjectBufferATI(GLuint _p0, GLuint _p1, GLsizei _p2, const GLvoid *_p3, GLenum _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUpdateObjectBufferATI);
    _COUNT(APICall_glUpdateObjectBufferATI);
    CHECKCALL(glUpdateObjectBufferATI);
    DO_REAL_CALL(glUpdateObjectBufferATI(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glUpdateObjectBufferATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUpdateObjectBufferATI);
}

void GLAPIENTRY glUseProgram(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUseProgram);
    _COUNT(APICall_glUseProgram);
    CHECKCALL(glUseProgram);
    DO_REAL_CALL(glUseProgram(_p0));
    _W.writeAPICall(APICall_glUseProgram);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUseProgram);
}

void GLAPIENTRY glUseProgramObjectARB(GLhandleARB _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glUseProgramObjectARB);
    _COUNT(APICall_glUseProgramObjectARB);
    CHECKCALL(glUseProgramObjectARB);
    DO_REAL_CALL(glUseProgramObjectARB(_p0));
    _W.writeAPICall(APICall_glUseProgramObjectARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glUseProgramObjectARB);
}

void GLAPIENTRY glValidateProgram(GLuint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glValidateProgram);
    _COUNT(APICall_glValidateProgram);
    CHECKCALL(glValidateProgram);
    DO_REAL_CALL(glValidateProgram(_p0));
    _W.writeAPICall(APICall_glValidateProgram);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glValidateProgram);
}

void GLAPIENTRY glValidateProgramARB(GLhandleARB _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glValidateProgramARB);
    _COUNT(APICall_glValidateProgramARB);
    CHECKCALL(glValidateProgramARB);
    DO_REAL_CALL(glValidateProgramARB(_p0));
    _W.writeAPICall(APICall_glValidateProgramARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glValidateProgramARB);
}

void GLAPIENTRY glVariantArrayObjectATI(GLuint _p0, GLenum _p1, GLsizei _p2, GLuint _p3, GLuint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantArrayObjectATI);
    _COUNT(APICall_glVariantArrayObjectATI);
    CHECKCALL(glVariantArrayObjectATI);
    DO_REAL_CALL(glVariantArrayObjectATI(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVariantArrayObjectATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantArrayObjectATI);
}

void GLAPIENTRY glVariantPointerEXT(GLuint _p0, GLenum _p1, GLuint _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantPointerEXT);
    _COUNT(APICall_glVariantPointerEXT);
    CHECKCALL(glVariantPointerEXT);
    DO_REAL_CALL(glVariantPointerEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVariantPointerEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantPointerEXT);
}

void GLAPIENTRY glVariantbvEXT(GLuint _p0, const GLbyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantbvEXT);
    _COUNT(APICall_glVariantbvEXT);
    CHECKCALL(glVariantbvEXT);
    DO_REAL_CALL(glVariantbvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVariantbvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantbvEXT);
}

void GLAPIENTRY glVariantdvEXT(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantdvEXT);
    _COUNT(APICall_glVariantdvEXT);
    CHECKCALL(glVariantdvEXT);
    DO_REAL_CALL(glVariantdvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVariantdvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantdvEXT);
}

void GLAPIENTRY glVariantfvEXT(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantfvEXT);
    _COUNT(APICall_glVariantfvEXT);
    CHECKCALL(glVariantfvEXT);
    DO_REAL_CALL(glVariantfvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVariantfvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantfvEXT);
}

void GLAPIENTRY glVariantivEXT(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantivEXT);
    _COUNT(APICall_glVariantivEXT);
    CHECKCALL(glVariantivEXT);
    DO_REAL_CALL(glVariantivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVariantivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantivEXT);
}

void GLAPIENTRY glVariantsvEXT(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantsvEXT);
    _COUNT(APICall_glVariantsvEXT);
    CHECKCALL(glVariantsvEXT);
    DO_REAL_CALL(glVariantsvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVariantsvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantsvEXT);
}

void GLAPIENTRY glVariantubvEXT(GLuint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantubvEXT);
    _COUNT(APICall_glVariantubvEXT);
    CHECKCALL(glVariantubvEXT);
    DO_REAL_CALL(glVariantubvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVariantubvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantubvEXT);
}

void GLAPIENTRY glVariantuivEXT(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantuivEXT);
    _COUNT(APICall_glVariantuivEXT);
    CHECKCALL(glVariantuivEXT);
    DO_REAL_CALL(glVariantuivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVariantuivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantuivEXT);
}

void GLAPIENTRY glVariantusvEXT(GLuint _p0, const GLushort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVariantusvEXT);
    _COUNT(APICall_glVariantusvEXT);
    CHECKCALL(glVariantusvEXT);
    DO_REAL_CALL(glVariantusvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVariantusvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVariantusvEXT);
}

void GLAPIENTRY glVertex2d(GLdouble x, GLdouble y)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2d);
    // Specific stats code
    glVertex2d_STAT(x,y);
    _COUNT(APICall_glVertex2d);
    CHECKCALL(glVertex2d);
    DO_REAL_CALL(glVertex2d(x,y));
    _W.writeAPICall(APICall_glVertex2d);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2d);
}

void GLAPIENTRY glVertex2dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2dv);
    // Specific stats code
    glVertex2dv_STAT(v);
    _COUNT(APICall_glVertex2dv);
    CHECKCALL(glVertex2dv);
    DO_REAL_CALL(glVertex2dv(v));
    _W.writeAPICall(APICall_glVertex2dv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2dv);
}

void GLAPIENTRY glVertex2f(GLfloat x, GLfloat y)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2f);
    // Specific stats code
    glVertex2f_STAT(x,y);
    _COUNT(APICall_glVertex2f);
    CHECKCALL(glVertex2f);
    DO_REAL_CALL(glVertex2f(x,y));
    _W.writeAPICall(APICall_glVertex2f);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2f);
}

void GLAPIENTRY glVertex2fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2fv);
    // Specific stats code
    glVertex2fv_STAT(v);
    _COUNT(APICall_glVertex2fv);
    CHECKCALL(glVertex2fv);
    DO_REAL_CALL(glVertex2fv(v));
    _W.writeAPICall(APICall_glVertex2fv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2fv);
}

void GLAPIENTRY glVertex2hNV(GLhalfNV _p0, GLhalfNV _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2hNV);
    _COUNT(APICall_glVertex2hNV);
    CHECKCALL(glVertex2hNV);
    DO_REAL_CALL(glVertex2hNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertex2hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2hNV);
}

void GLAPIENTRY glVertex2hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2hvNV);
    _COUNT(APICall_glVertex2hvNV);
    CHECKCALL(glVertex2hvNV);
    DO_REAL_CALL(glVertex2hvNV(_p0));
    _W.writeAPICall(APICall_glVertex2hvNV);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2hvNV);
}

void GLAPIENTRY glVertex2i(GLint x, GLint y)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2i);
    // Specific stats code
    glVertex2i_STAT(x,y);
    _COUNT(APICall_glVertex2i);
    CHECKCALL(glVertex2i);
    DO_REAL_CALL(glVertex2i(x,y));
    _W.writeAPICall(APICall_glVertex2i);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2i);
}

void GLAPIENTRY glVertex2iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2iv);
    // Specific stats code
    glVertex2iv_STAT(v);
    _COUNT(APICall_glVertex2iv);
    CHECKCALL(glVertex2iv);
    DO_REAL_CALL(glVertex2iv(v));
    _W.writeAPICall(APICall_glVertex2iv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2iv);
}

void GLAPIENTRY glVertex2s(GLshort x, GLshort y)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2s);
    // Specific stats code
    glVertex2s_STAT(x,y);
    _COUNT(APICall_glVertex2s);
    CHECKCALL(glVertex2s);
    DO_REAL_CALL(glVertex2s(x,y));
    _W.writeAPICall(APICall_glVertex2s);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2s);
}

void GLAPIENTRY glVertex2sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex2sv);
    // Specific stats code
    glVertex2sv_STAT(v);
    _COUNT(APICall_glVertex2sv);
    CHECKCALL(glVertex2sv);
    DO_REAL_CALL(glVertex2sv(v));
    _W.writeAPICall(APICall_glVertex2sv);
    _W.writeMark("(");
    _W.write(v, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex2sv);
}

void GLAPIENTRY glVertex3d(GLdouble x, GLdouble y, GLdouble z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3d);
    // Specific stats code
    glVertex3d_STAT(x,y,z);
    _COUNT(APICall_glVertex3d);
    CHECKCALL(glVertex3d);
    DO_REAL_CALL(glVertex3d(x,y,z));
    _W.writeAPICall(APICall_glVertex3d);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3d);
}

void GLAPIENTRY glVertex3dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3dv);
    // Specific stats code
    glVertex3dv_STAT(v);
    _COUNT(APICall_glVertex3dv);
    CHECKCALL(glVertex3dv);
    DO_REAL_CALL(glVertex3dv(v));
    _W.writeAPICall(APICall_glVertex3dv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3dv);
}

void GLAPIENTRY glVertex3f(GLfloat x, GLfloat y, GLfloat z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3f);
    // Specific stats code
    glVertex3f_STAT(x,y,z);
    _COUNT(APICall_glVertex3f);
    CHECKCALL(glVertex3f);
    DO_REAL_CALL(glVertex3f(x,y,z));
    _W.writeAPICall(APICall_glVertex3f);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3f);
}

void GLAPIENTRY glVertex3fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3fv);
    // Specific stats code
    glVertex3fv_STAT(v);
    _COUNT(APICall_glVertex3fv);
    CHECKCALL(glVertex3fv);
    DO_REAL_CALL(glVertex3fv(v));
    _W.writeAPICall(APICall_glVertex3fv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3fv);
}

void GLAPIENTRY glVertex3hNV(GLhalfNV _p0, GLhalfNV _p1, GLhalfNV _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3hNV);
    _COUNT(APICall_glVertex3hNV);
    CHECKCALL(glVertex3hNV);
    DO_REAL_CALL(glVertex3hNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertex3hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3hNV);
}

void GLAPIENTRY glVertex3hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3hvNV);
    _COUNT(APICall_glVertex3hvNV);
    CHECKCALL(glVertex3hvNV);
    DO_REAL_CALL(glVertex3hvNV(_p0));
    _W.writeAPICall(APICall_glVertex3hvNV);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3hvNV);
}

void GLAPIENTRY glVertex3i(GLint x, GLint y, GLint z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3i);
    // Specific stats code
    glVertex3i_STAT(x,y,z);
    _COUNT(APICall_glVertex3i);
    CHECKCALL(glVertex3i);
    DO_REAL_CALL(glVertex3i(x,y,z));
    _W.writeAPICall(APICall_glVertex3i);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3i);
}

void GLAPIENTRY glVertex3iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3iv);
    // Specific stats code
    glVertex3iv_STAT(v);
    _COUNT(APICall_glVertex3iv);
    CHECKCALL(glVertex3iv);
    DO_REAL_CALL(glVertex3iv(v));
    _W.writeAPICall(APICall_glVertex3iv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3iv);
}

void GLAPIENTRY glVertex3s(GLshort x, GLshort y, GLshort z)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3s);
    // Specific stats code
    glVertex3s_STAT(x,y,z);
    _COUNT(APICall_glVertex3s);
    CHECKCALL(glVertex3s);
    DO_REAL_CALL(glVertex3s(x,y,z));
    _W.writeAPICall(APICall_glVertex3s);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3s);
}

void GLAPIENTRY glVertex3sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex3sv);
    // Specific stats code
    glVertex3sv_STAT(v);
    _COUNT(APICall_glVertex3sv);
    CHECKCALL(glVertex3sv);
    DO_REAL_CALL(glVertex3sv(v));
    _W.writeAPICall(APICall_glVertex3sv);
    _W.writeMark("(");
    _W.write(v, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex3sv);
}

void GLAPIENTRY glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4d);
    // Specific stats code
    glVertex4d_STAT(x,y,z,w);
    _COUNT(APICall_glVertex4d);
    CHECKCALL(glVertex4d);
    DO_REAL_CALL(glVertex4d(x,y,z,w));
    _W.writeAPICall(APICall_glVertex4d);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(",");
    _W.write(w);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4d);
}

void GLAPIENTRY glVertex4dv(const GLdouble *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4dv);
    // Specific stats code
    glVertex4dv_STAT(v);
    _COUNT(APICall_glVertex4dv);
    CHECKCALL(glVertex4dv);
    DO_REAL_CALL(glVertex4dv(v));
    _W.writeAPICall(APICall_glVertex4dv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4dv);
}

void GLAPIENTRY glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4f);
    // Specific stats code
    glVertex4f_STAT(x,y,z,w);
    _COUNT(APICall_glVertex4f);
    CHECKCALL(glVertex4f);
    DO_REAL_CALL(glVertex4f(x,y,z,w));
    _W.writeAPICall(APICall_glVertex4f);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(",");
    _W.write(w);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4f);
}

void GLAPIENTRY glVertex4fv(const GLfloat *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4fv);
    // Specific stats code
    glVertex4fv_STAT(v);
    _COUNT(APICall_glVertex4fv);
    CHECKCALL(glVertex4fv);
    DO_REAL_CALL(glVertex4fv(v));
    _W.writeAPICall(APICall_glVertex4fv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4fv);
}

void GLAPIENTRY glVertex4hNV(GLhalfNV _p0, GLhalfNV _p1, GLhalfNV _p2, GLhalfNV _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4hNV);
    _COUNT(APICall_glVertex4hNV);
    CHECKCALL(glVertex4hNV);
    DO_REAL_CALL(glVertex4hNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertex4hNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4hNV);
}

void GLAPIENTRY glVertex4hvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4hvNV);
    _COUNT(APICall_glVertex4hvNV);
    CHECKCALL(glVertex4hvNV);
    DO_REAL_CALL(glVertex4hvNV(_p0));
    _W.writeAPICall(APICall_glVertex4hvNV);
    _W.writeMark("(");
    _W.write(_p0, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4hvNV);
}

void GLAPIENTRY glVertex4i(GLint x, GLint y, GLint z, GLint w)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4i);
    // Specific stats code
    glVertex4i_STAT(x,y,z,w);
    _COUNT(APICall_glVertex4i);
    CHECKCALL(glVertex4i);
    DO_REAL_CALL(glVertex4i(x,y,z,w));
    _W.writeAPICall(APICall_glVertex4i);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(",");
    _W.write(w);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4i);
}

void GLAPIENTRY glVertex4iv(const GLint *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4iv);
    // Specific stats code
    glVertex4iv_STAT(v);
    _COUNT(APICall_glVertex4iv);
    CHECKCALL(glVertex4iv);
    DO_REAL_CALL(glVertex4iv(v));
    _W.writeAPICall(APICall_glVertex4iv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4iv);
}

void GLAPIENTRY glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4s);
    // Specific stats code
    glVertex4s_STAT(x,y,z,w);
    _COUNT(APICall_glVertex4s);
    CHECKCALL(glVertex4s);
    DO_REAL_CALL(glVertex4s(x,y,z,w));
    _W.writeAPICall(APICall_glVertex4s);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(z);
    _W.writeMark(",");
    _W.write(w);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4s);
}

void GLAPIENTRY glVertex4sv(const GLshort *v)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertex4sv);
    // Specific stats code
    glVertex4sv_STAT(v);
    _COUNT(APICall_glVertex4sv);
    CHECKCALL(glVertex4sv);
    DO_REAL_CALL(glVertex4sv(v));
    _W.writeAPICall(APICall_glVertex4sv);
    _W.writeMark("(");
    _W.write(v, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertex4sv);
}

void GLAPIENTRY glVertexArrayParameteriAPPLE(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexArrayParameteriAPPLE);
    _COUNT(APICall_glVertexArrayParameteriAPPLE);
    CHECKCALL(glVertexArrayParameteriAPPLE);
    DO_REAL_CALL(glVertexArrayParameteriAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glVertexArrayParameteriAPPLE);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexArrayParameteriAPPLE);
}

void GLAPIENTRY glVertexArrayRangeAPPLE(GLsizei _p0, GLvoid *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexArrayRangeAPPLE);
    _COUNT(APICall_glVertexArrayRangeAPPLE);
    CHECKCALL(glVertexArrayRangeAPPLE);
    DO_REAL_CALL(glVertexArrayRangeAPPLE(_p0,_p1));
    _W.writeAPICall(APICall_glVertexArrayRangeAPPLE);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexArrayRangeAPPLE);
}

void GLAPIENTRY glVertexArrayRangeNV(GLsizei _p0, const GLvoid *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexArrayRangeNV);
    _COUNT(APICall_glVertexArrayRangeNV);
    CHECKCALL(glVertexArrayRangeNV);
    DO_REAL_CALL(glVertexArrayRangeNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexArrayRangeNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexArrayRangeNV);
}

void GLAPIENTRY glVertexAttrib1d(GLuint _p0, GLdouble _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1d);
    _COUNT(APICall_glVertexAttrib1d);
    CHECKCALL(glVertexAttrib1d);
    DO_REAL_CALL(glVertexAttrib1d(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1d);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1d);
}

void GLAPIENTRY glVertexAttrib1dARB(GLuint _p0, GLdouble _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1dARB);
    _COUNT(APICall_glVertexAttrib1dARB);
    CHECKCALL(glVertexAttrib1dARB);
    DO_REAL_CALL(glVertexAttrib1dARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1dARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1dARB);
}

void GLAPIENTRY glVertexAttrib1dNV(GLuint _p0, GLdouble _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1dNV);
    _COUNT(APICall_glVertexAttrib1dNV);
    CHECKCALL(glVertexAttrib1dNV);
    DO_REAL_CALL(glVertexAttrib1dNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1dNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1dNV);
}

void GLAPIENTRY glVertexAttrib1dv(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1dv);
    _COUNT(APICall_glVertexAttrib1dv);
    CHECKCALL(glVertexAttrib1dv);
    DO_REAL_CALL(glVertexAttrib1dv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1dv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1dv);
}

void GLAPIENTRY glVertexAttrib1dvARB(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1dvARB);
    _COUNT(APICall_glVertexAttrib1dvARB);
    CHECKCALL(glVertexAttrib1dvARB);
    DO_REAL_CALL(glVertexAttrib1dvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1dvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1dvARB);
}

void GLAPIENTRY glVertexAttrib1dvNV(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1dvNV);
    _COUNT(APICall_glVertexAttrib1dvNV);
    CHECKCALL(glVertexAttrib1dvNV);
    DO_REAL_CALL(glVertexAttrib1dvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1dvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1dvNV);
}

void GLAPIENTRY glVertexAttrib1f(GLuint _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1f);
    _COUNT(APICall_glVertexAttrib1f);
    CHECKCALL(glVertexAttrib1f);
    DO_REAL_CALL(glVertexAttrib1f(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1f);
}

void GLAPIENTRY glVertexAttrib1fARB(GLuint _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1fARB);
    _COUNT(APICall_glVertexAttrib1fARB);
    CHECKCALL(glVertexAttrib1fARB);
    DO_REAL_CALL(glVertexAttrib1fARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1fARB);
}

void GLAPIENTRY glVertexAttrib1fNV(GLuint _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1fNV);
    _COUNT(APICall_glVertexAttrib1fNV);
    CHECKCALL(glVertexAttrib1fNV);
    DO_REAL_CALL(glVertexAttrib1fNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1fNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1fNV);
}

void GLAPIENTRY glVertexAttrib1fv(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1fv);
    _COUNT(APICall_glVertexAttrib1fv);
    CHECKCALL(glVertexAttrib1fv);
    DO_REAL_CALL(glVertexAttrib1fv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1fv);
}

void GLAPIENTRY glVertexAttrib1fvARB(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1fvARB);
    _COUNT(APICall_glVertexAttrib1fvARB);
    CHECKCALL(glVertexAttrib1fvARB);
    DO_REAL_CALL(glVertexAttrib1fvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1fvARB);
}

void GLAPIENTRY glVertexAttrib1fvNV(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1fvNV);
    _COUNT(APICall_glVertexAttrib1fvNV);
    CHECKCALL(glVertexAttrib1fvNV);
    DO_REAL_CALL(glVertexAttrib1fvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1fvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1fvNV);
}

void GLAPIENTRY glVertexAttrib1hNV(GLuint _p0, GLhalfNV _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1hNV);
    _COUNT(APICall_glVertexAttrib1hNV);
    CHECKCALL(glVertexAttrib1hNV);
    DO_REAL_CALL(glVertexAttrib1hNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1hNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1hNV);
}

void GLAPIENTRY glVertexAttrib1hvNV(GLuint _p0, const GLhalfNV *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1hvNV);
    _COUNT(APICall_glVertexAttrib1hvNV);
    CHECKCALL(glVertexAttrib1hvNV);
    DO_REAL_CALL(glVertexAttrib1hvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1hvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1hvNV);
}

void GLAPIENTRY glVertexAttrib1s(GLuint _p0, GLshort _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1s);
    _COUNT(APICall_glVertexAttrib1s);
    CHECKCALL(glVertexAttrib1s);
    DO_REAL_CALL(glVertexAttrib1s(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1s);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1s);
}

void GLAPIENTRY glVertexAttrib1sARB(GLuint _p0, GLshort _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1sARB);
    _COUNT(APICall_glVertexAttrib1sARB);
    CHECKCALL(glVertexAttrib1sARB);
    DO_REAL_CALL(glVertexAttrib1sARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1sARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1sARB);
}

void GLAPIENTRY glVertexAttrib1sNV(GLuint _p0, GLshort _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1sNV);
    _COUNT(APICall_glVertexAttrib1sNV);
    CHECKCALL(glVertexAttrib1sNV);
    DO_REAL_CALL(glVertexAttrib1sNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1sNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1sNV);
}

void GLAPIENTRY glVertexAttrib1sv(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1sv);
    _COUNT(APICall_glVertexAttrib1sv);
    CHECKCALL(glVertexAttrib1sv);
    DO_REAL_CALL(glVertexAttrib1sv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1sv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1sv);
}

void GLAPIENTRY glVertexAttrib1svARB(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1svARB);
    _COUNT(APICall_glVertexAttrib1svARB);
    CHECKCALL(glVertexAttrib1svARB);
    DO_REAL_CALL(glVertexAttrib1svARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1svARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1svARB);
}

void GLAPIENTRY glVertexAttrib1svNV(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib1svNV);
    _COUNT(APICall_glVertexAttrib1svNV);
    CHECKCALL(glVertexAttrib1svNV);
    DO_REAL_CALL(glVertexAttrib1svNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib1svNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib1svNV);
}

void GLAPIENTRY glVertexAttrib2d(GLuint _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2d);
    _COUNT(APICall_glVertexAttrib2d);
    CHECKCALL(glVertexAttrib2d);
    DO_REAL_CALL(glVertexAttrib2d(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2d);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2d);
}

void GLAPIENTRY glVertexAttrib2dARB(GLuint _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2dARB);
    _COUNT(APICall_glVertexAttrib2dARB);
    CHECKCALL(glVertexAttrib2dARB);
    DO_REAL_CALL(glVertexAttrib2dARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2dARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2dARB);
}

void GLAPIENTRY glVertexAttrib2dNV(GLuint _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2dNV);
    _COUNT(APICall_glVertexAttrib2dNV);
    CHECKCALL(glVertexAttrib2dNV);
    DO_REAL_CALL(glVertexAttrib2dNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2dNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2dNV);
}

void GLAPIENTRY glVertexAttrib2dv(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2dv);
    _COUNT(APICall_glVertexAttrib2dv);
    CHECKCALL(glVertexAttrib2dv);
    DO_REAL_CALL(glVertexAttrib2dv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2dv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2dv);
}

void GLAPIENTRY glVertexAttrib2dvARB(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2dvARB);
    _COUNT(APICall_glVertexAttrib2dvARB);
    CHECKCALL(glVertexAttrib2dvARB);
    DO_REAL_CALL(glVertexAttrib2dvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2dvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2dvARB);
}

void GLAPIENTRY glVertexAttrib2dvNV(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2dvNV);
    _COUNT(APICall_glVertexAttrib2dvNV);
    CHECKCALL(glVertexAttrib2dvNV);
    DO_REAL_CALL(glVertexAttrib2dvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2dvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2dvNV);
}

void GLAPIENTRY glVertexAttrib2f(GLuint _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2f);
    _COUNT(APICall_glVertexAttrib2f);
    CHECKCALL(glVertexAttrib2f);
    DO_REAL_CALL(glVertexAttrib2f(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2f);
}

void GLAPIENTRY glVertexAttrib2fARB(GLuint _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2fARB);
    _COUNT(APICall_glVertexAttrib2fARB);
    CHECKCALL(glVertexAttrib2fARB);
    DO_REAL_CALL(glVertexAttrib2fARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2fARB);
}

void GLAPIENTRY glVertexAttrib2fNV(GLuint _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2fNV);
    _COUNT(APICall_glVertexAttrib2fNV);
    CHECKCALL(glVertexAttrib2fNV);
    DO_REAL_CALL(glVertexAttrib2fNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2fNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2fNV);
}

void GLAPIENTRY glVertexAttrib2fv(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2fv);
    _COUNT(APICall_glVertexAttrib2fv);
    CHECKCALL(glVertexAttrib2fv);
    DO_REAL_CALL(glVertexAttrib2fv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2fv);
}

void GLAPIENTRY glVertexAttrib2fvARB(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2fvARB);
    _COUNT(APICall_glVertexAttrib2fvARB);
    CHECKCALL(glVertexAttrib2fvARB);
    DO_REAL_CALL(glVertexAttrib2fvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2fvARB);
}

void GLAPIENTRY glVertexAttrib2fvNV(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2fvNV);
    _COUNT(APICall_glVertexAttrib2fvNV);
    CHECKCALL(glVertexAttrib2fvNV);
    DO_REAL_CALL(glVertexAttrib2fvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2fvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2fvNV);
}

void GLAPIENTRY glVertexAttrib2hNV(GLuint _p0, GLhalfNV _p1, GLhalfNV _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2hNV);
    _COUNT(APICall_glVertexAttrib2hNV);
    CHECKCALL(glVertexAttrib2hNV);
    DO_REAL_CALL(glVertexAttrib2hNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2hNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2hNV);
}

void GLAPIENTRY glVertexAttrib2hvNV(GLuint _p0, const GLhalfNV *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2hvNV);
    _COUNT(APICall_glVertexAttrib2hvNV);
    CHECKCALL(glVertexAttrib2hvNV);
    DO_REAL_CALL(glVertexAttrib2hvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2hvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2hvNV);
}

void GLAPIENTRY glVertexAttrib2s(GLuint _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2s);
    _COUNT(APICall_glVertexAttrib2s);
    CHECKCALL(glVertexAttrib2s);
    DO_REAL_CALL(glVertexAttrib2s(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2s);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2s);
}

void GLAPIENTRY glVertexAttrib2sARB(GLuint _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2sARB);
    _COUNT(APICall_glVertexAttrib2sARB);
    CHECKCALL(glVertexAttrib2sARB);
    DO_REAL_CALL(glVertexAttrib2sARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2sARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2sARB);
}

void GLAPIENTRY glVertexAttrib2sNV(GLuint _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2sNV);
    _COUNT(APICall_glVertexAttrib2sNV);
    CHECKCALL(glVertexAttrib2sNV);
    DO_REAL_CALL(glVertexAttrib2sNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttrib2sNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2sNV);
}

void GLAPIENTRY glVertexAttrib2sv(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2sv);
    _COUNT(APICall_glVertexAttrib2sv);
    CHECKCALL(glVertexAttrib2sv);
    DO_REAL_CALL(glVertexAttrib2sv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2sv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2sv);
}

void GLAPIENTRY glVertexAttrib2svARB(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2svARB);
    _COUNT(APICall_glVertexAttrib2svARB);
    CHECKCALL(glVertexAttrib2svARB);
    DO_REAL_CALL(glVertexAttrib2svARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2svARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2svARB);
}

void GLAPIENTRY glVertexAttrib2svNV(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib2svNV);
    _COUNT(APICall_glVertexAttrib2svNV);
    CHECKCALL(glVertexAttrib2svNV);
    DO_REAL_CALL(glVertexAttrib2svNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib2svNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib2svNV);
}

void GLAPIENTRY glVertexAttrib3d(GLuint _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3d);
    _COUNT(APICall_glVertexAttrib3d);
    CHECKCALL(glVertexAttrib3d);
    DO_REAL_CALL(glVertexAttrib3d(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3d);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3d);
}

void GLAPIENTRY glVertexAttrib3dARB(GLuint _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3dARB);
    _COUNT(APICall_glVertexAttrib3dARB);
    CHECKCALL(glVertexAttrib3dARB);
    DO_REAL_CALL(glVertexAttrib3dARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3dARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3dARB);
}

void GLAPIENTRY glVertexAttrib3dNV(GLuint _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3dNV);
    _COUNT(APICall_glVertexAttrib3dNV);
    CHECKCALL(glVertexAttrib3dNV);
    DO_REAL_CALL(glVertexAttrib3dNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3dNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3dNV);
}

void GLAPIENTRY glVertexAttrib3dv(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3dv);
    _COUNT(APICall_glVertexAttrib3dv);
    CHECKCALL(glVertexAttrib3dv);
    DO_REAL_CALL(glVertexAttrib3dv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3dv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3dv);
}

void GLAPIENTRY glVertexAttrib3dvARB(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3dvARB);
    _COUNT(APICall_glVertexAttrib3dvARB);
    CHECKCALL(glVertexAttrib3dvARB);
    DO_REAL_CALL(glVertexAttrib3dvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3dvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3dvARB);
}

void GLAPIENTRY glVertexAttrib3dvNV(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3dvNV);
    _COUNT(APICall_glVertexAttrib3dvNV);
    CHECKCALL(glVertexAttrib3dvNV);
    DO_REAL_CALL(glVertexAttrib3dvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3dvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3dvNV);
}

void GLAPIENTRY glVertexAttrib3f(GLuint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3f);
    _COUNT(APICall_glVertexAttrib3f);
    CHECKCALL(glVertexAttrib3f);
    DO_REAL_CALL(glVertexAttrib3f(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3f);
}

void GLAPIENTRY glVertexAttrib3fARB(GLuint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3fARB);
    _COUNT(APICall_glVertexAttrib3fARB);
    CHECKCALL(glVertexAttrib3fARB);
    DO_REAL_CALL(glVertexAttrib3fARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3fARB);
}

void GLAPIENTRY glVertexAttrib3fNV(GLuint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3fNV);
    _COUNT(APICall_glVertexAttrib3fNV);
    CHECKCALL(glVertexAttrib3fNV);
    DO_REAL_CALL(glVertexAttrib3fNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3fNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3fNV);
}

void GLAPIENTRY glVertexAttrib3fv(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3fv);
    _COUNT(APICall_glVertexAttrib3fv);
    CHECKCALL(glVertexAttrib3fv);
    DO_REAL_CALL(glVertexAttrib3fv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3fv);
}

void GLAPIENTRY glVertexAttrib3fvARB(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3fvARB);
    _COUNT(APICall_glVertexAttrib3fvARB);
    CHECKCALL(glVertexAttrib3fvARB);
    DO_REAL_CALL(glVertexAttrib3fvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3fvARB);
}

void GLAPIENTRY glVertexAttrib3fvNV(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3fvNV);
    _COUNT(APICall_glVertexAttrib3fvNV);
    CHECKCALL(glVertexAttrib3fvNV);
    DO_REAL_CALL(glVertexAttrib3fvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3fvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3fvNV);
}

void GLAPIENTRY glVertexAttrib3hNV(GLuint _p0, GLhalfNV _p1, GLhalfNV _p2, GLhalfNV _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3hNV);
    _COUNT(APICall_glVertexAttrib3hNV);
    CHECKCALL(glVertexAttrib3hNV);
    DO_REAL_CALL(glVertexAttrib3hNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3hNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3hNV);
}

void GLAPIENTRY glVertexAttrib3hvNV(GLuint _p0, const GLhalfNV *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3hvNV);
    _COUNT(APICall_glVertexAttrib3hvNV);
    CHECKCALL(glVertexAttrib3hvNV);
    DO_REAL_CALL(glVertexAttrib3hvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3hvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3hvNV);
}

void GLAPIENTRY glVertexAttrib3s(GLuint _p0, GLshort _p1, GLshort _p2, GLshort _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3s);
    _COUNT(APICall_glVertexAttrib3s);
    CHECKCALL(glVertexAttrib3s);
    DO_REAL_CALL(glVertexAttrib3s(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3s);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3s);
}

void GLAPIENTRY glVertexAttrib3sARB(GLuint _p0, GLshort _p1, GLshort _p2, GLshort _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3sARB);
    _COUNT(APICall_glVertexAttrib3sARB);
    CHECKCALL(glVertexAttrib3sARB);
    DO_REAL_CALL(glVertexAttrib3sARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3sARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3sARB);
}

void GLAPIENTRY glVertexAttrib3sNV(GLuint _p0, GLshort _p1, GLshort _p2, GLshort _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3sNV);
    _COUNT(APICall_glVertexAttrib3sNV);
    CHECKCALL(glVertexAttrib3sNV);
    DO_REAL_CALL(glVertexAttrib3sNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttrib3sNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3sNV);
}

void GLAPIENTRY glVertexAttrib3sv(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3sv);
    _COUNT(APICall_glVertexAttrib3sv);
    CHECKCALL(glVertexAttrib3sv);
    DO_REAL_CALL(glVertexAttrib3sv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3sv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3sv);
}

void GLAPIENTRY glVertexAttrib3svARB(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3svARB);
    _COUNT(APICall_glVertexAttrib3svARB);
    CHECKCALL(glVertexAttrib3svARB);
    DO_REAL_CALL(glVertexAttrib3svARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3svARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3svARB);
}

void GLAPIENTRY glVertexAttrib3svNV(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib3svNV);
    _COUNT(APICall_glVertexAttrib3svNV);
    CHECKCALL(glVertexAttrib3svNV);
    DO_REAL_CALL(glVertexAttrib3svNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib3svNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib3svNV);
}

void GLAPIENTRY glVertexAttrib4Nbv(GLuint _p0, const GLbyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4Nbv);
    _COUNT(APICall_glVertexAttrib4Nbv);
    CHECKCALL(glVertexAttrib4Nbv);
    DO_REAL_CALL(glVertexAttrib4Nbv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4Nbv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4Nbv);
}

void GLAPIENTRY glVertexAttrib4NbvARB(GLuint _p0, const GLbyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4NbvARB);
    _COUNT(APICall_glVertexAttrib4NbvARB);
    CHECKCALL(glVertexAttrib4NbvARB);
    DO_REAL_CALL(glVertexAttrib4NbvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4NbvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4NbvARB);
}

void GLAPIENTRY glVertexAttrib4Niv(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4Niv);
    _COUNT(APICall_glVertexAttrib4Niv);
    CHECKCALL(glVertexAttrib4Niv);
    DO_REAL_CALL(glVertexAttrib4Niv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4Niv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4Niv);
}

void GLAPIENTRY glVertexAttrib4NivARB(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4NivARB);
    _COUNT(APICall_glVertexAttrib4NivARB);
    CHECKCALL(glVertexAttrib4NivARB);
    DO_REAL_CALL(glVertexAttrib4NivARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4NivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4NivARB);
}

void GLAPIENTRY glVertexAttrib4Nsv(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4Nsv);
    _COUNT(APICall_glVertexAttrib4Nsv);
    CHECKCALL(glVertexAttrib4Nsv);
    DO_REAL_CALL(glVertexAttrib4Nsv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4Nsv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4Nsv);
}

void GLAPIENTRY glVertexAttrib4NsvARB(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4NsvARB);
    _COUNT(APICall_glVertexAttrib4NsvARB);
    CHECKCALL(glVertexAttrib4NsvARB);
    DO_REAL_CALL(glVertexAttrib4NsvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4NsvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4NsvARB);
}

void GLAPIENTRY glVertexAttrib4Nub(GLuint _p0, GLubyte _p1, GLubyte _p2, GLubyte _p3, GLubyte _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4Nub);
    _COUNT(APICall_glVertexAttrib4Nub);
    CHECKCALL(glVertexAttrib4Nub);
    DO_REAL_CALL(glVertexAttrib4Nub(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4Nub);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4Nub);
}

void GLAPIENTRY glVertexAttrib4NubARB(GLuint _p0, GLubyte _p1, GLubyte _p2, GLubyte _p3, GLubyte _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4NubARB);
    _COUNT(APICall_glVertexAttrib4NubARB);
    CHECKCALL(glVertexAttrib4NubARB);
    DO_REAL_CALL(glVertexAttrib4NubARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4NubARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4NubARB);
}

void GLAPIENTRY glVertexAttrib4Nubv(GLuint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4Nubv);
    _COUNT(APICall_glVertexAttrib4Nubv);
    CHECKCALL(glVertexAttrib4Nubv);
    DO_REAL_CALL(glVertexAttrib4Nubv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4Nubv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4Nubv);
}

void GLAPIENTRY glVertexAttrib4NubvARB(GLuint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4NubvARB);
    _COUNT(APICall_glVertexAttrib4NubvARB);
    CHECKCALL(glVertexAttrib4NubvARB);
    DO_REAL_CALL(glVertexAttrib4NubvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4NubvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4NubvARB);
}

void GLAPIENTRY glVertexAttrib4Nuiv(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4Nuiv);
    _COUNT(APICall_glVertexAttrib4Nuiv);
    CHECKCALL(glVertexAttrib4Nuiv);
    DO_REAL_CALL(glVertexAttrib4Nuiv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4Nuiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4Nuiv);
}

void GLAPIENTRY glVertexAttrib4NuivARB(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4NuivARB);
    _COUNT(APICall_glVertexAttrib4NuivARB);
    CHECKCALL(glVertexAttrib4NuivARB);
    DO_REAL_CALL(glVertexAttrib4NuivARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4NuivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4NuivARB);
}

void GLAPIENTRY glVertexAttrib4Nusv(GLuint _p0, const GLushort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4Nusv);
    _COUNT(APICall_glVertexAttrib4Nusv);
    CHECKCALL(glVertexAttrib4Nusv);
    DO_REAL_CALL(glVertexAttrib4Nusv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4Nusv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4Nusv);
}

void GLAPIENTRY glVertexAttrib4NusvARB(GLuint _p0, const GLushort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4NusvARB);
    _COUNT(APICall_glVertexAttrib4NusvARB);
    CHECKCALL(glVertexAttrib4NusvARB);
    DO_REAL_CALL(glVertexAttrib4NusvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4NusvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4NusvARB);
}

void GLAPIENTRY glVertexAttrib4bv(GLuint _p0, const GLbyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4bv);
    _COUNT(APICall_glVertexAttrib4bv);
    CHECKCALL(glVertexAttrib4bv);
    DO_REAL_CALL(glVertexAttrib4bv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4bv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4bv);
}

void GLAPIENTRY glVertexAttrib4bvARB(GLuint _p0, const GLbyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4bvARB);
    _COUNT(APICall_glVertexAttrib4bvARB);
    CHECKCALL(glVertexAttrib4bvARB);
    DO_REAL_CALL(glVertexAttrib4bvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4bvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4bvARB);
}

void GLAPIENTRY glVertexAttrib4d(GLuint _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4d);
    _COUNT(APICall_glVertexAttrib4d);
    CHECKCALL(glVertexAttrib4d);
    DO_REAL_CALL(glVertexAttrib4d(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4d);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4d);
}

void GLAPIENTRY glVertexAttrib4dARB(GLuint _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4dARB);
    _COUNT(APICall_glVertexAttrib4dARB);
    CHECKCALL(glVertexAttrib4dARB);
    DO_REAL_CALL(glVertexAttrib4dARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4dARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4dARB);
}

void GLAPIENTRY glVertexAttrib4dNV(GLuint _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4dNV);
    _COUNT(APICall_glVertexAttrib4dNV);
    CHECKCALL(glVertexAttrib4dNV);
    DO_REAL_CALL(glVertexAttrib4dNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4dNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4dNV);
}

void GLAPIENTRY glVertexAttrib4dv(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4dv);
    _COUNT(APICall_glVertexAttrib4dv);
    CHECKCALL(glVertexAttrib4dv);
    DO_REAL_CALL(glVertexAttrib4dv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4dv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4dv);
}

void GLAPIENTRY glVertexAttrib4dvARB(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4dvARB);
    _COUNT(APICall_glVertexAttrib4dvARB);
    CHECKCALL(glVertexAttrib4dvARB);
    DO_REAL_CALL(glVertexAttrib4dvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4dvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4dvARB);
}

void GLAPIENTRY glVertexAttrib4dvNV(GLuint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4dvNV);
    _COUNT(APICall_glVertexAttrib4dvNV);
    CHECKCALL(glVertexAttrib4dvNV);
    DO_REAL_CALL(glVertexAttrib4dvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4dvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4dvNV);
}

void GLAPIENTRY glVertexAttrib4f(GLuint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4f);
    _COUNT(APICall_glVertexAttrib4f);
    CHECKCALL(glVertexAttrib4f);
    DO_REAL_CALL(glVertexAttrib4f(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4f);
}

void GLAPIENTRY glVertexAttrib4fARB(GLuint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4fARB);
    _COUNT(APICall_glVertexAttrib4fARB);
    CHECKCALL(glVertexAttrib4fARB);
    DO_REAL_CALL(glVertexAttrib4fARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4fARB);
}

void GLAPIENTRY glVertexAttrib4fNV(GLuint _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4fNV);
    _COUNT(APICall_glVertexAttrib4fNV);
    CHECKCALL(glVertexAttrib4fNV);
    DO_REAL_CALL(glVertexAttrib4fNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4fNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4fNV);
}

void GLAPIENTRY glVertexAttrib4fv(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4fv);
    _COUNT(APICall_glVertexAttrib4fv);
    CHECKCALL(glVertexAttrib4fv);
    DO_REAL_CALL(glVertexAttrib4fv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4fv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4fv);
}

void GLAPIENTRY glVertexAttrib4fvARB(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4fvARB);
    _COUNT(APICall_glVertexAttrib4fvARB);
    CHECKCALL(glVertexAttrib4fvARB);
    DO_REAL_CALL(glVertexAttrib4fvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4fvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4fvARB);
}

void GLAPIENTRY glVertexAttrib4fvNV(GLuint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4fvNV);
    _COUNT(APICall_glVertexAttrib4fvNV);
    CHECKCALL(glVertexAttrib4fvNV);
    DO_REAL_CALL(glVertexAttrib4fvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4fvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4fvNV);
}

void GLAPIENTRY glVertexAttrib4hNV(GLuint _p0, GLhalfNV _p1, GLhalfNV _p2, GLhalfNV _p3, GLhalfNV _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4hNV);
    _COUNT(APICall_glVertexAttrib4hNV);
    CHECKCALL(glVertexAttrib4hNV);
    DO_REAL_CALL(glVertexAttrib4hNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4hNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4hNV);
}

void GLAPIENTRY glVertexAttrib4hvNV(GLuint _p0, const GLhalfNV *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4hvNV);
    _COUNT(APICall_glVertexAttrib4hvNV);
    CHECKCALL(glVertexAttrib4hvNV);
    DO_REAL_CALL(glVertexAttrib4hvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4hvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4hvNV);
}

void GLAPIENTRY glVertexAttrib4iv(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4iv);
    _COUNT(APICall_glVertexAttrib4iv);
    CHECKCALL(glVertexAttrib4iv);
    DO_REAL_CALL(glVertexAttrib4iv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4iv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4iv);
}

void GLAPIENTRY glVertexAttrib4ivARB(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4ivARB);
    _COUNT(APICall_glVertexAttrib4ivARB);
    CHECKCALL(glVertexAttrib4ivARB);
    DO_REAL_CALL(glVertexAttrib4ivARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4ivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4ivARB);
}

void GLAPIENTRY glVertexAttrib4s(GLuint _p0, GLshort _p1, GLshort _p2, GLshort _p3, GLshort _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4s);
    _COUNT(APICall_glVertexAttrib4s);
    CHECKCALL(glVertexAttrib4s);
    DO_REAL_CALL(glVertexAttrib4s(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4s);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4s);
}

void GLAPIENTRY glVertexAttrib4sARB(GLuint _p0, GLshort _p1, GLshort _p2, GLshort _p3, GLshort _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4sARB);
    _COUNT(APICall_glVertexAttrib4sARB);
    CHECKCALL(glVertexAttrib4sARB);
    DO_REAL_CALL(glVertexAttrib4sARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4sARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4sARB);
}

void GLAPIENTRY glVertexAttrib4sNV(GLuint _p0, GLshort _p1, GLshort _p2, GLshort _p3, GLshort _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4sNV);
    _COUNT(APICall_glVertexAttrib4sNV);
    CHECKCALL(glVertexAttrib4sNV);
    DO_REAL_CALL(glVertexAttrib4sNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4sNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4sNV);
}

void GLAPIENTRY glVertexAttrib4sv(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4sv);
    _COUNT(APICall_glVertexAttrib4sv);
    CHECKCALL(glVertexAttrib4sv);
    DO_REAL_CALL(glVertexAttrib4sv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4sv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4sv);
}

void GLAPIENTRY glVertexAttrib4svARB(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4svARB);
    _COUNT(APICall_glVertexAttrib4svARB);
    CHECKCALL(glVertexAttrib4svARB);
    DO_REAL_CALL(glVertexAttrib4svARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4svARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4svARB);
}

void GLAPIENTRY glVertexAttrib4svNV(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4svNV);
    _COUNT(APICall_glVertexAttrib4svNV);
    CHECKCALL(glVertexAttrib4svNV);
    DO_REAL_CALL(glVertexAttrib4svNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4svNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4svNV);
}

void GLAPIENTRY glVertexAttrib4ubNV(GLuint _p0, GLubyte _p1, GLubyte _p2, GLubyte _p3, GLubyte _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4ubNV);
    _COUNT(APICall_glVertexAttrib4ubNV);
    CHECKCALL(glVertexAttrib4ubNV);
    DO_REAL_CALL(glVertexAttrib4ubNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttrib4ubNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4ubNV);
}

void GLAPIENTRY glVertexAttrib4ubv(GLuint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4ubv);
    _COUNT(APICall_glVertexAttrib4ubv);
    CHECKCALL(glVertexAttrib4ubv);
    DO_REAL_CALL(glVertexAttrib4ubv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4ubv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4ubv);
}

void GLAPIENTRY glVertexAttrib4ubvARB(GLuint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4ubvARB);
    _COUNT(APICall_glVertexAttrib4ubvARB);
    CHECKCALL(glVertexAttrib4ubvARB);
    DO_REAL_CALL(glVertexAttrib4ubvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4ubvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4ubvARB);
}

void GLAPIENTRY glVertexAttrib4ubvNV(GLuint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4ubvNV);
    _COUNT(APICall_glVertexAttrib4ubvNV);
    CHECKCALL(glVertexAttrib4ubvNV);
    DO_REAL_CALL(glVertexAttrib4ubvNV(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4ubvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4ubvNV);
}

void GLAPIENTRY glVertexAttrib4uiv(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4uiv);
    _COUNT(APICall_glVertexAttrib4uiv);
    CHECKCALL(glVertexAttrib4uiv);
    DO_REAL_CALL(glVertexAttrib4uiv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4uiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4uiv);
}

void GLAPIENTRY glVertexAttrib4uivARB(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4uivARB);
    _COUNT(APICall_glVertexAttrib4uivARB);
    CHECKCALL(glVertexAttrib4uivARB);
    DO_REAL_CALL(glVertexAttrib4uivARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4uivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4uivARB);
}

void GLAPIENTRY glVertexAttrib4usv(GLuint _p0, const GLushort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4usv);
    _COUNT(APICall_glVertexAttrib4usv);
    CHECKCALL(glVertexAttrib4usv);
    DO_REAL_CALL(glVertexAttrib4usv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4usv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4usv);
}

void GLAPIENTRY glVertexAttrib4usvARB(GLuint _p0, const GLushort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttrib4usvARB);
    _COUNT(APICall_glVertexAttrib4usvARB);
    CHECKCALL(glVertexAttrib4usvARB);
    DO_REAL_CALL(glVertexAttrib4usvARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttrib4usvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttrib4usvARB);
}

void GLAPIENTRY glVertexAttribArrayObjectATI(GLuint _p0, GLint _p1, GLenum _p2, GLboolean _p3, GLsizei _p4, GLuint _p5, GLuint _p6)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribArrayObjectATI);
    _COUNT(APICall_glVertexAttribArrayObjectATI);
    CHECKCALL(glVertexAttribArrayObjectATI);
    DO_REAL_CALL(glVertexAttribArrayObjectATI(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_glVertexAttribArrayObjectATI);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribArrayObjectATI);
}

void GLAPIENTRY glVertexAttribDivisorARB(GLuint _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribDivisorARB);
    _COUNT(APICall_glVertexAttribDivisorARB);
    CHECKCALL(glVertexAttribDivisorARB);
    DO_REAL_CALL(glVertexAttribDivisorARB(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribDivisorARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribDivisorARB);
}

void GLAPIENTRY glVertexAttribI1i(GLuint _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI1i);
    _COUNT(APICall_glVertexAttribI1i);
    CHECKCALL(glVertexAttribI1i);
    DO_REAL_CALL(glVertexAttribI1i(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI1i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI1i);
}

void GLAPIENTRY glVertexAttribI1iEXT(GLuint _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI1iEXT);
    _COUNT(APICall_glVertexAttribI1iEXT);
    CHECKCALL(glVertexAttribI1iEXT);
    DO_REAL_CALL(glVertexAttribI1iEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI1iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI1iEXT);
}

void GLAPIENTRY glVertexAttribI1iv(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI1iv);
    _COUNT(APICall_glVertexAttribI1iv);
    CHECKCALL(glVertexAttribI1iv);
    DO_REAL_CALL(glVertexAttribI1iv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI1iv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI1iv);
}

void GLAPIENTRY glVertexAttribI1ivEXT(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI1ivEXT);
    _COUNT(APICall_glVertexAttribI1ivEXT);
    CHECKCALL(glVertexAttribI1ivEXT);
    DO_REAL_CALL(glVertexAttribI1ivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI1ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI1ivEXT);
}

void GLAPIENTRY glVertexAttribI1ui(GLuint _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI1ui);
    _COUNT(APICall_glVertexAttribI1ui);
    CHECKCALL(glVertexAttribI1ui);
    DO_REAL_CALL(glVertexAttribI1ui(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI1ui);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI1ui);
}

void GLAPIENTRY glVertexAttribI1uiEXT(GLuint _p0, GLuint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI1uiEXT);
    _COUNT(APICall_glVertexAttribI1uiEXT);
    CHECKCALL(glVertexAttribI1uiEXT);
    DO_REAL_CALL(glVertexAttribI1uiEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI1uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI1uiEXT);
}

void GLAPIENTRY glVertexAttribI1uiv(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI1uiv);
    _COUNT(APICall_glVertexAttribI1uiv);
    CHECKCALL(glVertexAttribI1uiv);
    DO_REAL_CALL(glVertexAttribI1uiv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI1uiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI1uiv);
}

void GLAPIENTRY glVertexAttribI1uivEXT(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI1uivEXT);
    _COUNT(APICall_glVertexAttribI1uivEXT);
    CHECKCALL(glVertexAttribI1uivEXT);
    DO_REAL_CALL(glVertexAttribI1uivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI1uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI1uivEXT);
}

void GLAPIENTRY glVertexAttribI2i(GLuint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI2i);
    _COUNT(APICall_glVertexAttribI2i);
    CHECKCALL(glVertexAttribI2i);
    DO_REAL_CALL(glVertexAttribI2i(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribI2i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI2i);
}

void GLAPIENTRY glVertexAttribI2iEXT(GLuint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI2iEXT);
    _COUNT(APICall_glVertexAttribI2iEXT);
    CHECKCALL(glVertexAttribI2iEXT);
    DO_REAL_CALL(glVertexAttribI2iEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribI2iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI2iEXT);
}

void GLAPIENTRY glVertexAttribI2iv(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI2iv);
    _COUNT(APICall_glVertexAttribI2iv);
    CHECKCALL(glVertexAttribI2iv);
    DO_REAL_CALL(glVertexAttribI2iv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI2iv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI2iv);
}

void GLAPIENTRY glVertexAttribI2ivEXT(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI2ivEXT);
    _COUNT(APICall_glVertexAttribI2ivEXT);
    CHECKCALL(glVertexAttribI2ivEXT);
    DO_REAL_CALL(glVertexAttribI2ivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI2ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI2ivEXT);
}

void GLAPIENTRY glVertexAttribI2ui(GLuint _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI2ui);
    _COUNT(APICall_glVertexAttribI2ui);
    CHECKCALL(glVertexAttribI2ui);
    DO_REAL_CALL(glVertexAttribI2ui(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribI2ui);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI2ui);
}

void GLAPIENTRY glVertexAttribI2uiEXT(GLuint _p0, GLuint _p1, GLuint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI2uiEXT);
    _COUNT(APICall_glVertexAttribI2uiEXT);
    CHECKCALL(glVertexAttribI2uiEXT);
    DO_REAL_CALL(glVertexAttribI2uiEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribI2uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI2uiEXT);
}

void GLAPIENTRY glVertexAttribI2uiv(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI2uiv);
    _COUNT(APICall_glVertexAttribI2uiv);
    CHECKCALL(glVertexAttribI2uiv);
    DO_REAL_CALL(glVertexAttribI2uiv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI2uiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI2uiv);
}

void GLAPIENTRY glVertexAttribI2uivEXT(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI2uivEXT);
    _COUNT(APICall_glVertexAttribI2uivEXT);
    CHECKCALL(glVertexAttribI2uivEXT);
    DO_REAL_CALL(glVertexAttribI2uivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI2uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI2uivEXT);
}

void GLAPIENTRY glVertexAttribI3i(GLuint _p0, GLint _p1, GLint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI3i);
    _COUNT(APICall_glVertexAttribI3i);
    CHECKCALL(glVertexAttribI3i);
    DO_REAL_CALL(glVertexAttribI3i(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttribI3i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI3i);
}

void GLAPIENTRY glVertexAttribI3iEXT(GLuint _p0, GLint _p1, GLint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI3iEXT);
    _COUNT(APICall_glVertexAttribI3iEXT);
    CHECKCALL(glVertexAttribI3iEXT);
    DO_REAL_CALL(glVertexAttribI3iEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttribI3iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI3iEXT);
}

void GLAPIENTRY glVertexAttribI3iv(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI3iv);
    _COUNT(APICall_glVertexAttribI3iv);
    CHECKCALL(glVertexAttribI3iv);
    DO_REAL_CALL(glVertexAttribI3iv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI3iv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI3iv);
}

void GLAPIENTRY glVertexAttribI3ivEXT(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI3ivEXT);
    _COUNT(APICall_glVertexAttribI3ivEXT);
    CHECKCALL(glVertexAttribI3ivEXT);
    DO_REAL_CALL(glVertexAttribI3ivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI3ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI3ivEXT);
}

void GLAPIENTRY glVertexAttribI3ui(GLuint _p0, GLuint _p1, GLuint _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI3ui);
    _COUNT(APICall_glVertexAttribI3ui);
    CHECKCALL(glVertexAttribI3ui);
    DO_REAL_CALL(glVertexAttribI3ui(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttribI3ui);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI3ui);
}

void GLAPIENTRY glVertexAttribI3uiEXT(GLuint _p0, GLuint _p1, GLuint _p2, GLuint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI3uiEXT);
    _COUNT(APICall_glVertexAttribI3uiEXT);
    CHECKCALL(glVertexAttribI3uiEXT);
    DO_REAL_CALL(glVertexAttribI3uiEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexAttribI3uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI3uiEXT);
}

void GLAPIENTRY glVertexAttribI3uiv(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI3uiv);
    _COUNT(APICall_glVertexAttribI3uiv);
    CHECKCALL(glVertexAttribI3uiv);
    DO_REAL_CALL(glVertexAttribI3uiv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI3uiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI3uiv);
}

void GLAPIENTRY glVertexAttribI3uivEXT(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI3uivEXT);
    _COUNT(APICall_glVertexAttribI3uivEXT);
    CHECKCALL(glVertexAttribI3uivEXT);
    DO_REAL_CALL(glVertexAttribI3uivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI3uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI3uivEXT);
}

void GLAPIENTRY glVertexAttribI4bv(GLuint _p0, const GLbyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4bv);
    _COUNT(APICall_glVertexAttribI4bv);
    CHECKCALL(glVertexAttribI4bv);
    DO_REAL_CALL(glVertexAttribI4bv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4bv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4bv);
}

void GLAPIENTRY glVertexAttribI4bvEXT(GLuint _p0, const GLbyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4bvEXT);
    _COUNT(APICall_glVertexAttribI4bvEXT);
    CHECKCALL(glVertexAttribI4bvEXT);
    DO_REAL_CALL(glVertexAttribI4bvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4bvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4bvEXT);
}

void GLAPIENTRY glVertexAttribI4i(GLuint _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4i);
    _COUNT(APICall_glVertexAttribI4i);
    CHECKCALL(glVertexAttribI4i);
    DO_REAL_CALL(glVertexAttribI4i(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttribI4i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4i);
}

void GLAPIENTRY glVertexAttribI4iEXT(GLuint _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4iEXT);
    _COUNT(APICall_glVertexAttribI4iEXT);
    CHECKCALL(glVertexAttribI4iEXT);
    DO_REAL_CALL(glVertexAttribI4iEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttribI4iEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4iEXT);
}

void GLAPIENTRY glVertexAttribI4iv(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4iv);
    _COUNT(APICall_glVertexAttribI4iv);
    CHECKCALL(glVertexAttribI4iv);
    DO_REAL_CALL(glVertexAttribI4iv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4iv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4iv);
}

void GLAPIENTRY glVertexAttribI4ivEXT(GLuint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4ivEXT);
    _COUNT(APICall_glVertexAttribI4ivEXT);
    CHECKCALL(glVertexAttribI4ivEXT);
    DO_REAL_CALL(glVertexAttribI4ivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4ivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4ivEXT);
}

void GLAPIENTRY glVertexAttribI4sv(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4sv);
    _COUNT(APICall_glVertexAttribI4sv);
    CHECKCALL(glVertexAttribI4sv);
    DO_REAL_CALL(glVertexAttribI4sv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4sv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4sv);
}

void GLAPIENTRY glVertexAttribI4svEXT(GLuint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4svEXT);
    _COUNT(APICall_glVertexAttribI4svEXT);
    CHECKCALL(glVertexAttribI4svEXT);
    DO_REAL_CALL(glVertexAttribI4svEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4svEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4svEXT);
}

void GLAPIENTRY glVertexAttribI4ubv(GLuint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4ubv);
    _COUNT(APICall_glVertexAttribI4ubv);
    CHECKCALL(glVertexAttribI4ubv);
    DO_REAL_CALL(glVertexAttribI4ubv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4ubv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4ubv);
}

void GLAPIENTRY glVertexAttribI4ubvEXT(GLuint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4ubvEXT);
    _COUNT(APICall_glVertexAttribI4ubvEXT);
    CHECKCALL(glVertexAttribI4ubvEXT);
    DO_REAL_CALL(glVertexAttribI4ubvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4ubvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4ubvEXT);
}

void GLAPIENTRY glVertexAttribI4ui(GLuint _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4ui);
    _COUNT(APICall_glVertexAttribI4ui);
    CHECKCALL(glVertexAttribI4ui);
    DO_REAL_CALL(glVertexAttribI4ui(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttribI4ui);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4ui);
}

void GLAPIENTRY glVertexAttribI4uiEXT(GLuint _p0, GLuint _p1, GLuint _p2, GLuint _p3, GLuint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4uiEXT);
    _COUNT(APICall_glVertexAttribI4uiEXT);
    CHECKCALL(glVertexAttribI4uiEXT);
    DO_REAL_CALL(glVertexAttribI4uiEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttribI4uiEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4uiEXT);
}

void GLAPIENTRY glVertexAttribI4uiv(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4uiv);
    _COUNT(APICall_glVertexAttribI4uiv);
    CHECKCALL(glVertexAttribI4uiv);
    DO_REAL_CALL(glVertexAttribI4uiv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4uiv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4uiv);
}

void GLAPIENTRY glVertexAttribI4uivEXT(GLuint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4uivEXT);
    _COUNT(APICall_glVertexAttribI4uivEXT);
    CHECKCALL(glVertexAttribI4uivEXT);
    DO_REAL_CALL(glVertexAttribI4uivEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4uivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4uivEXT);
}

void GLAPIENTRY glVertexAttribI4usv(GLuint _p0, const GLushort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4usv);
    _COUNT(APICall_glVertexAttribI4usv);
    CHECKCALL(glVertexAttribI4usv);
    DO_REAL_CALL(glVertexAttribI4usv(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4usv);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4usv);
}

void GLAPIENTRY glVertexAttribI4usvEXT(GLuint _p0, const GLushort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribI4usvEXT);
    _COUNT(APICall_glVertexAttribI4usvEXT);
    CHECKCALL(glVertexAttribI4usvEXT);
    DO_REAL_CALL(glVertexAttribI4usvEXT(_p0,_p1));
    _W.writeAPICall(APICall_glVertexAttribI4usvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribI4usvEXT);
}

void GLAPIENTRY glVertexAttribIPointer(GLuint _p0, GLint _p1, GLenum _p2, GLsizei _p3, const GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribIPointer);
    _COUNT(APICall_glVertexAttribIPointer);
    CHECKCALL(glVertexAttribIPointer);
    DO_REAL_CALL(glVertexAttribIPointer(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttribIPointer);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribIPointer);
}

void GLAPIENTRY glVertexAttribIPointerEXT(GLuint _p0, GLint _p1, GLenum _p2, GLsizei _p3, const GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribIPointerEXT);
    _COUNT(APICall_glVertexAttribIPointerEXT);
    CHECKCALL(glVertexAttribIPointerEXT);
    DO_REAL_CALL(glVertexAttribIPointerEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttribIPointerEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribIPointerEXT);
}

void GLAPIENTRY glVertexAttribPointer(GLuint _p0, GLint _p1, GLenum _p2, GLboolean _p3, GLsizei _p4, const GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribPointer);
    _COUNT(APICall_glVertexAttribPointer);
    CHECKCALL(glVertexAttribPointer);
    DO_REAL_CALL(glVertexAttribPointer(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glVertexAttribPointer);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribPointer);
}

void GLAPIENTRY glVertexAttribPointerARB(GLuint _p0, GLint _p1, GLenum _p2, GLboolean _p3, GLsizei _p4, const GLvoid *_p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribPointerARB);
    _COUNT(APICall_glVertexAttribPointerARB);
    CHECKCALL(glVertexAttribPointerARB);
    DO_REAL_CALL(glVertexAttribPointerARB(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glVertexAttribPointerARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glVertexAttribPointerARB_SPECIFIC(_p0,_p1,_p2,_p3,_p4,_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribPointerARB);
}

void GLAPIENTRY glVertexAttribPointerNV(GLuint _p0, GLint _p1, GLenum _p2, GLsizei _p3, const GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribPointerNV);
    _COUNT(APICall_glVertexAttribPointerNV);
    CHECKCALL(glVertexAttribPointerNV);
    DO_REAL_CALL(glVertexAttribPointerNV(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexAttribPointerNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribPointerNV);
}

void GLAPIENTRY glVertexAttribs1dvNV(GLuint _p0, GLsizei _p1, const GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs1dvNV);
    _COUNT(APICall_glVertexAttribs1dvNV);
    CHECKCALL(glVertexAttribs1dvNV);
    DO_REAL_CALL(glVertexAttribs1dvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs1dvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs1dvNV);
}

void GLAPIENTRY glVertexAttribs1fvNV(GLuint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs1fvNV);
    _COUNT(APICall_glVertexAttribs1fvNV);
    CHECKCALL(glVertexAttribs1fvNV);
    DO_REAL_CALL(glVertexAttribs1fvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs1fvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs1fvNV);
}

void GLAPIENTRY glVertexAttribs1hvNV(GLuint _p0, GLsizei _p1, const GLhalfNV *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs1hvNV);
    _COUNT(APICall_glVertexAttribs1hvNV);
    CHECKCALL(glVertexAttribs1hvNV);
    DO_REAL_CALL(glVertexAttribs1hvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs1hvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs1hvNV);
}

void GLAPIENTRY glVertexAttribs1svNV(GLuint _p0, GLsizei _p1, const GLshort *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs1svNV);
    _COUNT(APICall_glVertexAttribs1svNV);
    CHECKCALL(glVertexAttribs1svNV);
    DO_REAL_CALL(glVertexAttribs1svNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs1svNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs1svNV);
}

void GLAPIENTRY glVertexAttribs2dvNV(GLuint _p0, GLsizei _p1, const GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs2dvNV);
    _COUNT(APICall_glVertexAttribs2dvNV);
    CHECKCALL(glVertexAttribs2dvNV);
    DO_REAL_CALL(glVertexAttribs2dvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs2dvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs2dvNV);
}

void GLAPIENTRY glVertexAttribs2fvNV(GLuint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs2fvNV);
    _COUNT(APICall_glVertexAttribs2fvNV);
    CHECKCALL(glVertexAttribs2fvNV);
    DO_REAL_CALL(glVertexAttribs2fvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs2fvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs2fvNV);
}

void GLAPIENTRY glVertexAttribs2hvNV(GLuint _p0, GLsizei _p1, const GLhalfNV *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs2hvNV);
    _COUNT(APICall_glVertexAttribs2hvNV);
    CHECKCALL(glVertexAttribs2hvNV);
    DO_REAL_CALL(glVertexAttribs2hvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs2hvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs2hvNV);
}

void GLAPIENTRY glVertexAttribs2svNV(GLuint _p0, GLsizei _p1, const GLshort *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs2svNV);
    _COUNT(APICall_glVertexAttribs2svNV);
    CHECKCALL(glVertexAttribs2svNV);
    DO_REAL_CALL(glVertexAttribs2svNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs2svNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs2svNV);
}

void GLAPIENTRY glVertexAttribs3dvNV(GLuint _p0, GLsizei _p1, const GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs3dvNV);
    _COUNT(APICall_glVertexAttribs3dvNV);
    CHECKCALL(glVertexAttribs3dvNV);
    DO_REAL_CALL(glVertexAttribs3dvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs3dvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs3dvNV);
}

void GLAPIENTRY glVertexAttribs3fvNV(GLuint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs3fvNV);
    _COUNT(APICall_glVertexAttribs3fvNV);
    CHECKCALL(glVertexAttribs3fvNV);
    DO_REAL_CALL(glVertexAttribs3fvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs3fvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs3fvNV);
}

void GLAPIENTRY glVertexAttribs3hvNV(GLuint _p0, GLsizei _p1, const GLhalfNV *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs3hvNV);
    _COUNT(APICall_glVertexAttribs3hvNV);
    CHECKCALL(glVertexAttribs3hvNV);
    DO_REAL_CALL(glVertexAttribs3hvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs3hvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs3hvNV);
}

void GLAPIENTRY glVertexAttribs3svNV(GLuint _p0, GLsizei _p1, const GLshort *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs3svNV);
    _COUNT(APICall_glVertexAttribs3svNV);
    CHECKCALL(glVertexAttribs3svNV);
    DO_REAL_CALL(glVertexAttribs3svNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs3svNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs3svNV);
}

void GLAPIENTRY glVertexAttribs4dvNV(GLuint _p0, GLsizei _p1, const GLdouble *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs4dvNV);
    _COUNT(APICall_glVertexAttribs4dvNV);
    CHECKCALL(glVertexAttribs4dvNV);
    DO_REAL_CALL(glVertexAttribs4dvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs4dvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs4dvNV);
}

void GLAPIENTRY glVertexAttribs4fvNV(GLuint _p0, GLsizei _p1, const GLfloat *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs4fvNV);
    _COUNT(APICall_glVertexAttribs4fvNV);
    CHECKCALL(glVertexAttribs4fvNV);
    DO_REAL_CALL(glVertexAttribs4fvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs4fvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs4fvNV);
}

void GLAPIENTRY glVertexAttribs4hvNV(GLuint _p0, GLsizei _p1, const GLhalfNV *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs4hvNV);
    _COUNT(APICall_glVertexAttribs4hvNV);
    CHECKCALL(glVertexAttribs4hvNV);
    DO_REAL_CALL(glVertexAttribs4hvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs4hvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs4hvNV);
}

void GLAPIENTRY glVertexAttribs4svNV(GLuint _p0, GLsizei _p1, const GLshort *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs4svNV);
    _COUNT(APICall_glVertexAttribs4svNV);
    CHECKCALL(glVertexAttribs4svNV);
    DO_REAL_CALL(glVertexAttribs4svNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs4svNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs4svNV);
}

void GLAPIENTRY glVertexAttribs4ubvNV(GLuint _p0, GLsizei _p1, const GLubyte *_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexAttribs4ubvNV);
    _COUNT(APICall_glVertexAttribs4ubvNV);
    CHECKCALL(glVertexAttribs4ubvNV);
    DO_REAL_CALL(glVertexAttribs4ubvNV(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexAttribs4ubvNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexAttribs4ubvNV);
}

void GLAPIENTRY glVertexBlendARB(GLint _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexBlendARB);
    _COUNT(APICall_glVertexBlendARB);
    CHECKCALL(glVertexBlendARB);
    DO_REAL_CALL(glVertexBlendARB(_p0));
    _W.writeAPICall(APICall_glVertexBlendARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexBlendARB);
}

void GLAPIENTRY glVertexBlendEnvfATI(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexBlendEnvfATI);
    _COUNT(APICall_glVertexBlendEnvfATI);
    CHECKCALL(glVertexBlendEnvfATI);
    DO_REAL_CALL(glVertexBlendEnvfATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexBlendEnvfATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexBlendEnvfATI);
}

void GLAPIENTRY glVertexBlendEnviATI(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexBlendEnviATI);
    _COUNT(APICall_glVertexBlendEnviATI);
    CHECKCALL(glVertexBlendEnviATI);
    DO_REAL_CALL(glVertexBlendEnviATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexBlendEnviATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexBlendEnviATI);
}

void GLAPIENTRY glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *ptr)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexPointer);
    _COUNT(APICall_glVertexPointer);
    CHECKCALL(glVertexPointer);
    DO_REAL_CALL(glVertexPointer(size,type,stride,ptr));
    _W.writeAPICall(APICall_glVertexPointer);
    _W.writeMark("(");
    _W.write(size);
    _W.writeMark(",");
    _W.writeEnum(type);
    _W.writeMark(",");
    _W.write(stride);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    glVertexPointer_SPECIFIC(size,type,stride,ptr);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexPointer);
}

void GLAPIENTRY glVertexPointerEXT(GLint _p0, GLenum _p1, GLsizei _p2, GLsizei _p3, const GLvoid *_p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexPointerEXT);
    _COUNT(APICall_glVertexPointerEXT);
    CHECKCALL(glVertexPointerEXT);
    DO_REAL_CALL(glVertexPointerEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexPointerEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexPointerEXT);
}

void GLAPIENTRY glVertexPointervINTEL(GLint _p0, GLenum _p1, const GLvoid **_p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexPointervINTEL);
    _COUNT(APICall_glVertexPointervINTEL);
    CHECKCALL(glVertexPointervINTEL);
    DO_REAL_CALL(glVertexPointervINTEL(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexPointervINTEL);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexPointervINTEL);
}

void GLAPIENTRY glVertexStream1dATI(GLenum _p0, GLdouble _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream1dATI);
    _COUNT(APICall_glVertexStream1dATI);
    CHECKCALL(glVertexStream1dATI);
    DO_REAL_CALL(glVertexStream1dATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream1dATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream1dATI);
}

void GLAPIENTRY glVertexStream1dvATI(GLenum _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream1dvATI);
    _COUNT(APICall_glVertexStream1dvATI);
    CHECKCALL(glVertexStream1dvATI);
    DO_REAL_CALL(glVertexStream1dvATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream1dvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream1dvATI);
}

void GLAPIENTRY glVertexStream1fATI(GLenum _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream1fATI);
    _COUNT(APICall_glVertexStream1fATI);
    CHECKCALL(glVertexStream1fATI);
    DO_REAL_CALL(glVertexStream1fATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream1fATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream1fATI);
}

void GLAPIENTRY glVertexStream1fvATI(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream1fvATI);
    _COUNT(APICall_glVertexStream1fvATI);
    CHECKCALL(glVertexStream1fvATI);
    DO_REAL_CALL(glVertexStream1fvATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream1fvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream1fvATI);
}

void GLAPIENTRY glVertexStream1iATI(GLenum _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream1iATI);
    _COUNT(APICall_glVertexStream1iATI);
    CHECKCALL(glVertexStream1iATI);
    DO_REAL_CALL(glVertexStream1iATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream1iATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream1iATI);
}

void GLAPIENTRY glVertexStream1ivATI(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream1ivATI);
    _COUNT(APICall_glVertexStream1ivATI);
    CHECKCALL(glVertexStream1ivATI);
    DO_REAL_CALL(glVertexStream1ivATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream1ivATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream1ivATI);
}

void GLAPIENTRY glVertexStream1sATI(GLenum _p0, GLshort _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream1sATI);
    _COUNT(APICall_glVertexStream1sATI);
    CHECKCALL(glVertexStream1sATI);
    DO_REAL_CALL(glVertexStream1sATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream1sATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream1sATI);
}

void GLAPIENTRY glVertexStream1svATI(GLenum _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream1svATI);
    _COUNT(APICall_glVertexStream1svATI);
    CHECKCALL(glVertexStream1svATI);
    DO_REAL_CALL(glVertexStream1svATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream1svATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream1svATI);
}

void GLAPIENTRY glVertexStream2dATI(GLenum _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream2dATI);
    _COUNT(APICall_glVertexStream2dATI);
    CHECKCALL(glVertexStream2dATI);
    DO_REAL_CALL(glVertexStream2dATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexStream2dATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream2dATI);
}

void GLAPIENTRY glVertexStream2dvATI(GLenum _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream2dvATI);
    _COUNT(APICall_glVertexStream2dvATI);
    CHECKCALL(glVertexStream2dvATI);
    DO_REAL_CALL(glVertexStream2dvATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream2dvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream2dvATI);
}

void GLAPIENTRY glVertexStream2fATI(GLenum _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream2fATI);
    _COUNT(APICall_glVertexStream2fATI);
    CHECKCALL(glVertexStream2fATI);
    DO_REAL_CALL(glVertexStream2fATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexStream2fATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream2fATI);
}

void GLAPIENTRY glVertexStream2fvATI(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream2fvATI);
    _COUNT(APICall_glVertexStream2fvATI);
    CHECKCALL(glVertexStream2fvATI);
    DO_REAL_CALL(glVertexStream2fvATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream2fvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream2fvATI);
}

void GLAPIENTRY glVertexStream2iATI(GLenum _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream2iATI);
    _COUNT(APICall_glVertexStream2iATI);
    CHECKCALL(glVertexStream2iATI);
    DO_REAL_CALL(glVertexStream2iATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexStream2iATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream2iATI);
}

void GLAPIENTRY glVertexStream2ivATI(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream2ivATI);
    _COUNT(APICall_glVertexStream2ivATI);
    CHECKCALL(glVertexStream2ivATI);
    DO_REAL_CALL(glVertexStream2ivATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream2ivATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream2ivATI);
}

void GLAPIENTRY glVertexStream2sATI(GLenum _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream2sATI);
    _COUNT(APICall_glVertexStream2sATI);
    CHECKCALL(glVertexStream2sATI);
    DO_REAL_CALL(glVertexStream2sATI(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glVertexStream2sATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream2sATI);
}

void GLAPIENTRY glVertexStream2svATI(GLenum _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream2svATI);
    _COUNT(APICall_glVertexStream2svATI);
    CHECKCALL(glVertexStream2svATI);
    DO_REAL_CALL(glVertexStream2svATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream2svATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream2svATI);
}

void GLAPIENTRY glVertexStream3dATI(GLenum _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream3dATI);
    _COUNT(APICall_glVertexStream3dATI);
    CHECKCALL(glVertexStream3dATI);
    DO_REAL_CALL(glVertexStream3dATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexStream3dATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream3dATI);
}

void GLAPIENTRY glVertexStream3dvATI(GLenum _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream3dvATI);
    _COUNT(APICall_glVertexStream3dvATI);
    CHECKCALL(glVertexStream3dvATI);
    DO_REAL_CALL(glVertexStream3dvATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream3dvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream3dvATI);
}

void GLAPIENTRY glVertexStream3fATI(GLenum _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream3fATI);
    _COUNT(APICall_glVertexStream3fATI);
    CHECKCALL(glVertexStream3fATI);
    DO_REAL_CALL(glVertexStream3fATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexStream3fATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream3fATI);
}

void GLAPIENTRY glVertexStream3fvATI(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream3fvATI);
    _COUNT(APICall_glVertexStream3fvATI);
    CHECKCALL(glVertexStream3fvATI);
    DO_REAL_CALL(glVertexStream3fvATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream3fvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream3fvATI);
}

void GLAPIENTRY glVertexStream3iATI(GLenum _p0, GLint _p1, GLint _p2, GLint _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream3iATI);
    _COUNT(APICall_glVertexStream3iATI);
    CHECKCALL(glVertexStream3iATI);
    DO_REAL_CALL(glVertexStream3iATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexStream3iATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream3iATI);
}

void GLAPIENTRY glVertexStream3ivATI(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream3ivATI);
    _COUNT(APICall_glVertexStream3ivATI);
    CHECKCALL(glVertexStream3ivATI);
    DO_REAL_CALL(glVertexStream3ivATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream3ivATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream3ivATI);
}

void GLAPIENTRY glVertexStream3sATI(GLenum _p0, GLshort _p1, GLshort _p2, GLshort _p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream3sATI);
    _COUNT(APICall_glVertexStream3sATI);
    CHECKCALL(glVertexStream3sATI);
    DO_REAL_CALL(glVertexStream3sATI(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexStream3sATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream3sATI);
}

void GLAPIENTRY glVertexStream3svATI(GLenum _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream3svATI);
    _COUNT(APICall_glVertexStream3svATI);
    CHECKCALL(glVertexStream3svATI);
    DO_REAL_CALL(glVertexStream3svATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream3svATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream3svATI);
}

void GLAPIENTRY glVertexStream4dATI(GLenum _p0, GLdouble _p1, GLdouble _p2, GLdouble _p3, GLdouble _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream4dATI);
    _COUNT(APICall_glVertexStream4dATI);
    CHECKCALL(glVertexStream4dATI);
    DO_REAL_CALL(glVertexStream4dATI(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexStream4dATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream4dATI);
}

void GLAPIENTRY glVertexStream4dvATI(GLenum _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream4dvATI);
    _COUNT(APICall_glVertexStream4dvATI);
    CHECKCALL(glVertexStream4dvATI);
    DO_REAL_CALL(glVertexStream4dvATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream4dvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream4dvATI);
}

void GLAPIENTRY glVertexStream4fATI(GLenum _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3, GLfloat _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream4fATI);
    _COUNT(APICall_glVertexStream4fATI);
    CHECKCALL(glVertexStream4fATI);
    DO_REAL_CALL(glVertexStream4fATI(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexStream4fATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream4fATI);
}

void GLAPIENTRY glVertexStream4fvATI(GLenum _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream4fvATI);
    _COUNT(APICall_glVertexStream4fvATI);
    CHECKCALL(glVertexStream4fvATI);
    DO_REAL_CALL(glVertexStream4fvATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream4fvATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream4fvATI);
}

void GLAPIENTRY glVertexStream4iATI(GLenum _p0, GLint _p1, GLint _p2, GLint _p3, GLint _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream4iATI);
    _COUNT(APICall_glVertexStream4iATI);
    CHECKCALL(glVertexStream4iATI);
    DO_REAL_CALL(glVertexStream4iATI(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexStream4iATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream4iATI);
}

void GLAPIENTRY glVertexStream4ivATI(GLenum _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream4ivATI);
    _COUNT(APICall_glVertexStream4ivATI);
    CHECKCALL(glVertexStream4ivATI);
    DO_REAL_CALL(glVertexStream4ivATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream4ivATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream4ivATI);
}

void GLAPIENTRY glVertexStream4sATI(GLenum _p0, GLshort _p1, GLshort _p2, GLshort _p3, GLshort _p4)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream4sATI);
    _COUNT(APICall_glVertexStream4sATI);
    CHECKCALL(glVertexStream4sATI);
    DO_REAL_CALL(glVertexStream4sATI(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_glVertexStream4sATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream4sATI);
}

void GLAPIENTRY glVertexStream4svATI(GLenum _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexStream4svATI);
    _COUNT(APICall_glVertexStream4svATI);
    CHECKCALL(glVertexStream4svATI);
    DO_REAL_CALL(glVertexStream4svATI(_p0,_p1));
    _W.writeAPICall(APICall_glVertexStream4svATI);
    _W.writeMark("(");
    _W.writeEnum(_p0);
    _W.writeMark(",");
    _W.write(_p1, 4);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexStream4svATI);
}

void GLAPIENTRY glVertexWeightPointerEXT(GLsizei _p0, GLenum _p1, GLsizei _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexWeightPointerEXT);
    _COUNT(APICall_glVertexWeightPointerEXT);
    CHECKCALL(glVertexWeightPointerEXT);
    DO_REAL_CALL(glVertexWeightPointerEXT(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glVertexWeightPointerEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexWeightPointerEXT);
}

void GLAPIENTRY glVertexWeightfEXT(GLfloat _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexWeightfEXT);
    _COUNT(APICall_glVertexWeightfEXT);
    CHECKCALL(glVertexWeightfEXT);
    DO_REAL_CALL(glVertexWeightfEXT(_p0));
    _W.writeAPICall(APICall_glVertexWeightfEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexWeightfEXT);
}

void GLAPIENTRY glVertexWeightfvEXT(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexWeightfvEXT);
    _COUNT(APICall_glVertexWeightfvEXT);
    CHECKCALL(glVertexWeightfvEXT);
    DO_REAL_CALL(glVertexWeightfvEXT(_p0));
    _W.writeAPICall(APICall_glVertexWeightfvEXT);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexWeightfvEXT);
}

void GLAPIENTRY glVertexWeighthNV(GLhalfNV _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexWeighthNV);
    _COUNT(APICall_glVertexWeighthNV);
    CHECKCALL(glVertexWeighthNV);
    DO_REAL_CALL(glVertexWeighthNV(_p0));
    _W.writeAPICall(APICall_glVertexWeighthNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexWeighthNV);
}

void GLAPIENTRY glVertexWeighthvNV(const GLhalfNV *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glVertexWeighthvNV);
    _COUNT(APICall_glVertexWeighthvNV);
    CHECKCALL(glVertexWeighthvNV);
    DO_REAL_CALL(glVertexWeighthvNV(_p0));
    _W.writeAPICall(APICall_glVertexWeighthvNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glVertexWeighthvNV);
}

void GLAPIENTRY glViewport(GLint x, GLint y, GLsizei width, GLsizei height)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glViewport);
    _COUNT(APICall_glViewport);
    CHECKCALL(glViewport);
    DO_REAL_CALL(glViewport(x,y,width,height));
    _W.writeAPICall(APICall_glViewport);
    _W.writeMark("(");
    _W.write(x);
    _W.writeMark(",");
    _W.write(y);
    _W.writeMark(",");
    _W.write(width);
    _W.writeMark(",");
    _W.write(height);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glViewport);
}

void GLAPIENTRY glWeightPointerARB(GLint _p0, GLenum _p1, GLsizei _p2, const GLvoid *_p3)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWeightPointerARB);
    _COUNT(APICall_glWeightPointerARB);
    CHECKCALL(glWeightPointerARB);
    DO_REAL_CALL(glWeightPointerARB(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_glWeightPointerARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeEnum(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWeightPointerARB);
}

void GLAPIENTRY glWeightbvARB(GLint _p0, const GLbyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWeightbvARB);
    _COUNT(APICall_glWeightbvARB);
    CHECKCALL(glWeightbvARB);
    DO_REAL_CALL(glWeightbvARB(_p0,_p1));
    _W.writeAPICall(APICall_glWeightbvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWeightbvARB);
}

void GLAPIENTRY glWeightdvARB(GLint _p0, const GLdouble *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWeightdvARB);
    _COUNT(APICall_glWeightdvARB);
    CHECKCALL(glWeightdvARB);
    DO_REAL_CALL(glWeightdvARB(_p0,_p1));
    _W.writeAPICall(APICall_glWeightdvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWeightdvARB);
}

void GLAPIENTRY glWeightfvARB(GLint _p0, const GLfloat *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWeightfvARB);
    _COUNT(APICall_glWeightfvARB);
    CHECKCALL(glWeightfvARB);
    DO_REAL_CALL(glWeightfvARB(_p0,_p1));
    _W.writeAPICall(APICall_glWeightfvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWeightfvARB);
}

void GLAPIENTRY glWeightivARB(GLint _p0, const GLint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWeightivARB);
    _COUNT(APICall_glWeightivARB);
    CHECKCALL(glWeightivARB);
    DO_REAL_CALL(glWeightivARB(_p0,_p1));
    _W.writeAPICall(APICall_glWeightivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWeightivARB);
}

void GLAPIENTRY glWeightsvARB(GLint _p0, const GLshort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWeightsvARB);
    _COUNT(APICall_glWeightsvARB);
    CHECKCALL(glWeightsvARB);
    DO_REAL_CALL(glWeightsvARB(_p0,_p1));
    _W.writeAPICall(APICall_glWeightsvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWeightsvARB);
}

void GLAPIENTRY glWeightubvARB(GLint _p0, const GLubyte *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWeightubvARB);
    _COUNT(APICall_glWeightubvARB);
    CHECKCALL(glWeightubvARB);
    DO_REAL_CALL(glWeightubvARB(_p0,_p1));
    _W.writeAPICall(APICall_glWeightubvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWeightubvARB);
}

void GLAPIENTRY glWeightuivARB(GLint _p0, const GLuint *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWeightuivARB);
    _COUNT(APICall_glWeightuivARB);
    CHECKCALL(glWeightuivARB);
    DO_REAL_CALL(glWeightuivARB(_p0,_p1));
    _W.writeAPICall(APICall_glWeightuivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWeightuivARB);
}

void GLAPIENTRY glWeightusvARB(GLint _p0, const GLushort *_p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWeightusvARB);
    _COUNT(APICall_glWeightusvARB);
    CHECKCALL(glWeightusvARB);
    DO_REAL_CALL(glWeightusvARB(_p0,_p1));
    _W.writeAPICall(APICall_glWeightusvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWeightusvARB);
}

void GLAPIENTRY glWindowPos2d(GLdouble _p0, GLdouble _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2d);
    _COUNT(APICall_glWindowPos2d);
    CHECKCALL(glWindowPos2d);
    DO_REAL_CALL(glWindowPos2d(_p0,_p1));
    _W.writeAPICall(APICall_glWindowPos2d);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2d);
}

void GLAPIENTRY glWindowPos2dARB(GLdouble _p0, GLdouble _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2dARB);
    _COUNT(APICall_glWindowPos2dARB);
    CHECKCALL(glWindowPos2dARB);
    DO_REAL_CALL(glWindowPos2dARB(_p0,_p1));
    _W.writeAPICall(APICall_glWindowPos2dARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2dARB);
}

void GLAPIENTRY glWindowPos2dv(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2dv);
    _COUNT(APICall_glWindowPos2dv);
    CHECKCALL(glWindowPos2dv);
    DO_REAL_CALL(glWindowPos2dv(_p0));
    _W.writeAPICall(APICall_glWindowPos2dv);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2dv);
}

void GLAPIENTRY glWindowPos2dvARB(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2dvARB);
    _COUNT(APICall_glWindowPos2dvARB);
    CHECKCALL(glWindowPos2dvARB);
    DO_REAL_CALL(glWindowPos2dvARB(_p0));
    _W.writeAPICall(APICall_glWindowPos2dvARB);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2dvARB);
}

void GLAPIENTRY glWindowPos2f(GLfloat _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2f);
    _COUNT(APICall_glWindowPos2f);
    CHECKCALL(glWindowPos2f);
    DO_REAL_CALL(glWindowPos2f(_p0,_p1));
    _W.writeAPICall(APICall_glWindowPos2f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2f);
}

void GLAPIENTRY glWindowPos2fARB(GLfloat _p0, GLfloat _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2fARB);
    _COUNT(APICall_glWindowPos2fARB);
    CHECKCALL(glWindowPos2fARB);
    DO_REAL_CALL(glWindowPos2fARB(_p0,_p1));
    _W.writeAPICall(APICall_glWindowPos2fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2fARB);
}

void GLAPIENTRY glWindowPos2fv(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2fv);
    _COUNT(APICall_glWindowPos2fv);
    CHECKCALL(glWindowPos2fv);
    DO_REAL_CALL(glWindowPos2fv(_p0));
    _W.writeAPICall(APICall_glWindowPos2fv);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2fv);
}

void GLAPIENTRY glWindowPos2fvARB(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2fvARB);
    _COUNT(APICall_glWindowPos2fvARB);
    CHECKCALL(glWindowPos2fvARB);
    DO_REAL_CALL(glWindowPos2fvARB(_p0));
    _W.writeAPICall(APICall_glWindowPos2fvARB);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2fvARB);
}

void GLAPIENTRY glWindowPos2i(GLint _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2i);
    _COUNT(APICall_glWindowPos2i);
    CHECKCALL(glWindowPos2i);
    DO_REAL_CALL(glWindowPos2i(_p0,_p1));
    _W.writeAPICall(APICall_glWindowPos2i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2i);
}

void GLAPIENTRY glWindowPos2iARB(GLint _p0, GLint _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2iARB);
    _COUNT(APICall_glWindowPos2iARB);
    CHECKCALL(glWindowPos2iARB);
    DO_REAL_CALL(glWindowPos2iARB(_p0,_p1));
    _W.writeAPICall(APICall_glWindowPos2iARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2iARB);
}

void GLAPIENTRY glWindowPos2iv(const GLint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2iv);
    _COUNT(APICall_glWindowPos2iv);
    CHECKCALL(glWindowPos2iv);
    DO_REAL_CALL(glWindowPos2iv(_p0));
    _W.writeAPICall(APICall_glWindowPos2iv);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2iv);
}

void GLAPIENTRY glWindowPos2ivARB(const GLint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2ivARB);
    _COUNT(APICall_glWindowPos2ivARB);
    CHECKCALL(glWindowPos2ivARB);
    DO_REAL_CALL(glWindowPos2ivARB(_p0));
    _W.writeAPICall(APICall_glWindowPos2ivARB);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2ivARB);
}

void GLAPIENTRY glWindowPos2s(GLshort _p0, GLshort _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2s);
    _COUNT(APICall_glWindowPos2s);
    CHECKCALL(glWindowPos2s);
    DO_REAL_CALL(glWindowPos2s(_p0,_p1));
    _W.writeAPICall(APICall_glWindowPos2s);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2s);
}

void GLAPIENTRY glWindowPos2sARB(GLshort _p0, GLshort _p1)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2sARB);
    _COUNT(APICall_glWindowPos2sARB);
    CHECKCALL(glWindowPos2sARB);
    DO_REAL_CALL(glWindowPos2sARB(_p0,_p1));
    _W.writeAPICall(APICall_glWindowPos2sARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2sARB);
}

void GLAPIENTRY glWindowPos2sv(const GLshort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2sv);
    _COUNT(APICall_glWindowPos2sv);
    CHECKCALL(glWindowPos2sv);
    DO_REAL_CALL(glWindowPos2sv(_p0));
    _W.writeAPICall(APICall_glWindowPos2sv);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2sv);
}

void GLAPIENTRY glWindowPos2svARB(const GLshort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos2svARB);
    _COUNT(APICall_glWindowPos2svARB);
    CHECKCALL(glWindowPos2svARB);
    DO_REAL_CALL(glWindowPos2svARB(_p0));
    _W.writeAPICall(APICall_glWindowPos2svARB);
    _W.writeMark("(");
    _W.write(_p0, 2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos2svARB);
}

void GLAPIENTRY glWindowPos3d(GLdouble _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3d);
    _COUNT(APICall_glWindowPos3d);
    CHECKCALL(glWindowPos3d);
    DO_REAL_CALL(glWindowPos3d(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glWindowPos3d);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3d);
}

void GLAPIENTRY glWindowPos3dARB(GLdouble _p0, GLdouble _p1, GLdouble _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3dARB);
    _COUNT(APICall_glWindowPos3dARB);
    CHECKCALL(glWindowPos3dARB);
    DO_REAL_CALL(glWindowPos3dARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glWindowPos3dARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3dARB);
}

void GLAPIENTRY glWindowPos3dv(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3dv);
    _COUNT(APICall_glWindowPos3dv);
    CHECKCALL(glWindowPos3dv);
    DO_REAL_CALL(glWindowPos3dv(_p0));
    _W.writeAPICall(APICall_glWindowPos3dv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3dv);
}

void GLAPIENTRY glWindowPos3dvARB(const GLdouble *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3dvARB);
    _COUNT(APICall_glWindowPos3dvARB);
    CHECKCALL(glWindowPos3dvARB);
    DO_REAL_CALL(glWindowPos3dvARB(_p0));
    _W.writeAPICall(APICall_glWindowPos3dvARB);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3dvARB);
}

void GLAPIENTRY glWindowPos3f(GLfloat _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3f);
    _COUNT(APICall_glWindowPos3f);
    CHECKCALL(glWindowPos3f);
    DO_REAL_CALL(glWindowPos3f(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glWindowPos3f);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3f);
}

void GLAPIENTRY glWindowPos3fARB(GLfloat _p0, GLfloat _p1, GLfloat _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3fARB);
    _COUNT(APICall_glWindowPos3fARB);
    CHECKCALL(glWindowPos3fARB);
    DO_REAL_CALL(glWindowPos3fARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glWindowPos3fARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3fARB);
}

void GLAPIENTRY glWindowPos3fv(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3fv);
    _COUNT(APICall_glWindowPos3fv);
    CHECKCALL(glWindowPos3fv);
    DO_REAL_CALL(glWindowPos3fv(_p0));
    _W.writeAPICall(APICall_glWindowPos3fv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3fv);
}

void GLAPIENTRY glWindowPos3fvARB(const GLfloat *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3fvARB);
    _COUNT(APICall_glWindowPos3fvARB);
    CHECKCALL(glWindowPos3fvARB);
    DO_REAL_CALL(glWindowPos3fvARB(_p0));
    _W.writeAPICall(APICall_glWindowPos3fvARB);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3fvARB);
}

void GLAPIENTRY glWindowPos3i(GLint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3i);
    _COUNT(APICall_glWindowPos3i);
    CHECKCALL(glWindowPos3i);
    DO_REAL_CALL(glWindowPos3i(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glWindowPos3i);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3i);
}

void GLAPIENTRY glWindowPos3iARB(GLint _p0, GLint _p1, GLint _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3iARB);
    _COUNT(APICall_glWindowPos3iARB);
    CHECKCALL(glWindowPos3iARB);
    DO_REAL_CALL(glWindowPos3iARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glWindowPos3iARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3iARB);
}

void GLAPIENTRY glWindowPos3iv(const GLint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3iv);
    _COUNT(APICall_glWindowPos3iv);
    CHECKCALL(glWindowPos3iv);
    DO_REAL_CALL(glWindowPos3iv(_p0));
    _W.writeAPICall(APICall_glWindowPos3iv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3iv);
}

void GLAPIENTRY glWindowPos3ivARB(const GLint *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3ivARB);
    _COUNT(APICall_glWindowPos3ivARB);
    CHECKCALL(glWindowPos3ivARB);
    DO_REAL_CALL(glWindowPos3ivARB(_p0));
    _W.writeAPICall(APICall_glWindowPos3ivARB);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3ivARB);
}

void GLAPIENTRY glWindowPos3s(GLshort _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3s);
    _COUNT(APICall_glWindowPos3s);
    CHECKCALL(glWindowPos3s);
    DO_REAL_CALL(glWindowPos3s(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glWindowPos3s);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3s);
}

void GLAPIENTRY glWindowPos3sARB(GLshort _p0, GLshort _p1, GLshort _p2)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3sARB);
    _COUNT(APICall_glWindowPos3sARB);
    CHECKCALL(glWindowPos3sARB);
    DO_REAL_CALL(glWindowPos3sARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_glWindowPos3sARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3sARB);
}

void GLAPIENTRY glWindowPos3sv(const GLshort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3sv);
    _COUNT(APICall_glWindowPos3sv);
    CHECKCALL(glWindowPos3sv);
    DO_REAL_CALL(glWindowPos3sv(_p0));
    _W.writeAPICall(APICall_glWindowPos3sv);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3sv);
}

void GLAPIENTRY glWindowPos3svARB(const GLshort *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWindowPos3svARB);
    _COUNT(APICall_glWindowPos3svARB);
    CHECKCALL(glWindowPos3svARB);
    DO_REAL_CALL(glWindowPos3svARB(_p0));
    _W.writeAPICall(APICall_glWindowPos3svARB);
    _W.writeMark("(");
    _W.write(_p0, 3);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWindowPos3svARB);
}

void GLAPIENTRY glWriteMaskEXT(GLuint _p0, GLuint _p1, GLenum _p2, GLenum _p3, GLenum _p4, GLenum _p5)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_glWriteMaskEXT);
    _COUNT(APICall_glWriteMaskEXT);
    CHECKCALL(glWriteMaskEXT);
    DO_REAL_CALL(glWriteMaskEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_glWriteMaskEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeEnum(_p2);
    _W.writeMark(",");
    _W.writeEnum(_p3);
    _W.writeMark(",");
    _W.writeEnum(_p4);
    _W.writeMark(",");
    _W.writeEnum(_p5);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_glWriteMaskEXT);
}

void * GLAPIENTRY wglAllocateMemoryNV(GLsizei _p0, GLfloat _p1, GLfloat _p2, GLfloat _p3)
{
    void *_result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglAllocateMemoryNV);
    _COUNT(APICall_wglAllocateMemoryNV);
    CHECKCALL(wglAllocateMemoryNV);
    _result = DO_REAL_CALL(wglAllocateMemoryNV(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_wglAllocateMemoryNV);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglAllocateMemoryNV);
    return _result;
}

BOOL GLAPIENTRY wglAssociateImageBufferEventsI3D(HDC _p0, const HANDLE *_p1, const LPVOID *_p2, const DWORD *_p3, UINT _p4)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglAssociateImageBufferEventsI3D);
    _COUNT(APICall_wglAssociateImageBufferEventsI3D);
    CHECKCALL(wglAssociateImageBufferEventsI3D);
    _result = DO_REAL_CALL(wglAssociateImageBufferEventsI3D(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglAssociateImageBufferEventsI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglAssociateImageBufferEventsI3D);
    return _result;
}

BOOL GLAPIENTRY wglBeginFrameTrackingI3D()
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglBeginFrameTrackingI3D);
    _COUNT(APICall_wglBeginFrameTrackingI3D);
    CHECKCALL(wglBeginFrameTrackingI3D);
    _result = DO_REAL_CALL(wglBeginFrameTrackingI3D());
    _W.writeAPICall(APICall_wglBeginFrameTrackingI3D);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglBeginFrameTrackingI3D);
    return _result;
}

GLboolean GLAPIENTRY wglBindDisplayColorTableEXT(GLushort _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglBindDisplayColorTableEXT);
    _COUNT(APICall_wglBindDisplayColorTableEXT);
    CHECKCALL(wglBindDisplayColorTableEXT);
    _result = DO_REAL_CALL(wglBindDisplayColorTableEXT(_p0));
    _W.writeAPICall(APICall_wglBindDisplayColorTableEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglBindDisplayColorTableEXT);
    return _result;
}

BOOL GLAPIENTRY wglBindTexImageARB(HPBUFFERARB _p0, int _p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglBindTexImageARB);
    _COUNT(APICall_wglBindTexImageARB);
    CHECKCALL(wglBindTexImageARB);
    _result = DO_REAL_CALL(wglBindTexImageARB(_p0,_p1));
    _W.writeAPICall(APICall_wglBindTexImageARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglBindTexImageARB);
    return _result;
}

int GLAPIENTRY wglChoosePixelFormat(HDC _p0, const PIXELFORMATDESCRIPTOR *_p1)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglChoosePixelFormat);
    _COUNT(APICall_wglChoosePixelFormat);
    CHECKCALL(wglChoosePixelFormat);
    _result = DO_REAL_CALL(wglChoosePixelFormat(_p0,_p1));
    _W.writeAPICall(APICall_wglChoosePixelFormat);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    wglChoosePixelFormat_SPECIFIC(_p0,_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglChoosePixelFormat);
    return _result;
}

BOOL GLAPIENTRY wglChoosePixelFormatARB(HDC _p0, const int *_p1, const FLOAT *_p2, UINT _p3, int *_p4, UINT *_p5)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglChoosePixelFormatARB);
    _COUNT(APICall_wglChoosePixelFormatARB);
    CHECKCALL(wglChoosePixelFormatARB);
    _result = DO_REAL_CALL(wglChoosePixelFormatARB(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_wglChoosePixelFormatARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglChoosePixelFormatARB);
    return _result;
}

BOOL GLAPIENTRY wglChoosePixelFormatEXT(HDC _p0, const int *_p1, const FLOAT *_p2, UINT _p3, int *_p4, UINT *_p5)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglChoosePixelFormatEXT);
    _COUNT(APICall_wglChoosePixelFormatEXT);
    CHECKCALL(wglChoosePixelFormatEXT);
    _result = DO_REAL_CALL(wglChoosePixelFormatEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_wglChoosePixelFormatEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglChoosePixelFormatEXT);
    return _result;
}

int GLAPIENTRY wglCopyContext(HGLRC _p0, HGLRC _p1, unsigned int _p2)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglCopyContext);
    _COUNT(APICall_wglCopyContext);
    CHECKCALL(wglCopyContext);
    _result = DO_REAL_CALL(wglCopyContext(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglCopyContext);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglCopyContext);
    return _result;
}

HANDLE GLAPIENTRY wglCreateBufferRegionARB(HDC _p0, int _p1, UINT _p2)
{
    HANDLE _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglCreateBufferRegionARB);
    _COUNT(APICall_wglCreateBufferRegionARB);
    CHECKCALL(wglCreateBufferRegionARB);
    _result = DO_REAL_CALL(wglCreateBufferRegionARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglCreateBufferRegionARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglCreateBufferRegionARB);
    return _result;
}

HGLRC GLAPIENTRY wglCreateContext(HDC _p0)
{
    HGLRC _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglCreateContext);
    _COUNT(APICall_wglCreateContext);
    CHECKCALL(wglCreateContext);
    _result = DO_REAL_CALL(wglCreateContext(_p0));
    _W.writeAPICall(APICall_wglCreateContext);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglCreateContext);
    return _result;
}

GLboolean GLAPIENTRY wglCreateDisplayColorTableEXT(GLushort _p0)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglCreateDisplayColorTableEXT);
    _COUNT(APICall_wglCreateDisplayColorTableEXT);
    CHECKCALL(wglCreateDisplayColorTableEXT);
    _result = DO_REAL_CALL(wglCreateDisplayColorTableEXT(_p0));
    _W.writeAPICall(APICall_wglCreateDisplayColorTableEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglCreateDisplayColorTableEXT);
    return _result;
}

LPVOID GLAPIENTRY wglCreateImageBufferI3D(HDC _p0, DWORD _p1, UINT _p2)
{
    LPVOID _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglCreateImageBufferI3D);
    _COUNT(APICall_wglCreateImageBufferI3D);
    CHECKCALL(wglCreateImageBufferI3D);
    _result = DO_REAL_CALL(wglCreateImageBufferI3D(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglCreateImageBufferI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglCreateImageBufferI3D);
    return _result;
}

HGLRC GLAPIENTRY wglCreateLayerContext(HDC _p0, int _p1)
{
    HGLRC _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglCreateLayerContext);
    _COUNT(APICall_wglCreateLayerContext);
    CHECKCALL(wglCreateLayerContext);
    _result = DO_REAL_CALL(wglCreateLayerContext(_p0,_p1));
    _W.writeAPICall(APICall_wglCreateLayerContext);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglCreateLayerContext);
    return _result;
}

HPBUFFERARB GLAPIENTRY wglCreatePbufferARB(HDC _p0, int _p1, int _p2, int _p3, const int *_p4)
{
    HPBUFFERARB _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglCreatePbufferARB);
    _COUNT(APICall_wglCreatePbufferARB);
    CHECKCALL(wglCreatePbufferARB);
    _result = DO_REAL_CALL(wglCreatePbufferARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglCreatePbufferARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglCreatePbufferARB);
    return _result;
}

HPBUFFEREXT GLAPIENTRY wglCreatePbufferEXT(HDC _p0, int _p1, int _p2, int _p3, const int *_p4)
{
    HPBUFFEREXT _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglCreatePbufferEXT);
    _COUNT(APICall_wglCreatePbufferEXT);
    CHECKCALL(wglCreatePbufferEXT);
    _result = DO_REAL_CALL(wglCreatePbufferEXT(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglCreatePbufferEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglCreatePbufferEXT);
    return _result;
}

void GLAPIENTRY wglDeleteBufferRegionARB(HANDLE _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDeleteBufferRegionARB);
    _COUNT(APICall_wglDeleteBufferRegionARB);
    CHECKCALL(wglDeleteBufferRegionARB);
    DO_REAL_CALL(wglDeleteBufferRegionARB(_p0));
    _W.writeAPICall(APICall_wglDeleteBufferRegionARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDeleteBufferRegionARB);
}

int GLAPIENTRY wglDeleteContext(HGLRC _p0)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDeleteContext);
    _COUNT(APICall_wglDeleteContext);
    CHECKCALL(wglDeleteContext);
    _result = DO_REAL_CALL(wglDeleteContext(_p0));
    _W.writeAPICall(APICall_wglDeleteContext);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDeleteContext);
    return _result;
}

int GLAPIENTRY wglDescribeLayerPlane(HDC _p0, int _p1, int _p2, unsigned int _p3, LPLAYERPLANEDESCRIPTOR _p4)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDescribeLayerPlane);
    _COUNT(APICall_wglDescribeLayerPlane);
    CHECKCALL(wglDescribeLayerPlane);
    _result = DO_REAL_CALL(wglDescribeLayerPlane(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglDescribeLayerPlane);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDescribeLayerPlane);
    return _result;
}

int GLAPIENTRY wglDescribePixelFormat(HDC _p0, int _p1, unsigned int _p2, LPPIXELFORMATDESCRIPTOR _p3)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDescribePixelFormat);
    _COUNT(APICall_wglDescribePixelFormat);
    CHECKCALL(wglDescribePixelFormat);
    _result = DO_REAL_CALL(wglDescribePixelFormat(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_wglDescribePixelFormat);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDescribePixelFormat);
    return _result;
}

void GLAPIENTRY wglDestroyDisplayColorTableEXT(GLushort _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDestroyDisplayColorTableEXT);
    _COUNT(APICall_wglDestroyDisplayColorTableEXT);
    CHECKCALL(wglDestroyDisplayColorTableEXT);
    DO_REAL_CALL(wglDestroyDisplayColorTableEXT(_p0));
    _W.writeAPICall(APICall_wglDestroyDisplayColorTableEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDestroyDisplayColorTableEXT);
}

BOOL GLAPIENTRY wglDestroyImageBufferI3D(HDC _p0, LPVOID _p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDestroyImageBufferI3D);
    _COUNT(APICall_wglDestroyImageBufferI3D);
    CHECKCALL(wglDestroyImageBufferI3D);
    _result = DO_REAL_CALL(wglDestroyImageBufferI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglDestroyImageBufferI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDestroyImageBufferI3D);
    return _result;
}

BOOL GLAPIENTRY wglDestroyPbufferARB(HPBUFFERARB _p0)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDestroyPbufferARB);
    _COUNT(APICall_wglDestroyPbufferARB);
    CHECKCALL(wglDestroyPbufferARB);
    _result = DO_REAL_CALL(wglDestroyPbufferARB(_p0));
    _W.writeAPICall(APICall_wglDestroyPbufferARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDestroyPbufferARB);
    return _result;
}

BOOL GLAPIENTRY wglDestroyPbufferEXT(HPBUFFEREXT _p0)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDestroyPbufferEXT);
    _COUNT(APICall_wglDestroyPbufferEXT);
    CHECKCALL(wglDestroyPbufferEXT);
    _result = DO_REAL_CALL(wglDestroyPbufferEXT(_p0));
    _W.writeAPICall(APICall_wglDestroyPbufferEXT);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDestroyPbufferEXT);
    return _result;
}

BOOL GLAPIENTRY wglDisableFrameLockI3D()
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDisableFrameLockI3D);
    _COUNT(APICall_wglDisableFrameLockI3D);
    CHECKCALL(wglDisableFrameLockI3D);
    _result = DO_REAL_CALL(wglDisableFrameLockI3D());
    _W.writeAPICall(APICall_wglDisableFrameLockI3D);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDisableFrameLockI3D);
    return _result;
}

BOOL GLAPIENTRY wglDisableGenlockI3D(HDC _p0)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglDisableGenlockI3D);
    _COUNT(APICall_wglDisableGenlockI3D);
    CHECKCALL(wglDisableGenlockI3D);
    _result = DO_REAL_CALL(wglDisableGenlockI3D(_p0));
    _W.writeAPICall(APICall_wglDisableGenlockI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglDisableGenlockI3D);
    return _result;
}

BOOL GLAPIENTRY wglEnableFrameLockI3D()
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglEnableFrameLockI3D);
    _COUNT(APICall_wglEnableFrameLockI3D);
    CHECKCALL(wglEnableFrameLockI3D);
    _result = DO_REAL_CALL(wglEnableFrameLockI3D());
    _W.writeAPICall(APICall_wglEnableFrameLockI3D);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglEnableFrameLockI3D);
    return _result;
}

BOOL GLAPIENTRY wglEnableGenlockI3D(HDC _p0)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglEnableGenlockI3D);
    _COUNT(APICall_wglEnableGenlockI3D);
    CHECKCALL(wglEnableGenlockI3D);
    _result = DO_REAL_CALL(wglEnableGenlockI3D(_p0));
    _W.writeAPICall(APICall_wglEnableGenlockI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglEnableGenlockI3D);
    return _result;
}

BOOL GLAPIENTRY wglEndFrameTrackingI3D()
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglEndFrameTrackingI3D);
    _COUNT(APICall_wglEndFrameTrackingI3D);
    CHECKCALL(wglEndFrameTrackingI3D);
    _result = DO_REAL_CALL(wglEndFrameTrackingI3D());
    _W.writeAPICall(APICall_wglEndFrameTrackingI3D);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglEndFrameTrackingI3D);
    return _result;
}

void GLAPIENTRY wglFreeMemoryNV(void *_p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglFreeMemoryNV);
    _COUNT(APICall_wglFreeMemoryNV);
    CHECKCALL(wglFreeMemoryNV);
    DO_REAL_CALL(wglFreeMemoryNV(_p0));
    _W.writeAPICall(APICall_wglFreeMemoryNV);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglFreeMemoryNV);
}

BOOL GLAPIENTRY wglGenlockSampleRateI3D(HDC _p0, UINT _p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGenlockSampleRateI3D);
    _COUNT(APICall_wglGenlockSampleRateI3D);
    CHECKCALL(wglGenlockSampleRateI3D);
    _result = DO_REAL_CALL(wglGenlockSampleRateI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglGenlockSampleRateI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGenlockSampleRateI3D);
    return _result;
}

BOOL GLAPIENTRY wglGenlockSourceDelayI3D(HDC _p0, UINT _p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGenlockSourceDelayI3D);
    _COUNT(APICall_wglGenlockSourceDelayI3D);
    CHECKCALL(wglGenlockSourceDelayI3D);
    _result = DO_REAL_CALL(wglGenlockSourceDelayI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglGenlockSourceDelayI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGenlockSourceDelayI3D);
    return _result;
}

BOOL GLAPIENTRY wglGenlockSourceEdgeI3D(HDC _p0, UINT _p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGenlockSourceEdgeI3D);
    _COUNT(APICall_wglGenlockSourceEdgeI3D);
    CHECKCALL(wglGenlockSourceEdgeI3D);
    _result = DO_REAL_CALL(wglGenlockSourceEdgeI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglGenlockSourceEdgeI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGenlockSourceEdgeI3D);
    return _result;
}

BOOL GLAPIENTRY wglGenlockSourceI3D(HDC _p0, UINT _p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGenlockSourceI3D);
    _COUNT(APICall_wglGenlockSourceI3D);
    CHECKCALL(wglGenlockSourceI3D);
    _result = DO_REAL_CALL(wglGenlockSourceI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglGenlockSourceI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGenlockSourceI3D);
    return _result;
}

HGLRC GLAPIENTRY wglGetCurrentContext()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetCurrentContext);
    _COUNT(APICall_wglGetCurrentContext);
    // Calling SPECIFIC function instead orginal (assumed that SPECIFIC will call original)
    return wglGetCurrentContext_SPECIFIC();
    _W.writeAPICall(APICall_wglGetCurrentContext);
    _W.writeMark("(");
}

HDC GLAPIENTRY wglGetCurrentDC()
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetCurrentDC);
    _COUNT(APICall_wglGetCurrentDC);
    // Calling SPECIFIC function instead orginal (assumed that SPECIFIC will call original)
    return wglGetCurrentDC_SPECIFIC();
    _W.writeAPICall(APICall_wglGetCurrentDC);
    _W.writeMark("(");
}

HDC GLAPIENTRY wglGetCurrentReadDCARB()
{
    HDC _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetCurrentReadDCARB);
    _COUNT(APICall_wglGetCurrentReadDCARB);
    CHECKCALL(wglGetCurrentReadDCARB);
    _result = DO_REAL_CALL(wglGetCurrentReadDCARB());
    _W.writeAPICall(APICall_wglGetCurrentReadDCARB);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetCurrentReadDCARB);
    return _result;
}

HDC GLAPIENTRY wglGetCurrentReadDCEXT()
{
    HDC _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetCurrentReadDCEXT);
    _COUNT(APICall_wglGetCurrentReadDCEXT);
    CHECKCALL(wglGetCurrentReadDCEXT);
    _result = DO_REAL_CALL(wglGetCurrentReadDCEXT());
    _W.writeAPICall(APICall_wglGetCurrentReadDCEXT);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetCurrentReadDCEXT);
    return _result;
}

BOOL GLAPIENTRY wglGetDigitalVideoParametersI3D(HDC _p0, int _p1, int *_p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetDigitalVideoParametersI3D);
    _COUNT(APICall_wglGetDigitalVideoParametersI3D);
    CHECKCALL(wglGetDigitalVideoParametersI3D);
    _result = DO_REAL_CALL(wglGetDigitalVideoParametersI3D(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglGetDigitalVideoParametersI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetDigitalVideoParametersI3D);
    return _result;
}

const char * GLAPIENTRY wglGetExtensionsStringARB(HDC _p0)
{
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetExtensionsStringARB);
    _COUNT(APICall_wglGetExtensionsStringARB);
    // Calling SPECIFIC function instead orginal (assumed that SPECIFIC will call original)
    return wglGetExtensionsStringARB_SPECIFIC(_p0);
    _W.writeAPICall(APICall_wglGetExtensionsStringARB);
    _W.writeMark("(");
}

const char * GLAPIENTRY wglGetExtensionsStringEXT()
{
    const char *_result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetExtensionsStringEXT);
    _COUNT(APICall_wglGetExtensionsStringEXT);
    CHECKCALL(wglGetExtensionsStringEXT);
    _result = DO_REAL_CALL(wglGetExtensionsStringEXT());
    _W.writeAPICall(APICall_wglGetExtensionsStringEXT);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetExtensionsStringEXT);
    return _result;
}

BOOL GLAPIENTRY wglGetFrameUsageI3D(float *_p0)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetFrameUsageI3D);
    _COUNT(APICall_wglGetFrameUsageI3D);
    CHECKCALL(wglGetFrameUsageI3D);
    _result = DO_REAL_CALL(wglGetFrameUsageI3D(_p0));
    _W.writeAPICall(APICall_wglGetFrameUsageI3D);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetFrameUsageI3D);
    return _result;
}

BOOL GLAPIENTRY wglGetGammaTableI3D(HDC _p0, int _p1, USHORT *_p2, USHORT *_p3, USHORT *_p4)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetGammaTableI3D);
    _COUNT(APICall_wglGetGammaTableI3D);
    CHECKCALL(wglGetGammaTableI3D);
    _result = DO_REAL_CALL(wglGetGammaTableI3D(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglGetGammaTableI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetGammaTableI3D);
    return _result;
}

BOOL GLAPIENTRY wglGetGammaTableParametersI3D(HDC _p0, int _p1, int *_p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetGammaTableParametersI3D);
    _COUNT(APICall_wglGetGammaTableParametersI3D);
    CHECKCALL(wglGetGammaTableParametersI3D);
    _result = DO_REAL_CALL(wglGetGammaTableParametersI3D(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglGetGammaTableParametersI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetGammaTableParametersI3D);
    return _result;
}

BOOL GLAPIENTRY wglGetGenlockSampleRateI3D(HDC _p0, UINT *_p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetGenlockSampleRateI3D);
    _COUNT(APICall_wglGetGenlockSampleRateI3D);
    CHECKCALL(wglGetGenlockSampleRateI3D);
    _result = DO_REAL_CALL(wglGetGenlockSampleRateI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglGetGenlockSampleRateI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetGenlockSampleRateI3D);
    return _result;
}

BOOL GLAPIENTRY wglGetGenlockSourceDelayI3D(HDC _p0, UINT *_p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetGenlockSourceDelayI3D);
    _COUNT(APICall_wglGetGenlockSourceDelayI3D);
    CHECKCALL(wglGetGenlockSourceDelayI3D);
    _result = DO_REAL_CALL(wglGetGenlockSourceDelayI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglGetGenlockSourceDelayI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetGenlockSourceDelayI3D);
    return _result;
}

BOOL GLAPIENTRY wglGetGenlockSourceEdgeI3D(HDC _p0, UINT *_p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetGenlockSourceEdgeI3D);
    _COUNT(APICall_wglGetGenlockSourceEdgeI3D);
    CHECKCALL(wglGetGenlockSourceEdgeI3D);
    _result = DO_REAL_CALL(wglGetGenlockSourceEdgeI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglGetGenlockSourceEdgeI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetGenlockSourceEdgeI3D);
    return _result;
}

BOOL GLAPIENTRY wglGetGenlockSourceI3D(HDC _p0, UINT *_p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetGenlockSourceI3D);
    _COUNT(APICall_wglGetGenlockSourceI3D);
    CHECKCALL(wglGetGenlockSourceI3D);
    _result = DO_REAL_CALL(wglGetGenlockSourceI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglGetGenlockSourceI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetGenlockSourceI3D);
    return _result;
}

int GLAPIENTRY wglGetLayerPaletteEntries(HDC _p0, int _p1, int _p2, int _p3, COLORREF *_p4)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetLayerPaletteEntries);
    _COUNT(APICall_wglGetLayerPaletteEntries);
    CHECKCALL(wglGetLayerPaletteEntries);
    _result = DO_REAL_CALL(wglGetLayerPaletteEntries(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglGetLayerPaletteEntries);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetLayerPaletteEntries);
    return _result;
}

BOOL GLAPIENTRY wglGetMscRateOML(HDC _p0, INT32 *_p1, INT32 *_p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetMscRateOML);
    _COUNT(APICall_wglGetMscRateOML);
    CHECKCALL(wglGetMscRateOML);
    _result = DO_REAL_CALL(wglGetMscRateOML(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglGetMscRateOML);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetMscRateOML);
    return _result;
}

HDC GLAPIENTRY wglGetPbufferDCARB(HPBUFFERARB _p0)
{
    HDC _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetPbufferDCARB);
    _COUNT(APICall_wglGetPbufferDCARB);
    CHECKCALL(wglGetPbufferDCARB);
    _result = DO_REAL_CALL(wglGetPbufferDCARB(_p0));
    _W.writeAPICall(APICall_wglGetPbufferDCARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetPbufferDCARB);
    return _result;
}

HDC GLAPIENTRY wglGetPbufferDCEXT(HPBUFFEREXT _p0)
{
    HDC _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetPbufferDCEXT);
    _COUNT(APICall_wglGetPbufferDCEXT);
    CHECKCALL(wglGetPbufferDCEXT);
    _result = DO_REAL_CALL(wglGetPbufferDCEXT(_p0));
    _W.writeAPICall(APICall_wglGetPbufferDCEXT);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetPbufferDCEXT);
    return _result;
}

int GLAPIENTRY wglGetPixelFormat(HDC hdc)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetPixelFormat);
    _COUNT(APICall_wglGetPixelFormat);
    CHECKCALL(wglGetPixelFormat);
    _result = DO_REAL_CALL(wglGetPixelFormat(hdc));
    _W.writeAPICall(APICall_wglGetPixelFormat);
    _W.writeMark("(");
    _W.write(hdc);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetPixelFormat);
    return _result;
}

BOOL GLAPIENTRY wglGetPixelFormatAttribfvARB(HDC _p0, int _p1, int _p2, UINT _p3, const int *_p4, FLOAT *_p5)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetPixelFormatAttribfvARB);
    _COUNT(APICall_wglGetPixelFormatAttribfvARB);
    CHECKCALL(wglGetPixelFormatAttribfvARB);
    _result = DO_REAL_CALL(wglGetPixelFormatAttribfvARB(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_wglGetPixelFormatAttribfvARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetPixelFormatAttribfvARB);
    return _result;
}

BOOL GLAPIENTRY wglGetPixelFormatAttribfvEXT(HDC _p0, int _p1, int _p2, UINT _p3, int *_p4, FLOAT *_p5)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetPixelFormatAttribfvEXT);
    _COUNT(APICall_wglGetPixelFormatAttribfvEXT);
    CHECKCALL(wglGetPixelFormatAttribfvEXT);
    _result = DO_REAL_CALL(wglGetPixelFormatAttribfvEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_wglGetPixelFormatAttribfvEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetPixelFormatAttribfvEXT);
    return _result;
}

BOOL GLAPIENTRY wglGetPixelFormatAttribivARB(HDC _p0, int _p1, int _p2, UINT _p3, const int *_p4, int *_p5)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetPixelFormatAttribivARB);
    _COUNT(APICall_wglGetPixelFormatAttribivARB);
    CHECKCALL(wglGetPixelFormatAttribivARB);
    _result = DO_REAL_CALL(wglGetPixelFormatAttribivARB(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_wglGetPixelFormatAttribivARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetPixelFormatAttribivARB);
    return _result;
}

BOOL GLAPIENTRY wglGetPixelFormatAttribivEXT(HDC _p0, int _p1, int _p2, UINT _p3, int *_p4, int *_p5)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetPixelFormatAttribivEXT);
    _COUNT(APICall_wglGetPixelFormatAttribivEXT);
    CHECKCALL(wglGetPixelFormatAttribivEXT);
    _result = DO_REAL_CALL(wglGetPixelFormatAttribivEXT(_p0,_p1,_p2,_p3,_p4,_p5));
    _W.writeAPICall(APICall_wglGetPixelFormatAttribivEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetPixelFormatAttribivEXT);
    return _result;
}

PROC GLAPIENTRY wglGetProcAddress(const char *_p0)
{
    PROC _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetProcAddress);
    _COUNT(APICall_wglGetProcAddress);
    // Calling SPECIFIC function instead orginal (assumed that SPECIFIC will call original)
    _result = wglGetProcAddress_SPECIFIC(_p0);
    _W.writeAPICall(APICall_wglGetProcAddress);
    _W.writeMark("(");
    // [GEN-CODE info: Specific user call]
    wglGetProcAddress_SPECIFIC(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    // [GEN-CODE info: Specific user call after return log]
    // [Note: This specific call must log return]
    wglGetProcAddress_SPECIFIC(_p0);
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetProcAddress);
    return _result;
}

int GLAPIENTRY wglGetSwapIntervalEXT()
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetSwapIntervalEXT);
    _COUNT(APICall_wglGetSwapIntervalEXT);
    CHECKCALL(wglGetSwapIntervalEXT);
    _result = DO_REAL_CALL(wglGetSwapIntervalEXT());
    _W.writeAPICall(APICall_wglGetSwapIntervalEXT);
    _W.writeMark("(");
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetSwapIntervalEXT);
    return _result;
}

BOOL GLAPIENTRY wglGetSyncValuesOML(HDC _p0, INT64 *_p1, INT64 *_p2, INT64 *_p3)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglGetSyncValuesOML);
    _COUNT(APICall_wglGetSyncValuesOML);
    CHECKCALL(wglGetSyncValuesOML);
    _result = DO_REAL_CALL(wglGetSyncValuesOML(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_wglGetSyncValuesOML);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglGetSyncValuesOML);
    return _result;
}

BOOL GLAPIENTRY wglIsEnabledFrameLockI3D(BOOL *_p0)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglIsEnabledFrameLockI3D);
    _COUNT(APICall_wglIsEnabledFrameLockI3D);
    CHECKCALL(wglIsEnabledFrameLockI3D);
    _result = DO_REAL_CALL(wglIsEnabledFrameLockI3D(_p0));
    _W.writeAPICall(APICall_wglIsEnabledFrameLockI3D);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglIsEnabledFrameLockI3D);
    return _result;
}

BOOL GLAPIENTRY wglIsEnabledGenlockI3D(HDC _p0, BOOL *_p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglIsEnabledGenlockI3D);
    _COUNT(APICall_wglIsEnabledGenlockI3D);
    CHECKCALL(wglIsEnabledGenlockI3D);
    _result = DO_REAL_CALL(wglIsEnabledGenlockI3D(_p0,_p1));
    _W.writeAPICall(APICall_wglIsEnabledGenlockI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglIsEnabledGenlockI3D);
    return _result;
}

GLboolean GLAPIENTRY wglLoadDisplayColorTableEXT(const GLushort *_p0, GLuint _p1)
{
    GLboolean _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglLoadDisplayColorTableEXT);
    _COUNT(APICall_wglLoadDisplayColorTableEXT);
    CHECKCALL(wglLoadDisplayColorTableEXT);
    _result = DO_REAL_CALL(wglLoadDisplayColorTableEXT(_p0,_p1));
    _W.writeAPICall(APICall_wglLoadDisplayColorTableEXT);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglLoadDisplayColorTableEXT);
    return _result;
}

BOOL GLAPIENTRY wglMakeContextCurrentARB(HDC _p0, HDC _p1, HGLRC _p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglMakeContextCurrentARB);
    _COUNT(APICall_wglMakeContextCurrentARB);
    CHECKCALL(wglMakeContextCurrentARB);
    _result = DO_REAL_CALL(wglMakeContextCurrentARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglMakeContextCurrentARB);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglMakeContextCurrentARB);
    return _result;
}

BOOL GLAPIENTRY wglMakeContextCurrentEXT(HDC _p0, HDC _p1, HGLRC _p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglMakeContextCurrentEXT);
    _COUNT(APICall_wglMakeContextCurrentEXT);
    CHECKCALL(wglMakeContextCurrentEXT);
    _result = DO_REAL_CALL(wglMakeContextCurrentEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglMakeContextCurrentEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglMakeContextCurrentEXT);
    return _result;
}

int GLAPIENTRY wglMakeCurrent(HDC _p0, HGLRC _p1)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglMakeCurrent);
    _COUNT(APICall_wglMakeCurrent);
    // Calling SPECIFIC function instead orginal (assumed that SPECIFIC will call original)
    _result = wglMakeCurrent_SPECIFIC(_p0,_p1);
    _W.writeAPICall(APICall_wglMakeCurrent);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglMakeCurrent);
    return _result;
}

BOOL GLAPIENTRY wglQueryFrameLockMasterI3D(BOOL *_p0)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglQueryFrameLockMasterI3D);
    _COUNT(APICall_wglQueryFrameLockMasterI3D);
    CHECKCALL(wglQueryFrameLockMasterI3D);
    _result = DO_REAL_CALL(wglQueryFrameLockMasterI3D(_p0));
    _W.writeAPICall(APICall_wglQueryFrameLockMasterI3D);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglQueryFrameLockMasterI3D);
    return _result;
}

BOOL GLAPIENTRY wglQueryFrameTrackingI3D(DWORD *_p0, DWORD *_p1, float *_p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglQueryFrameTrackingI3D);
    _COUNT(APICall_wglQueryFrameTrackingI3D);
    CHECKCALL(wglQueryFrameTrackingI3D);
    _result = DO_REAL_CALL(wglQueryFrameTrackingI3D(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglQueryFrameTrackingI3D);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglQueryFrameTrackingI3D);
    return _result;
}

BOOL GLAPIENTRY wglQueryGenlockMaxSourceDelayI3D(HDC _p0, UINT *_p1, UINT *_p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglQueryGenlockMaxSourceDelayI3D);
    _COUNT(APICall_wglQueryGenlockMaxSourceDelayI3D);
    CHECKCALL(wglQueryGenlockMaxSourceDelayI3D);
    _result = DO_REAL_CALL(wglQueryGenlockMaxSourceDelayI3D(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglQueryGenlockMaxSourceDelayI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglQueryGenlockMaxSourceDelayI3D);
    return _result;
}

BOOL GLAPIENTRY wglQueryPbufferARB(HPBUFFERARB _p0, int _p1, int *_p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglQueryPbufferARB);
    _COUNT(APICall_wglQueryPbufferARB);
    CHECKCALL(wglQueryPbufferARB);
    _result = DO_REAL_CALL(wglQueryPbufferARB(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglQueryPbufferARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglQueryPbufferARB);
    return _result;
}

BOOL GLAPIENTRY wglQueryPbufferEXT(HPBUFFEREXT _p0, int _p1, int *_p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglQueryPbufferEXT);
    _COUNT(APICall_wglQueryPbufferEXT);
    CHECKCALL(wglQueryPbufferEXT);
    _result = DO_REAL_CALL(wglQueryPbufferEXT(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglQueryPbufferEXT);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglQueryPbufferEXT);
    return _result;
}

int GLAPIENTRY wglRealizeLayerPalette(HDC _p0, int _p1, int _p2)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglRealizeLayerPalette);
    _COUNT(APICall_wglRealizeLayerPalette);
    CHECKCALL(wglRealizeLayerPalette);
    _result = DO_REAL_CALL(wglRealizeLayerPalette(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglRealizeLayerPalette);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglRealizeLayerPalette);
    return _result;
}

BOOL GLAPIENTRY wglReleaseImageBufferEventsI3D(HDC _p0, const LPVOID *_p1, UINT _p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglReleaseImageBufferEventsI3D);
    _COUNT(APICall_wglReleaseImageBufferEventsI3D);
    CHECKCALL(wglReleaseImageBufferEventsI3D);
    _result = DO_REAL_CALL(wglReleaseImageBufferEventsI3D(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglReleaseImageBufferEventsI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglReleaseImageBufferEventsI3D);
    return _result;
}

int GLAPIENTRY wglReleasePbufferDCARB(HPBUFFERARB _p0, HDC _p1)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglReleasePbufferDCARB);
    _COUNT(APICall_wglReleasePbufferDCARB);
    CHECKCALL(wglReleasePbufferDCARB);
    _result = DO_REAL_CALL(wglReleasePbufferDCARB(_p0,_p1));
    _W.writeAPICall(APICall_wglReleasePbufferDCARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglReleasePbufferDCARB);
    return _result;
}

int GLAPIENTRY wglReleasePbufferDCEXT(HPBUFFEREXT _p0, HDC _p1)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglReleasePbufferDCEXT);
    _COUNT(APICall_wglReleasePbufferDCEXT);
    CHECKCALL(wglReleasePbufferDCEXT);
    _result = DO_REAL_CALL(wglReleasePbufferDCEXT(_p0,_p1));
    _W.writeAPICall(APICall_wglReleasePbufferDCEXT);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglReleasePbufferDCEXT);
    return _result;
}

BOOL GLAPIENTRY wglReleaseTexImageARB(HPBUFFERARB _p0, int _p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglReleaseTexImageARB);
    _COUNT(APICall_wglReleaseTexImageARB);
    CHECKCALL(wglReleaseTexImageARB);
    _result = DO_REAL_CALL(wglReleaseTexImageARB(_p0,_p1));
    _W.writeAPICall(APICall_wglReleaseTexImageARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglReleaseTexImageARB);
    return _result;
}

BOOL GLAPIENTRY wglRestoreBufferRegionARB(HANDLE _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglRestoreBufferRegionARB);
    _COUNT(APICall_wglRestoreBufferRegionARB);
    CHECKCALL(wglRestoreBufferRegionARB);
    _result = DO_REAL_CALL(wglRestoreBufferRegionARB(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_wglRestoreBufferRegionARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglRestoreBufferRegionARB);
    return _result;
}

BOOL GLAPIENTRY wglSaveBufferRegionARB(HANDLE _p0, int _p1, int _p2, int _p3, int _p4)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSaveBufferRegionARB);
    _COUNT(APICall_wglSaveBufferRegionARB);
    CHECKCALL(wglSaveBufferRegionARB);
    _result = DO_REAL_CALL(wglSaveBufferRegionARB(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglSaveBufferRegionARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSaveBufferRegionARB);
    return _result;
}

BOOL GLAPIENTRY wglSetDigitalVideoParametersI3D(HDC _p0, int _p1, const int *_p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSetDigitalVideoParametersI3D);
    _COUNT(APICall_wglSetDigitalVideoParametersI3D);
    CHECKCALL(wglSetDigitalVideoParametersI3D);
    _result = DO_REAL_CALL(wglSetDigitalVideoParametersI3D(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglSetDigitalVideoParametersI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSetDigitalVideoParametersI3D);
    return _result;
}

BOOL GLAPIENTRY wglSetGammaTableI3D(HDC _p0, int _p1, const USHORT *_p2, const USHORT *_p3, const USHORT *_p4)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSetGammaTableI3D);
    _COUNT(APICall_wglSetGammaTableI3D);
    CHECKCALL(wglSetGammaTableI3D);
    _result = DO_REAL_CALL(wglSetGammaTableI3D(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglSetGammaTableI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSetGammaTableI3D);
    return _result;
}

BOOL GLAPIENTRY wglSetGammaTableParametersI3D(HDC _p0, int _p1, const int *_p2)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSetGammaTableParametersI3D);
    _COUNT(APICall_wglSetGammaTableParametersI3D);
    CHECKCALL(wglSetGammaTableParametersI3D);
    _result = DO_REAL_CALL(wglSetGammaTableParametersI3D(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglSetGammaTableParametersI3D);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSetGammaTableParametersI3D);
    return _result;
}

int GLAPIENTRY wglSetLayerPaletteEntries(HDC _p0, int _p1, int _p2, int _p3, const COLORREF *_p4)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSetLayerPaletteEntries);
    _COUNT(APICall_wglSetLayerPaletteEntries);
    CHECKCALL(wglSetLayerPaletteEntries);
    _result = DO_REAL_CALL(wglSetLayerPaletteEntries(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglSetLayerPaletteEntries);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSetLayerPaletteEntries);
    return _result;
}

BOOL GLAPIENTRY wglSetPbufferAttribARB(HPBUFFERARB _p0, const int *_p1)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSetPbufferAttribARB);
    _COUNT(APICall_wglSetPbufferAttribARB);
    CHECKCALL(wglSetPbufferAttribARB);
    _result = DO_REAL_CALL(wglSetPbufferAttribARB(_p0,_p1));
    _W.writeAPICall(APICall_wglSetPbufferAttribARB);
    _W.writeMark("(");
    _W.writeUnknown(&_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSetPbufferAttribARB);
    return _result;
}

int GLAPIENTRY wglSetPixelFormat(HDC _p0, int _p1, const PIXELFORMATDESCRIPTOR *_p2)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSetPixelFormat);
    _COUNT(APICall_wglSetPixelFormat);
    CHECKCALL(wglSetPixelFormat);
    _result = DO_REAL_CALL(wglSetPixelFormat(_p0,_p1,_p2));
    _W.writeAPICall(APICall_wglSetPixelFormat);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    // [GEN-CODE info: Specific user call]
    wglSetPixelFormat_SPECIFIC(_p0,_p1,_p2);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSetPixelFormat);
    return _result;
}

int GLAPIENTRY wglShareLists(HGLRC _p0, HGLRC _p1)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglShareLists);
    _COUNT(APICall_wglShareLists);
    CHECKCALL(wglShareLists);
    _result = DO_REAL_CALL(wglShareLists(_p0,_p1));
    _W.writeAPICall(APICall_wglShareLists);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglShareLists);
    return _result;
}

int GLAPIENTRY wglSwapBuffers(HDC hdc)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSwapBuffers);
    // Specific stats code
    wglSwapBuffers_STAT(hdc);
    _COUNT(APICall_wglSwapBuffers);
    // [GEN-CODE info: Specific user call]
    wglSwapBuffers_SPECIFIC(hdc);
    CHECKCALL(wglSwapBuffers);
    _result = DO_REAL_CALL(wglSwapBuffers(hdc));
    _W.writeAPICall(APICall_wglSwapBuffers);
    _W.writeMark("(");
    _W.write(hdc);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    // [GEN-CODE info: Specific user call after return log]
    wglSwapBuffers_SPECIFIC(hdc);
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSwapBuffers);
    return _result;
}

INT64 GLAPIENTRY wglSwapBuffersMscOML(HDC _p0, INT64 _p1, INT64 _p2, INT64 _p3)
{
    INT64 _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSwapBuffersMscOML);
    _COUNT(APICall_wglSwapBuffersMscOML);
    CHECKCALL(wglSwapBuffersMscOML);
    _result = DO_REAL_CALL(wglSwapBuffersMscOML(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_wglSwapBuffersMscOML);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSwapBuffersMscOML);
    return _result;
}

BOOL GLAPIENTRY wglSwapIntervalEXT(int _p0)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSwapIntervalEXT);
    _COUNT(APICall_wglSwapIntervalEXT);
    CHECKCALL(wglSwapIntervalEXT);
    _result = DO_REAL_CALL(wglSwapIntervalEXT(_p0));
    _W.writeAPICall(APICall_wglSwapIntervalEXT);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSwapIntervalEXT);
    return _result;
}

int GLAPIENTRY wglSwapLayerBuffers(HDC _p0, unsigned int _p1)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSwapLayerBuffers);
    _COUNT(APICall_wglSwapLayerBuffers);
    CHECKCALL(wglSwapLayerBuffers);
    _result = DO_REAL_CALL(wglSwapLayerBuffers(_p0,_p1));
    _W.writeAPICall(APICall_wglSwapLayerBuffers);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSwapLayerBuffers);
    return _result;
}

INT64 GLAPIENTRY wglSwapLayerBuffersMscOML(HDC _p0, int _p1, INT64 _p2, INT64 _p3, INT64 _p4)
{
    INT64 _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglSwapLayerBuffersMscOML);
    _COUNT(APICall_wglSwapLayerBuffersMscOML);
    CHECKCALL(wglSwapLayerBuffersMscOML);
    _result = DO_REAL_CALL(wglSwapLayerBuffersMscOML(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglSwapLayerBuffersMscOML);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglSwapLayerBuffersMscOML);
    return _result;
}

int GLAPIENTRY wglUseFontBitmapsA(HDC _p0, unsigned long _p1, unsigned long _p2, unsigned long _p3)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglUseFontBitmapsA);
    _COUNT(APICall_wglUseFontBitmapsA);
    CHECKCALL(wglUseFontBitmapsA);
    _result = DO_REAL_CALL(wglUseFontBitmapsA(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_wglUseFontBitmapsA);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglUseFontBitmapsA);
    return _result;
}

int GLAPIENTRY wglUseFontBitmapsW(HDC _p0, unsigned long _p1, unsigned long _p2, unsigned long _p3)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglUseFontBitmapsW);
    _COUNT(APICall_wglUseFontBitmapsW);
    CHECKCALL(wglUseFontBitmapsW);
    _result = DO_REAL_CALL(wglUseFontBitmapsW(_p0,_p1,_p2,_p3));
    _W.writeAPICall(APICall_wglUseFontBitmapsW);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglUseFontBitmapsW);
    return _result;
}

int GLAPIENTRY wglUseFontOutlinesA(HDC _p0, unsigned long _p1, unsigned long _p2, unsigned long _p3, float _p4, float _p5, int _p6, LPGLYPHMETRICSFLOAT _p7)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglUseFontOutlinesA);
    _COUNT(APICall_wglUseFontOutlinesA);
    CHECKCALL(wglUseFontOutlinesA);
    _result = DO_REAL_CALL(wglUseFontOutlinesA(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_wglUseFontOutlinesA);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeUnknown(&_p7);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglUseFontOutlinesA);
    return _result;
}

int GLAPIENTRY wglUseFontOutlinesW(HDC _p0, unsigned long _p1, unsigned long _p2, unsigned long _p3, float _p4, float _p5, int _p6, LPGLYPHMETRICSFLOAT _p7)
{
    int _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglUseFontOutlinesW);
    _COUNT(APICall_wglUseFontOutlinesW);
    CHECKCALL(wglUseFontOutlinesW);
    _result = DO_REAL_CALL(wglUseFontOutlinesW(_p0,_p1,_p2,_p3,_p4,_p5,_p6,_p7));
    _W.writeAPICall(APICall_wglUseFontOutlinesW);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.write(_p1);
    _W.writeMark(",");
    _W.write(_p2);
    _W.writeMark(",");
    _W.write(_p3);
    _W.writeMark(",");
    _W.write(_p4);
    _W.writeMark(",");
    _W.write(_p5);
    _W.writeMark(",");
    _W.write(_p6);
    _W.writeMark(",");
    _W.writeUnknown(&_p7);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResult(_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglUseFontOutlinesW);
    return _result;
}

BOOL GLAPIENTRY wglWaitForMscOML(HDC _p0, INT64 _p1, INT64 _p2, INT64 _p3, INT64 *_p4, INT64 *_p5, INT64 *_p6)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglWaitForMscOML);
    _COUNT(APICall_wglWaitForMscOML);
    CHECKCALL(wglWaitForMscOML);
    _result = DO_REAL_CALL(wglWaitForMscOML(_p0,_p1,_p2,_p3,_p4,_p5,_p6));
    _W.writeAPICall(APICall_wglWaitForMscOML);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(",");
    _W.writeUnknown(&_p5);
    _W.writeMark(",");
    _W.writeUnknown(&_p6);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglWaitForMscOML);
    return _result;
}

BOOL GLAPIENTRY wglWaitForSbcOML(HDC _p0, INT64 _p1, INT64 *_p2, INT64 *_p3, INT64 *_p4)
{
    BOOL _result;
    GLInterceptor::init();
    GLInterceptor::startTWCallMode(APICall_wglWaitForSbcOML);
    _COUNT(APICall_wglWaitForSbcOML);
    CHECKCALL(wglWaitForSbcOML);
    _result = DO_REAL_CALL(wglWaitForSbcOML(_p0,_p1,_p2,_p3,_p4));
    _W.writeAPICall(APICall_wglWaitForSbcOML);
    _W.writeMark("(");
    _W.write(_p0);
    _W.writeMark(",");
    _W.writeUnknown(&_p1);
    _W.writeMark(",");
    _W.writeUnknown(&_p2);
    _W.writeMark(",");
    _W.writeUnknown(&_p3);
    _W.writeMark(",");
    _W.writeUnknown(&_p4);
    _W.writeMark(")");
    _W.writeMark("=");
    if ( GLInterceptor::isReturnTraced() )
        _W.writeResultUnknown(&_result);
    else
        _W.writeResult("NOT TRACED");
    _W.writeMark("\n");
    GLInterceptor::restoreTWMode(APICall_wglWaitForSbcOML);
    return _result;
}

